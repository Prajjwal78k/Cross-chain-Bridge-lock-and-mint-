{"id":"6208ba0f21207bf8b2ad51104e7a8b73","_format":"hh-sol-build-info-1","solcVersion":"0.8.30","solcLongVersion":"0.8.30+commit.73712a01","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /// @inheritdoc IERC1155\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /// @inheritdoc IERC1155\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC1155\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /// @inheritdoc IERC1155\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /// @inheritdoc IERC1155\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes[] storage arr, uint256 pos) internal pure returns (StorageSlot.BytesSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytesSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(string[] storage arr, uint256 pos) internal pure returns (StorageSlot.StringSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getStringSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes[] memory arr, uint256 pos) internal pure returns (bytes memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(string[] memory arr, uint256 pos) internal pure returns (string memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(string[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/BridgedToken.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.30;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract WrappedERC20 is ERC20, Ownable {\n    constructor(string memory name, string memory symbol, address bridge) ERC20(name, symbol) Ownable(bridge){}\n    \n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n}    \n"},"contracts/Dest_Bridge.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.30 ;\n\nimport \"./BridgedToken.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title Destination Bridge Contract\n/// @notice Mints wrapped tokens on the destination chain upon validated lock events\n/// @dev Owner-restricted mint with nonce replay protection. The relayer (owner) calls `mintTokens`.\ncontract Dest_Bridge is Ownable {\n    /// @notice Initialize ownership; set to a relayer or governance address in deployment\n    /// @param initialOwner The address that will have permission to mint\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    /// @notice Tracks processed nonces to prevent replay\n    mapping(uint256=>bool) public doneNonces;\n\n    /// @notice Emitted after successful mint on destination\n    /// @param user The recipient of the wrapped tokens\n    /// @param token The wrapped token contract that minted\n    /// @param amount The amount minted\n    /// @param nonce The corresponding source-chain lock nonce\n    event Mint(address indexed user, address indexed token, uint256 amount, uint256 nonce);\n\n    /// @notice Mint wrapped tokens to a user for a specific nonce\n    /// @dev Only the contract owner can call. Caller is expected to be an off-chain relayer.\n    /// @param user The destination recipient\n    /// @param token The wrapped token contract to mint\n    /// @param amount The amount to mint\n    /// @param nonce The source-chain nonce ensuring idempotence\n    function mintTokens(address user, address token, uint amount, uint nonce) external onlyOwner{\n        require(user != address(0), \"MintBridge: invalid user\");\n        require(!doneNonces[nonce], \"MintBridge: nonce already used\");\n        doneNonces[nonce]=true;\n        WrappedERC20(token).mint(user, amount);\n        emit Mint(user, token, amount, nonce);\n    }\n}"},"contracts/Source_bridge.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.30;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\n/// @title Source Bridge Contract\n/// @notice Locks tokens on the source chain and emits a canonical event for off-chain relayers\n/// @dev This contract only handles ERC20 locks; it emits the amount and a monotonically increasing nonce\ncontract Source_bridge {\n    /// @notice Monotonically increasing identifier for each `Locked` event\n    uint256 public nonce;\n\n    /// @notice Tracks total amount locked per user per token\n    /// @dev LockAmtStore[user][token] => amount locked\n    mapping (address => mapping(address =>uint)) public LockAmtStore;\n\n    /// @notice Emitted when a user locks tokens in the bridge\n    /// @param user The address locking the tokens\n    /// @param token The ERC20 token being locked\n    /// @param amount The amount of tokens locked\n    /// @param nonce Unique sequential identifier for this lock\n    event Locked(address user, address token, uint amount,uint256 nonce);\n\n    /// @notice Initializes the bridge with nonce = 0\n    constructor(){\n        nonce=0;\n    }\n\n    /// @notice Locks tokens in the bridge contract\n    /// @dev Requires prior ERC20 approval for this contract to transfer `amount` from msg.sender\n    /// @param token The address of the ERC20 token to be locked\n    /// @param amount The amount of tokens to be locked\n    function lockTokens(address token, uint amount) public {\n        require(amount>0,\"Amount must be >0\");\n        bool success= ERC20(token).transferFrom(msg.sender,address(this),amount);\n        require(success,\"Transfer Failed\");\n        LockAmtStore[msg.sender][token]+=amount;\n        emit Locked(msg.sender,token,amount,nonce);\n        nonce++;\n\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[4392],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":4393,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":4392,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,4392],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[4330],"Context":[4392],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[6124],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[6136]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1325,"src":"135:40:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1383,"src":"176:73:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"184:19:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1537,"src":"250:54:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"258:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":4393,"src":"305:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"313:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":6125,"src":"354:69:2","symbolAliases":[{"foreign":{"id":295,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"362:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":296,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"371:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":4331,"src":"424:46:2","symbolAliases":[{"foreign":{"id":298,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"432:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":285,"src":"471:67:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"479:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["754:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4392,"src":"754:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"754:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["763:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"763:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"763:6:2"},{"baseName":{"id":307,"name":"IERC1155","nameLocations":["771:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"771:8:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"771:8:2"},{"baseName":{"id":309,"name":"IERC1155MetadataURI","nameLocations":["781:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1382,"src":"781:19:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"781:19:2"},{"baseName":{"id":311,"name":"IERC1155Errors","nameLocations":["802:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"802:14:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"802:14:2"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"540:184:2","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1201,"linearizedBaseContracts":[1201,284,1382,1324,6124,6136,4392],"name":"ERC1155","nameLocation":"743:7:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":316,"libraryName":{"id":313,"name":"Arrays","nameLocations":["829:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4330,"src":"829:6:2"},"nodeType":"UsingForDirective","src":"823:27:2","typeName":{"baseType":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ArrayTypeName","src":"840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":320,"libraryName":{"id":317,"name":"Arrays","nameLocations":["861:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4330,"src":"861:6:2"},"nodeType":"UsingForDirective","src":"855:27:2","typeName":{"baseType":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":319,"nodeType":"ArrayTypeName","src":"872:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":326,"mutability":"mutable","name":"_balances","nameLocation":"955:9:2","nodeType":"VariableDeclaration","scope":1201,"src":"888:76:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":325,"keyName":"id","keyNameLocation":"904:2:2","keyType":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":324,"keyName":"account","keyNameLocation":"926:7:2","keyType":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":332,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:2","nodeType":"VariableDeclaration","scope":1201,"src":"971:88:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"987:7:2","keyType":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"keyName":"operator","keyNameLocation":"1014:8:2","keyType":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:2","nodeType":"VariableDeclaration","scope":1201,"src":"1180:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":344,"nodeType":"Block","src":"1281:30:2","statements":[{"expression":{"arguments":[{"id":341,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"1299:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":340,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1291:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"1291:13:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"1206:38:2","text":" @dev See {_setURI}."},"id":345,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:2","nodeType":"VariableDeclaration","scope":345,"src":"1261:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":336,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:2"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"1281:0:2"},"scope":1201,"src":"1249:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6123,6135],"body":{"id":375,"nodeType":"Block","src":"1453:197:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1482:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":358,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"1502:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}],"id":357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1497:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1324","typeString":"type(contract IERC1155)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1512:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1497:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1482:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1539:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":364,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"1559:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1554:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1382","typeString":"type(contract IERC1155MetadataURI)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1580:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1554:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1539:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:109:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1631:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":369,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1607:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1201_$","typeString":"type(contract super ERC1155)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1613:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6123,"src":"1607:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1607:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:161:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":355,"id":374,"nodeType":"Return","src":"1463:180:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1317:23:2","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":376,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1354:17:2","nodeType":"FunctionDefinition","overrides":{"id":352,"nodeType":"OverrideSpecifier","overrides":[{"id":350,"name":"ERC165","nameLocations":["1421:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"1421:6:2"},{"id":351,"name":"IERC165","nameLocations":["1429:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":6136,"src":"1429:7:2"}],"src":"1412:25:2"},"parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"interfaceId","nameLocation":"1379:11:2","nodeType":"VariableDeclaration","scope":376,"src":"1372:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1372:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1371:20:2"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"1447:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"1447:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1446:6:2"},"scope":1201,"src":"1345:305:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1381],"body":{"id":386,"nodeType":"Block","src":"2124:28:2","statements":[{"expression":{"id":384,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2141:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":383,"id":385,"nodeType":"Return","src":"2134:11:2"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1656:388:2","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2058:3:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2062:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2061:18:2"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2109:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"2109:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2108:15:2"},"scope":1201,"src":"2049:103:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1262],"body":{"id":403,"nodeType":"Block","src":"2273:46:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":397,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2290:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":399,"indexExpression":{"id":398,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2300:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":401,"indexExpression":{"id":400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2304:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":396,"id":402,"nodeType":"Return","src":"2283:29:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2158:24:2","text":"@inheritdoc IERC1155"},"functionSelector":"00fdd58e","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2196:9:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"2214:7:2","nodeType":"VariableDeclaration","scope":404,"src":"2206:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"id","nameLocation":"2231:2:2","nodeType":"VariableDeclaration","scope":404,"src":"2223:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2205:29:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2264:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:9:2"},"scope":1201,"src":"2187:132:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1275],"body":{"id":473,"nodeType":"Block","src":"2618:410:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":417,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2632:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2641:6:2","memberName":"length","nodeType":"MemberAccess","src":"2632:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":419,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2651:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2655:6:2","memberName":"length","nodeType":"MemberAccess","src":"2651:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2632:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"IfStatement","src":"2628:121:2","trueBody":{"id":429,"nodeType":"Block","src":"2663:86:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":423,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2710:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2714:6:2","memberName":"length","nodeType":"MemberAccess","src":"2710:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":425,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2722:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2731:6:2","memberName":"length","nodeType":"MemberAccess","src":"2722:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":422,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2684:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":428,"nodeType":"RevertStatement","src":"2677:61:2"}]}},{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"batchBalances","nameLocation":"2776:13:2","nodeType":"VariableDeclaration","scope":473,"src":"2759:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2759:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ArrayTypeName","src":"2759:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"expression":{"id":439,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2806:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2815:6:2","memberName":"length","nodeType":"MemberAccess","src":"2806:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2792:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"2796:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2759:63:2"},{"body":{"id":469,"nodeType":"Block","src":"2879:112:2","statements":[{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":454,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2893:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":456,"indexExpression":{"id":455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2907:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2893:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2950:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":458,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2922:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"2922:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2977:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":462,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2954:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2958:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"2954:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":457,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2912:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2893:87:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"2893:87:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2853:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":448,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2857:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2866:6:2","memberName":"length","nodeType":"MemberAccess","src":"2857:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2853:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"initializationExpression":{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"i","nameLocation":"2846:1:2","nodeType":"VariableDeclaration","scope":470,"src":"2838:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2838:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":446,"initialValue":{"hexValue":"30","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2850:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2838:13:2"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2874:3:2","subExpression":{"id":451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2876:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"nodeType":"ExpressionStatement","src":"2874:3:2"},"nodeType":"ForStatement","src":"2833:158:2"},{"expression":{"id":471,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3008:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":416,"id":472,"nodeType":"Return","src":"3001:20:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2325:146:2","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2485:14:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"accounts","nameLocation":"2526:8:2","nodeType":"VariableDeclaration","scope":474,"src":"2509:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"2509:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":407,"nodeType":"ArrayTypeName","src":"2509:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"ids","nameLocation":"2561:3:2","nodeType":"VariableDeclaration","scope":474,"src":"2544:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2544:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":410,"nodeType":"ArrayTypeName","src":"2544:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2499:71:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"2600:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":414,"nodeType":"ArrayTypeName","src":"2600:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2599:18:2"},"scope":1201,"src":"2476:552:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":489,"nodeType":"Block","src":"3138:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"3167:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3181:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3191:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":482,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3148:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"3148:52:2"}]},"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"3034:24:2","text":"@inheritdoc IERC1155"},"functionSelector":"a22cb465","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3072:17:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"operator","nameLocation":"3098:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3090:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"approved","nameLocation":"3113:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3108:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":478,"name":"bool","nodeType":"ElementaryTypeName","src":"3108:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3089:33:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"3138:0:2"},"scope":1201,"src":"3063:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1293],"body":{"id":506,"nodeType":"Block","src":"3338:61:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":500,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3355:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":502,"indexExpression":{"id":501,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3374:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":504,"indexExpression":{"id":503,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3383:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":505,"nodeType":"Return","src":"3348:44:2"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"3213:24:2","text":"@inheritdoc IERC1155"},"functionSelector":"e985e9c5","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3251:16:2","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"3276:7:2","nodeType":"VariableDeclaration","scope":507,"src":"3268:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"3268:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"operator","nameLocation":"3293:8:2","nodeType":"VariableDeclaration","scope":507,"src":"3285:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"3285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3267:35:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"3332:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"3332:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3331:6:2"},"scope":1201,"src":"3242:157:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":550,"nodeType":"Block","src":"3547:238:2","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"sender","nameLocation":"3565:6:2","nodeType":"VariableDeclaration","scope":550,"src":"3557:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"3557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":523,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"3574:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3557:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3600:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":527,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3608:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3600:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3618:31:2","subExpression":{"arguments":[{"id":530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3636:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3642:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3619:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3600:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"3596:129:2","trueBody":{"id":540,"nodeType":"Block","src":"3651:74:2","statements":[{"errorCall":{"arguments":[{"id":536,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3701:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3709:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3672:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":539,"nodeType":"RevertStatement","src":"3665:49:2"}]}},{"expression":{"arguments":[{"id":543,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3752:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3758:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3762:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3766:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":547,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3773:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":542,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"3734:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"3734:44:2"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"3405:24:2","text":"@inheritdoc IERC1155"},"functionSelector":"f242432a","id":551,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3443:16:2","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"3468:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3460:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"3482:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3474:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"id","nameLocation":"3494:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3486:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"3506:5:2","nodeType":"VariableDeclaration","scope":551,"src":"3498:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3498:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"data","nameLocation":"3526:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3513:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"3513:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:72:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3547:0:2"},"scope":1201,"src":"3434:351:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":596,"nodeType":"Block","src":"4004:245:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"sender","nameLocation":"4022:6:2","nodeType":"VariableDeclaration","scope":596,"src":"4014:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4014:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"4031:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4014:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4057:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":573,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4065:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4057:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4075:31:2","subExpression":{"arguments":[{"id":576,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4093:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4099:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4076:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4076:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4057:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":587,"nodeType":"IfStatement","src":"4053:129:2","trueBody":{"id":586,"nodeType":"Block","src":"4108:74:2","statements":[{"errorCall":{"arguments":[{"id":582,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4158:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4166:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":581,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4129:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4129:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":585,"nodeType":"RevertStatement","src":"4122:49:2"}]}},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4214:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4220:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4224:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":592,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4229:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4237:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":588,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"4191:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4191:51:2"}]},"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"3791:24:2","text":"@inheritdoc IERC1155"},"functionSelector":"2eb2c2d6","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3829:21:2","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"from","nameLocation":"3868:4:2","nodeType":"VariableDeclaration","scope":597,"src":"3860:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"3860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"to","nameLocation":"3890:2:2","nodeType":"VariableDeclaration","scope":597,"src":"3882:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"3882:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"ids","nameLocation":"3919:3:2","nodeType":"VariableDeclaration","scope":597,"src":"3902:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ArrayTypeName","src":"3902:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"values","nameLocation":"3949:6:2","nodeType":"VariableDeclaration","scope":597,"src":"3932:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"3932:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":561,"nodeType":"ArrayTypeName","src":"3932:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"3978:4:2","nodeType":"VariableDeclaration","scope":597,"src":"3965:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"3965:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3850:138:2"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"4004:0:2"},"scope":1201,"src":"3820:429:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"5057:1174:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":611,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5071:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:2","memberName":"length","nodeType":"MemberAccess","src":"5071:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":613,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5085:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5092:6:2","memberName":"length","nodeType":"MemberAccess","src":"5085:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5071:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"5067:117:2","trueBody":{"id":623,"nodeType":"Block","src":"5100:84:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":617,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5147:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5151:6:2","memberName":"length","nodeType":"MemberAccess","src":"5147:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":619,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5159:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5166:6:2","memberName":"length","nodeType":"MemberAccess","src":"5159:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5121:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":622,"nodeType":"RevertStatement","src":"5114:59:2"}]}},{"assignments":[626],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"5202:8:2","nodeType":"VariableDeclaration","scope":749,"src":"5194:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"5194:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":629,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":627,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"5213:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5194:31:2"},{"body":{"id":710,"nodeType":"Block","src":"5277:650:2","statements":[{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"id","nameLocation":"5299:2:2","nodeType":"VariableDeclaration","scope":710,"src":"5291:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5291:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"id":645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5327:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5304:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5308:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"5304:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5304:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5291:38:2"},{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"5351:5:2","nodeType":"VariableDeclaration","scope":710,"src":"5343:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"5343:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5385:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":650,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5359:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5366:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"5359:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5359:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5343:44:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5406:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5422:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:2","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5406:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"5402:420:2","trueBody":{"id":692,"nodeType":"Block","src":"5426:396:2","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"fromBalance","nameLocation":"5452:11:2","nodeType":"VariableDeclaration","scope":692,"src":"5444:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5444:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":668,"initialValue":{"baseExpression":{"baseExpression":{"id":663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5466:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":665,"indexExpression":{"id":664,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5476:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":667,"indexExpression":{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5480:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5444:41:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5507:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5521:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5507:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"IfStatement","src":"5503:129:2","trueBody":{"id":679,"nodeType":"Block","src":"5528:104:2","statements":[{"errorCall":{"arguments":[{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5584:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5590:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5603:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":676,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5610:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5557:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256,uint256) pure returns (error)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5557:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":678,"nodeType":"RevertStatement","src":"5550:63:2"}]}},{"id":691,"nodeType":"UncheckedBlock","src":"5649:159:2","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":681,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5748:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":684,"indexExpression":{"id":682,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5758:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5748:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":685,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5762:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5748:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5770:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5784:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5770:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5748:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"5748:41:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5840:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5854:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5846:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"5846:7:2","typeDescriptions":{}}},"id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5840:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"5836:81:2","trueBody":{"id":708,"nodeType":"Block","src":"5858:59:2","statements":[{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5876:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":703,"indexExpression":{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5886:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5876:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":704,"indexExpression":{"id":702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5890:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5876:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5897:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5876:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"5876:26:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5256:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":635,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5260:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5264:6:2","memberName":"length","nodeType":"MemberAccess","src":"5260:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5256:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":711,"initializationExpression":{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"i","nameLocation":"5249:1:2","nodeType":"VariableDeclaration","scope":711,"src":"5241:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":633,"initialValue":{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5253:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5241:13:2"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5272:3:2","subExpression":{"id":638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5274:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"5272:3:2"},"nodeType":"ForStatement","src":"5236:691:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":712,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5941:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5945:6:2","memberName":"length","nodeType":"MemberAccess","src":"5941:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5955:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5941:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":747,"nodeType":"Block","src":"6149:76:2","statements":[{"eventCall":{"arguments":[{"id":740,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6182:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6192:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6198:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6202:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":744,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6207:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":739,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6168:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6168:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"6163:51:2"}]},"id":748,"nodeType":"IfStatement","src":"5937:288:2","trueBody":{"id":738,"nodeType":"Block","src":"5958:185:2","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"id","nameLocation":"5980:2:2","nodeType":"VariableDeclaration","scope":738,"src":"5972:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"5972:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6008:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":718,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5985:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5989:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"5985:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5985:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5972:38:2"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"value","nameLocation":"6032:5:2","nodeType":"VariableDeclaration","scope":738,"src":"6024:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6024:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6066:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":725,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6040:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6047:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"6040:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6024:44:2"},{"eventCall":{"arguments":[{"id":731,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6102:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6112:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6118:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":734,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6122:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6126:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6087:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"EmitStatement","src":"6082:50:2"}]}}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4255:690:2","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4959:7:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"4975:4:2","nodeType":"VariableDeclaration","scope":750,"src":"4967:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"4967:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"4989:2:2","nodeType":"VariableDeclaration","scope":750,"src":"4981:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"4981:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"ids","nameLocation":"5010:3:2","nodeType":"VariableDeclaration","scope":750,"src":"4993:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":604,"nodeType":"ArrayTypeName","src":"4993:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"values","nameLocation":"5032:6:2","nodeType":"VariableDeclaration","scope":750,"src":"5015:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5015:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ArrayTypeName","src":"5015:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4966:73:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"5057:0:2"},"scope":1201,"src":"4950:1281:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"7001:509:2","statements":[{"expression":{"arguments":[{"id":767,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7019:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7025:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7029:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":770,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7034:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":766,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7011:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"7011:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7055:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7069:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7061:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"7061:7:2","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7061:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7055:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":828,"nodeType":"IfStatement","src":"7051:453:2","trueBody":{"id":827,"nodeType":"Block","src":"7073:431:2","statements":[{"assignments":[780],"declarations":[{"constant":false,"id":780,"mutability":"mutable","name":"operator","nameLocation":"7095:8:2","nodeType":"VariableDeclaration","scope":827,"src":"7087:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7087:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"7106:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7087:31:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":784,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7136:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7140:6:2","memberName":"length","nodeType":"MemberAccess","src":"7136:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7136:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":825,"nodeType":"Block","src":"7382:112:2","statements":[{"expression":{"arguments":[{"id":817,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7441:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7451:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7457:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7461:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":821,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7466:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":822,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7474:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":814,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7400:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7413:27:2","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"7400:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:79:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":824,"nodeType":"ExpressionStatement","src":"7400:79:2"}]},"id":826,"nodeType":"IfStatement","src":"7132:362:2","trueBody":{"id":813,"nodeType":"Block","src":"7153:223:2","statements":[{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"id","nameLocation":"7179:2:2","nodeType":"VariableDeclaration","scope":813,"src":"7171:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7171:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":794,"initialValue":{"arguments":[{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7207:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":790,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7184:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7188:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"7184:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7171:38:2"},{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"value","nameLocation":"7235:5:2","nodeType":"VariableDeclaration","scope":813,"src":"7227:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7227:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":797,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7243:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7250:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"7243:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7243:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7227:44:2"},{"expression":{"arguments":[{"id":805,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7325:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7335:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7341:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7345:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"7349:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7356:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":802,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7289:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7302:22:2","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"7289:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7289:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"7289:72:2"}]}}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"6237:568:2","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"6819:26:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"from","nameLocation":"6863:4:2","nodeType":"VariableDeclaration","scope":830,"src":"6855:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"6855:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"6885:2:2","nodeType":"VariableDeclaration","scope":830,"src":"6877:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"6877:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"ids","nameLocation":"6914:3:2","nodeType":"VariableDeclaration","scope":830,"src":"6897:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"6897:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ArrayTypeName","src":"6897:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"values","nameLocation":"6944:6:2","nodeType":"VariableDeclaration","scope":830,"src":"6927:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ArrayTypeName","src":"6927:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"data","nameLocation":"6973:4:2","nodeType":"VariableDeclaration","scope":830,"src":"6960:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"6960:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6845:138:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"7001:0:2"},"scope":1201,"src":"6810:700:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"8075:355:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8089:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8103:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8095:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"8095:7:2","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8095:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8089:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"IfStatement","src":"8085:88:2","trueBody":{"id":857,"nodeType":"Block","src":"8107:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8159:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8151:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"8151:7:2","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":850,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8128:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8128:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":856,"nodeType":"RevertStatement","src":"8121:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8186:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8202:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:2","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8186:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":873,"nodeType":"IfStatement","src":"8182:88:2","trueBody":{"id":872,"nodeType":"Block","src":"8206:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8256:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8248:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"8248:7:2","typeDescriptions":{}}},"id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8248:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":865,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8227:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":871,"nodeType":"RevertStatement","src":"8220:39:2"}]}},{"assignments":[878,881],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"ids","nameLocation":"8297:3:2","nodeType":"VariableDeclaration","scope":895,"src":"8280:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8280:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ArrayTypeName","src":"8280:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"values","nameLocation":"8319:6:2","nodeType":"VariableDeclaration","scope":895,"src":"8302:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8302:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":880,"nodeType":"ArrayTypeName","src":"8302:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[{"id":883,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8348:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"8352:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":882,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8329:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8279:79:2"},{"expression":{"arguments":[{"id":888,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8395:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8401:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"8405:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":891,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"8410:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":892,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"8418:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":887,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8368:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8368:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"8368:55:2"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"7516:446:2","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"7976:17:2","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"from","nameLocation":"8002:4:2","nodeType":"VariableDeclaration","scope":896,"src":"7994:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"7994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"to","nameLocation":"8016:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8008:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"8008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"id","nameLocation":"8028:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8020:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"8020:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"8040:5:2","nodeType":"VariableDeclaration","scope":896,"src":"8032:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8032:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"data","nameLocation":"8060:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8047:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":840,"name":"bytes","nodeType":"ElementaryTypeName","src":"8047:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7993:72:2"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"8075:0:2"},"scope":1201,"src":"7967:463:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"9010:266:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9024:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9038:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9030:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"9030:7:2","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9030:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9024:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"9020:88:2","trueBody":{"id":925,"nodeType":"Block","src":"9042:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9094:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9086:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:2","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9086:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":918,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"9063:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9063:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":924,"nodeType":"RevertStatement","src":"9056:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9121:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9137:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9129:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"9129:7:2","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9129:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9121:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":941,"nodeType":"IfStatement","src":"9117:88:2","trueBody":{"id":940,"nodeType":"Block","src":"9141:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9191:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9183:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9183:7:2","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9183:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":933,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"9162:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":939,"nodeType":"RevertStatement","src":"9155:39:2"}]}},{"expression":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9241:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9247:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"9251:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":946,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9256:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":947,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9264:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":942,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"9214:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"9214:55:2"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"8436:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"8840:22:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"from","nameLocation":"8880:4:2","nodeType":"VariableDeclaration","scope":951,"src":"8872:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"8872:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"to","nameLocation":"8902:2:2","nodeType":"VariableDeclaration","scope":951,"src":"8894:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"ids","nameLocation":"8931:3:2","nodeType":"VariableDeclaration","scope":951,"src":"8914:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"8914:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":903,"nodeType":"ArrayTypeName","src":"8914:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"values","nameLocation":"8961:6:2","nodeType":"VariableDeclaration","scope":951,"src":"8944:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"8944:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":906,"nodeType":"ArrayTypeName","src":"8944:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"data","nameLocation":"8990:4:2","nodeType":"VariableDeclaration","scope":951,"src":"8977:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":908,"name":"bytes","nodeType":"ElementaryTypeName","src":"8977:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8862:138:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"9010:0:2"},"scope":1201,"src":"8831:445:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"10154:30:2","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"10164:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":958,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10171:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10164:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":960,"nodeType":"ExpressionStatement","src":"10164:13:2"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"9282:811:2","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10107:7:2","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"newuri","nameLocation":"10129:6:2","nodeType":"VariableDeclaration","scope":962,"src":"10115:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":953,"name":"string","nodeType":"ElementaryTypeName","src":"10115:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10114:22:2"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"10154:0:2"},"scope":1201,"src":"10098:86:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"10644:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10658:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10672:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"10664:7:2","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10664:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10658:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":988,"nodeType":"IfStatement","src":"10654:88:2","trueBody":{"id":987,"nodeType":"Block","src":"10676:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10728:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10720:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"10720:7:2","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10720:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":980,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10697:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10697:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":986,"nodeType":"RevertStatement","src":"10690:41:2"}]}},{"assignments":[993,996],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"ids","nameLocation":"10769:3:2","nodeType":"VariableDeclaration","scope":1013,"src":"10752:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10752:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ArrayTypeName","src":"10752:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"values","nameLocation":"10791:6:2","nodeType":"VariableDeclaration","scope":1013,"src":"10774:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"10774:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ArrayTypeName","src":"10774:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1001,"initialValue":{"arguments":[{"id":998,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"10820:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"10824:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10801:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10801:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10751:79:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10875:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10867:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"10867:7:2","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10867:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10879:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"10883:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1009,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"10888:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1010,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"10896:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1002,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"10840:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"ExpressionStatement","src":"10840:61:2"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"10190:367:2","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10571:5:2","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"to","nameLocation":"10585:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10577:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"10577:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"id","nameLocation":"10597:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10589:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"10589:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"value","nameLocation":"10609:5:2","nodeType":"VariableDeclaration","scope":1014,"src":"10601:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"10601:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"data","nameLocation":"10629:4:2","nodeType":"VariableDeclaration","scope":1014,"src":"10616:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"10616:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10576:58:2"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"10644:0:2"},"scope":1201,"src":"10562:346:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"11446:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11460:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:2","typeDescriptions":{}}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11460:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1042,"nodeType":"IfStatement","src":"11456:88:2","trueBody":{"id":1041,"nodeType":"Block","src":"11478:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11530:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11522:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"11522:7:2","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11522:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"11499:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11499:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1040,"nodeType":"RevertStatement","src":"11492:41:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11588:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11580:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"11580:7:2","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11580:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11592:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"11596:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1050,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"11601:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1051,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11609:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1043,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11553:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11553:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"11553:61:2"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"10914:420:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11348:10:2","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"to","nameLocation":"11367:2:2","nodeType":"VariableDeclaration","scope":1055,"src":"11359:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"11359:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"ids","nameLocation":"11388:3:2","nodeType":"VariableDeclaration","scope":1055,"src":"11371:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"11371:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ArrayTypeName","src":"11371:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"values","nameLocation":"11410:6:2","nodeType":"VariableDeclaration","scope":1055,"src":"11393:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11393:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1022,"nodeType":"ArrayTypeName","src":"11393:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"data","nameLocation":"11431:4:2","nodeType":"VariableDeclaration","scope":1055,"src":"11418:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1024,"name":"bytes","nodeType":"ElementaryTypeName","src":"11418:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11358:78:2"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"11446:0:2"},"scope":1201,"src":"11339:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"11980:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"11994:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12010:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12002:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"12002:7:2","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12002:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11994:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"11990:88:2","trueBody":{"id":1078,"nodeType":"Block","src":"12014:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12056:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"12056:7:2","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12056:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1071,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12035:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12035:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1077,"nodeType":"RevertStatement","src":"12028:39:2"}]}},{"assignments":[1084,1087],"declarations":[{"constant":false,"id":1084,"mutability":"mutable","name":"ids","nameLocation":"12105:3:2","nodeType":"VariableDeclaration","scope":1104,"src":"12088:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"12088:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ArrayTypeName","src":"12088:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"values","nameLocation":"12127:6:2","nodeType":"VariableDeclaration","scope":1104,"src":"12110:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"12110:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1086,"nodeType":"ArrayTypeName","src":"12110:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1092,"initialValue":{"arguments":[{"id":1089,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12156:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"12160:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1088,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12137:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12087:79:2"},{"expression":{"arguments":[{"id":1094,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12203:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12217:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12209:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"12209:7:2","typeDescriptions":{}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12209:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12221:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1100,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"12226:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12234:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1093,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12176:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12176:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"12176:61:2"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"11627:283:2","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11924:5:2","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"from","nameLocation":"11938:4:2","nodeType":"VariableDeclaration","scope":1105,"src":"11930:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"11930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"id","nameLocation":"11952:2:2","nodeType":"VariableDeclaration","scope":1105,"src":"11944:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"11944:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"value","nameLocation":"11964:5:2","nodeType":"VariableDeclaration","scope":1105,"src":"11956:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"11956:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11929:41:2"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"11980:0:2"},"scope":1201,"src":"11915:329:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"12690:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"12704:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12720:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12712:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"12712:7:2","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12712:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12704:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"IfStatement","src":"12700:88:2","trueBody":{"id":1130,"nodeType":"Block","src":"12724:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12766:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"12766:7:2","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12766:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1123,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12745:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12745:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1129,"nodeType":"RevertStatement","src":"12738:39:2"}]}},{"expression":{"arguments":[{"id":1133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"12824:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12838:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12830:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"12830:7:2","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12830:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"12842:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1139,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"12847:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12855:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1132,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12797:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12797:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"12797:61:2"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"12250:345:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12609:10:2","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"from","nameLocation":"12628:4:2","nodeType":"VariableDeclaration","scope":1144,"src":"12620:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"12620:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"ids","nameLocation":"12651:3:2","nodeType":"VariableDeclaration","scope":1144,"src":"12634:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"12634:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1110,"nodeType":"ArrayTypeName","src":"12634:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"values","nameLocation":"12673:6:2","nodeType":"VariableDeclaration","scope":1144,"src":"12656:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1113,"nodeType":"ArrayTypeName","src":"12656:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12619:61:2"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"12690:0:2"},"scope":1201,"src":"12600:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1183,"nodeType":"Block","src":"13177:222:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13191:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13211:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13203:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"13203:7:2","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13203:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13191:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1168,"nodeType":"IfStatement","src":"13187:94:2","trueBody":{"id":1167,"nodeType":"Block","src":"13215:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13267:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13259:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"13259:7:2","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13259:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1160,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"13236:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13236:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1166,"nodeType":"RevertStatement","src":"13229:41:2"}]}},{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1169,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"13290:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1172,"indexExpression":{"id":1170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13309:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13290:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1173,"indexExpression":{"id":1171,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13316:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13290:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1174,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13328:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13290:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1176,"nodeType":"ExpressionStatement","src":"13290:46:2"},{"eventCall":{"arguments":[{"id":1178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13366:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13373:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13383:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1177,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"13351:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13351:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"EmitStatement","src":"13346:46:2"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"12871:208:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13093:18:2","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"owner","nameLocation":"13120:5:2","nodeType":"VariableDeclaration","scope":1184,"src":"13112:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"operator","nameLocation":"13135:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13127:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"13127:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"approved","nameLocation":"13150:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13145:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"13145:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13111:48:2"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"13177:0:2"},"scope":1201,"src":"13084:315:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1199,"nodeType":"Block","src":"13673:664:2","statements":[{"AST":{"nativeSrc":"13708:623:2","nodeType":"YulBlock","src":"13708:623:2","statements":[{"nativeSrc":"13766:21:2","nodeType":"YulAssignment","src":"13766:21:2","value":{"arguments":[{"kind":"number","nativeSrc":"13782:4:2","nodeType":"YulLiteral","src":"13782:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"13776:5:2","nodeType":"YulIdentifier","src":"13776:5:2"},"nativeSrc":"13776:11:2","nodeType":"YulFunctionCall","src":"13776:11:2"},"variableNames":[{"name":"array1","nativeSrc":"13766:6:2","nodeType":"YulIdentifier","src":"13766:6:2"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"13844:6:2","nodeType":"YulIdentifier","src":"13844:6:2"},{"kind":"number","nativeSrc":"13852:1:2","nodeType":"YulLiteral","src":"13852:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"13837:6:2","nodeType":"YulIdentifier","src":"13837:6:2"},"nativeSrc":"13837:17:2","nodeType":"YulFunctionCall","src":"13837:17:2"},"nativeSrc":"13837:17:2","nodeType":"YulExpressionStatement","src":"13837:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"13975:6:2","nodeType":"YulIdentifier","src":"13975:6:2"},{"kind":"number","nativeSrc":"13983:4:2","nodeType":"YulLiteral","src":"13983:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13971:3:2","nodeType":"YulIdentifier","src":"13971:3:2"},"nativeSrc":"13971:17:2","nodeType":"YulFunctionCall","src":"13971:17:2"},{"name":"element1","nativeSrc":"13990:8:2","nodeType":"YulIdentifier","src":"13990:8:2"}],"functionName":{"name":"mstore","nativeSrc":"13964:6:2","nodeType":"YulIdentifier","src":"13964:6:2"},"nativeSrc":"13964:35:2","nodeType":"YulFunctionCall","src":"13964:35:2"},"nativeSrc":"13964:35:2","nodeType":"YulExpressionStatement","src":"13964:35:2"},{"nativeSrc":"14090:27:2","nodeType":"YulAssignment","src":"14090:27:2","value":{"arguments":[{"name":"array1","nativeSrc":"14104:6:2","nodeType":"YulIdentifier","src":"14104:6:2"},{"kind":"number","nativeSrc":"14112:4:2","nodeType":"YulLiteral","src":"14112:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14100:3:2","nodeType":"YulIdentifier","src":"14100:3:2"},"nativeSrc":"14100:17:2","nodeType":"YulFunctionCall","src":"14100:17:2"},"variableNames":[{"name":"array2","nativeSrc":"14090:6:2","nodeType":"YulIdentifier","src":"14090:6:2"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"14137:6:2","nodeType":"YulIdentifier","src":"14137:6:2"},{"kind":"number","nativeSrc":"14145:1:2","nodeType":"YulLiteral","src":"14145:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"14130:6:2","nodeType":"YulIdentifier","src":"14130:6:2"},"nativeSrc":"14130:17:2","nodeType":"YulFunctionCall","src":"14130:17:2"},"nativeSrc":"14130:17:2","nodeType":"YulExpressionStatement","src":"14130:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"14171:6:2","nodeType":"YulIdentifier","src":"14171:6:2"},{"kind":"number","nativeSrc":"14179:4:2","nodeType":"YulLiteral","src":"14179:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14167:3:2","nodeType":"YulIdentifier","src":"14167:3:2"},"nativeSrc":"14167:17:2","nodeType":"YulFunctionCall","src":"14167:17:2"},{"name":"element2","nativeSrc":"14186:8:2","nodeType":"YulIdentifier","src":"14186:8:2"}],"functionName":{"name":"mstore","nativeSrc":"14160:6:2","nodeType":"YulIdentifier","src":"14160:6:2"},"nativeSrc":"14160:35:2","nodeType":"YulFunctionCall","src":"14160:35:2"},"nativeSrc":"14160:35:2","nodeType":"YulExpressionStatement","src":"14160:35:2"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14297:4:2","nodeType":"YulLiteral","src":"14297:4:2","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"14307:6:2","nodeType":"YulIdentifier","src":"14307:6:2"},{"kind":"number","nativeSrc":"14315:4:2","nodeType":"YulLiteral","src":"14315:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14303:3:2","nodeType":"YulIdentifier","src":"14303:3:2"},"nativeSrc":"14303:17:2","nodeType":"YulFunctionCall","src":"14303:17:2"}],"functionName":{"name":"mstore","nativeSrc":"14290:6:2","nodeType":"YulIdentifier","src":"14290:6:2"},"nativeSrc":"14290:31:2","nodeType":"YulFunctionCall","src":"14290:31:2"},"nativeSrc":"14290:31:2","nodeType":"YulExpressionStatement","src":"14290:31:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":1193,"isOffset":false,"isSlot":false,"src":"13766:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"13844:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"13975:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14104:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14090:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14137:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14171:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14307:6:2","valueSize":1},{"declaration":1187,"isOffset":false,"isSlot":false,"src":"13990:8:2","valueSize":1},{"declaration":1189,"isOffset":false,"isSlot":false,"src":"14186:8:2","valueSize":1}],"flags":["memory-safe"],"id":1198,"nodeType":"InlineAssembly","src":"13683:648:2"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"13405:105:2","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13524:18:2","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"element1","nameLocation":"13560:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13552:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"13552:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"element2","nameLocation":"13586:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13578:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"13578:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13542:58:2"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"array1","nameLocation":"13640:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13623:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13623:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1192,"nodeType":"ArrayTypeName","src":"13623:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"array2","nameLocation":"13665:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13648:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"13648:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1195,"nodeType":"ArrayTypeName","src":"13648:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13622:50:2"},"scope":1201,"src":"13515:822:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1202,"src":"725:13614:2","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1221,1236,1245,1252]}],"src":"109:14231:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1324],"IERC165":[6136]},"id":1325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"110:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1325,"sourceUnit":6137,"src":"136:62:3","symbolAliases":[{"foreign":{"id":1204,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"144:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1207,"name":"IERC165","nameLocations":["359:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":6136,"src":"359:7:3"},"id":1208,"nodeType":"InheritanceSpecifier","src":"359:7:3"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"200:136:3","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1324,"linearizedBaseContracts":[1324,6136],"name":"IERC1155","nameLocation":"347:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"373:125:3","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1221,"name":"TransferSingle","nameLocation":"509:14:3","nodeType":"EventDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:3","nodeType":"VariableDeclaration","scope":1221,"src":"524:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:3","nodeType":"VariableDeclaration","scope":1221,"src":"550:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"572:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"592:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":1221,"src":"604:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:3"},"src":"503:116:3"},{"anonymous":false,"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"625:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1236,"name":"TransferBatch","nameLocation":"780:13:3","nodeType":"EventDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:3","nodeType":"VariableDeclaration","scope":1236,"src":"803:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1226,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:3","nodeType":"VariableDeclaration","scope":1236,"src":"837:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:3","nodeType":"VariableDeclaration","scope":1236,"src":"867:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:3","nodeType":"VariableDeclaration","scope":1236,"src":"895:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1230,"nodeType":"ArrayTypeName","src":"895:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1234,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:3","nodeType":"VariableDeclaration","scope":1236,"src":"918:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ArrayTypeName","src":"918:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:3"},"src":"774:167:3"},{"anonymous":false,"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"947:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1245,"name":"ApprovalForAll","nameLocation":"1105:14:3","nodeType":"EventDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:3","nodeType":"VariableDeclaration","scope":1245,"src":"1120:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1145:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1242,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:3"},"src":"1099:87:3"},{"anonymous":false,"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1192:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1252,"name":"URI","nameLocation":"1546:3:3","nodeType":"EventDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:3","nodeType":"VariableDeclaration","scope":1252,"src":"1550:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1250,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:3","nodeType":"VariableDeclaration","scope":1252,"src":"1564:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:3"},"src":"1540:44:3"},{"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"1590:90:3","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1262,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:3","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"account","nameLocation":"1712:7:3","nodeType":"VariableDeclaration","scope":1262,"src":"1704:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"id","nameLocation":"1729:2:3","nodeType":"VariableDeclaration","scope":1262,"src":"1721:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:3"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"1756:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:3"},"scope":1324,"src":"1685:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1771:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1275,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:3","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"1997:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1265,"nodeType":"ArrayTypeName","src":"1997:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"ids","nameLocation":"2053:3:3","nodeType":"VariableDeclaration","scope":1275,"src":"2034:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ArrayTypeName","src":"2034:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:3"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"2086:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ArrayTypeName","src":"2086:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:3"},"scope":1324,"src":"1964:140:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"2110:254:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:3","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"operator","nameLocation":"2404:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2396:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"approved","nameLocation":"2419:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2414:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1279,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"2437:0:3"},"scope":1324,"src":"2369:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"2444:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1293,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:3","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"account","nameLocation":"2618:7:3","nodeType":"VariableDeclaration","scope":1293,"src":"2610:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"operator","nameLocation":"2635:8:3","nodeType":"VariableDeclaration","scope":1293,"src":"2627:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:3"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1293,"src":"2668:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:3"},"scope":1324,"src":"2584:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"2680:927:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:3","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"from","nameLocation":"3646:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3638:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"to","nameLocation":"3660:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3652:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"id","nameLocation":"3672:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3664:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"value","nameLocation":"3684:5:3","nodeType":"VariableDeclaration","scope":1307,"src":"3676:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"data","nameLocation":"3706:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3691:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:3"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"3720:0:3"},"scope":1324,"src":"3612:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"3727:831:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"from","nameLocation":"4611:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4603:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"to","nameLocation":"4633:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"4625:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"ids","nameLocation":"4664:3:3","nodeType":"VariableDeclaration","scope":1323,"src":"4645:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ArrayTypeName","src":"4645:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"values","nameLocation":"4696:6:3","nodeType":"VariableDeclaration","scope":1323,"src":"4677:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"4677:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"data","nameLocation":"4727:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4712:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1319,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"4746:0:3"},"scope":1324,"src":"4563:184:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1325,"src":"337:4412:3","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"110:4640:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1366],"IERC165":[6136]},"id":1367,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1326,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"118:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1367,"sourceUnit":6137,"src":"144:62:4","symbolAliases":[{"foreign":{"id":1327,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"152:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1330,"name":"IERC165","nameLocations":["357:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":6136,"src":"357:7:4"},"id":1331,"nodeType":"InheritanceSpecifier","src":"357:7:4"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"208:118:4","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1366,"linearizedBaseContracts":[1366,6136],"name":"IERC1155Receiver","nameLocation":"337:16:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"371:827:4","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:4","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"1247:8:4","nodeType":"VariableDeclaration","scope":1347,"src":"1239:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"from","nameLocation":"1273:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1265:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"id","nameLocation":"1295:2:4","nodeType":"VariableDeclaration","scope":1347,"src":"1287:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"value","nameLocation":"1315:5:4","nodeType":"VariableDeclaration","scope":1347,"src":"1307:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"data","nameLocation":"1345:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1330:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:4"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1347,"src":"1374:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1344,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:4"},"scope":1366,"src":"1203:179:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"1388:995:4","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1365,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:4","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"operator","nameLocation":"2437:8:4","nodeType":"VariableDeclaration","scope":1365,"src":"2429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"from","nameLocation":"2463:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2455:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"ids","nameLocation":"2496:3:4","nodeType":"VariableDeclaration","scope":1365,"src":"2477:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1354,"nodeType":"ArrayTypeName","src":"2477:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"values","nameLocation":"2528:6:4","nodeType":"VariableDeclaration","scope":1365,"src":"2509:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1357,"nodeType":"ArrayTypeName","src":"2509:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"data","nameLocation":"2559:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2544:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:4"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"2588:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1362,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:4"},"scope":1366,"src":"2388:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1367,"src":"327:2271:4","usedErrors":[],"usedEvents":[]}],"src":"118:2481:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1324],"IERC1155MetadataURI":[1382]},"id":1383,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1368,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"132:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1383,"sourceUnit":1325,"src":"158:41:5","symbolAliases":[{"foreign":{"id":1369,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"166:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1372,"name":"IERC1155","nameLocations":["399:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"399:8:5"},"id":1373,"nodeType":"InheritanceSpecifier","src":"399:8:5"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"201:164:5","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1382,"linearizedBaseContracts":[1382,1324,6136],"name":"IERC1155MetadataURI","nameLocation":"376:19:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"414:192:5","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:5","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"id","nameLocation":"632:2:5","nodeType":"VariableDeclaration","scope":1381,"src":"624:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:5"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"659:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1378,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:5"},"scope":1382,"src":"611:63:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1383,"src":"366:310:5","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"132:545:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1536],"IERC1155Errors":[284],"IERC1155Receiver":[1366]},"id":1537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1384,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":1367,"src":"146:57:6","symbolAliases":[{"foreign":{"id":1385,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"154:16:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":285,"src":"204:70:6","symbolAliases":[{"foreign":{"id":1387,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"212:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"276:162:6","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1536,"linearizedBaseContracts":[1536],"name":"ERC1155Utils","nameLocation":"447:12:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1460,"nodeType":"Block","src":"1191:776:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1405,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1205:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:6","memberName":"code","nodeType":"MemberAccess","src":"1205:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:6","memberName":"length","nodeType":"MemberAccess","src":"1205:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"1201:760:6","trueBody":{"id":1458,"nodeType":"Block","src":"1225:736:6","statements":[{"clauses":[{"block":{"id":1436,"nodeType":"Block","src":"1341:221:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1423,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1363:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1424,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1375:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1375:34:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"IfStatement","src":"1359:189:6","trueBody":{"id":1434,"nodeType":"Block","src":"1420:128:6","statements":[{"errorCall":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1526:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1428,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1488:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1488:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1433,"nodeType":"RevertStatement","src":"1481:48:6"}]}}]},"errorName":"","id":1437,"nodeType":"TryCatchClause","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"response","nameLocation":"1331:8:6","nodeType":"VariableDeclaration","scope":1437,"src":"1324:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1420,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:6"},"src":"1315:247:6"},{"block":{"id":1455,"nodeType":"Block","src":"1591:360:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1441,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1613:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:6","memberName":"length","nodeType":"MemberAccess","src":"1613:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1453,"nodeType":"Block","src":"1784:153:6","statements":[{"AST":{"nativeSrc":"1831:88:6","nodeType":"YulBlock","src":"1831:88:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1868:6:6","nodeType":"YulIdentifier","src":"1868:6:6"},{"kind":"number","nativeSrc":"1876:4:6","nodeType":"YulLiteral","src":"1876:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1864:3:6","nodeType":"YulIdentifier","src":"1864:3:6"},"nativeSrc":"1864:17:6","nodeType":"YulFunctionCall","src":"1864:17:6"},{"arguments":[{"name":"reason","nativeSrc":"1889:6:6","nodeType":"YulIdentifier","src":"1889:6:6"}],"functionName":{"name":"mload","nativeSrc":"1883:5:6","nodeType":"YulIdentifier","src":"1883:5:6"},"nativeSrc":"1883:13:6","nodeType":"YulFunctionCall","src":"1883:13:6"}],"functionName":{"name":"revert","nativeSrc":"1857:6:6","nodeType":"YulIdentifier","src":"1857:6:6"},"nativeSrc":"1857:40:6","nodeType":"YulFunctionCall","src":"1857:40:6"},"nativeSrc":"1857:40:6","nodeType":"YulExpressionStatement","src":"1857:40:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1868:6:6","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1889:6:6","valueSize":1}],"flags":["memory-safe"],"id":1452,"nodeType":"InlineAssembly","src":"1806:113:6"}]},"id":1454,"nodeType":"IfStatement","src":"1609:328:6","trueBody":{"id":1451,"nodeType":"Block","src":"1633:145:6","statements":[{"errorCall":{"arguments":[{"id":1448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1756:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1445,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1718:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1718:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1450,"nodeType":"RevertStatement","src":"1711:48:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"reason","nameLocation":"1583:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1570:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1438,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:6"},"src":"1563:388:6"}],"externalCall":{"arguments":[{"id":1414,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"1282:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1415,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1292:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1298:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"1302:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1418,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1309:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1411,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1260:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1243:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1243:38:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1457,"nodeType":"TryStatement","src":"1239:712:6"}]}}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"466:535:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:6","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"operator","nameLocation":"1055:8:6","nodeType":"VariableDeclaration","scope":1461,"src":"1047:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"from","nameLocation":"1081:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1073:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"1103:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1095:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"id","nameLocation":"1123:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1115:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"value","nameLocation":"1143:5:6","nodeType":"VariableDeclaration","scope":1461,"src":"1135:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"data","nameLocation":"1171:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1158:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:6"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"1191:0:6"},"scope":1536,"src":"1006:961:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1534,"nodeType":"Block","src":"2733:818:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2747:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:4:6","memberName":"code","nodeType":"MemberAccess","src":"2747:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:6:6","memberName":"length","nodeType":"MemberAccess","src":"2747:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2747:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"IfStatement","src":"2743:802:6","trueBody":{"id":1532,"nodeType":"Block","src":"2767:778:6","statements":[{"clauses":[{"block":{"id":1510,"nodeType":"Block","src":"2920:226:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2942:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1498,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2954:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2971:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2954:39:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2994:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2954:48:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2942:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"2938:194:6","trueBody":{"id":1508,"nodeType":"Block","src":"3004:128:6","statements":[{"errorCall":{"arguments":[{"id":1505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3110:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1502,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3072:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3087:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3072:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1507,"nodeType":"RevertStatement","src":"3065:48:6"}]}}]},"errorName":"","id":1511,"nodeType":"TryCatchClause","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"response","nameLocation":"2897:8:6","nodeType":"VariableDeclaration","scope":1511,"src":"2890:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1494,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2890:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2872:47:6"},"src":"2864:282:6"},{"block":{"id":1529,"nodeType":"Block","src":"3175:360:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1515,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3197:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:6:6","memberName":"length","nodeType":"MemberAccess","src":"3197:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3197:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1527,"nodeType":"Block","src":"3368:153:6","statements":[{"AST":{"nativeSrc":"3415:88:6","nodeType":"YulBlock","src":"3415:88:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"3452:6:6","nodeType":"YulIdentifier","src":"3452:6:6"},{"kind":"number","nativeSrc":"3460:4:6","nodeType":"YulLiteral","src":"3460:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3448:3:6","nodeType":"YulIdentifier","src":"3448:3:6"},"nativeSrc":"3448:17:6","nodeType":"YulFunctionCall","src":"3448:17:6"},{"arguments":[{"name":"reason","nativeSrc":"3473:6:6","nodeType":"YulIdentifier","src":"3473:6:6"}],"functionName":{"name":"mload","nativeSrc":"3467:5:6","nodeType":"YulIdentifier","src":"3467:5:6"},"nativeSrc":"3467:13:6","nodeType":"YulFunctionCall","src":"3467:13:6"}],"functionName":{"name":"revert","nativeSrc":"3441:6:6","nodeType":"YulIdentifier","src":"3441:6:6"},"nativeSrc":"3441:40:6","nodeType":"YulFunctionCall","src":"3441:40:6"},"nativeSrc":"3441:40:6","nodeType":"YulExpressionStatement","src":"3441:40:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3452:6:6","valueSize":1},{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3473:6:6","valueSize":1}],"flags":["memory-safe"],"id":1526,"nodeType":"InlineAssembly","src":"3390:113:6"}]},"id":1528,"nodeType":"IfStatement","src":"3193:328:6","trueBody":{"id":1525,"nodeType":"Block","src":"3217:145:6","statements":[{"errorCall":{"arguments":[{"id":1522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3340:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1519,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3302:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3302:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1524,"nodeType":"RevertStatement","src":"3295:48:6"}]}}]},"errorName":"","id":1530,"nodeType":"TryCatchClause","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"reason","nameLocation":"3167:6:6","nodeType":"VariableDeclaration","scope":1530,"src":"3154:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1512,"name":"bytes","nodeType":"ElementaryTypeName","src":"3154:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3153:21:6"},"src":"3147:388:6"}],"externalCall":{"arguments":[{"id":1488,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"2829:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1489,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2839:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1490,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2845:3:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1491,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2850:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1492,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2858:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1485,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2802:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1484,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2785:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2785:43:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:78:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1531,"nodeType":"TryStatement","src":"2781:754:6"}]}}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"1973:545:6","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2532:27:6","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"operator","nameLocation":"2577:8:6","nodeType":"VariableDeclaration","scope":1535,"src":"2569:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"from","nameLocation":"2603:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2595:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"to","nameLocation":"2625:2:6","nodeType":"VariableDeclaration","scope":1535,"src":"2617:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"ids","nameLocation":"2654:3:6","nodeType":"VariableDeclaration","scope":1535,"src":"2637:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ArrayTypeName","src":"2637:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"values","nameLocation":"2684:6:6","nodeType":"VariableDeclaration","scope":1535,"src":"2667:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ArrayTypeName","src":"2667:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"data","nameLocation":"2713:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2700:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"2700:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2559:164:6"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[],"src":"2733:0:6"},"scope":1536,"src":"2523:1028:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1537,"src":"439:3114:6","usedErrors":[],"usedEvents":[]}],"src":"120:3434:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[4392],"ERC20":[2051],"IERC20":[2129],"IERC20Errors":[189],"IERC20Metadata":[2155]},"id":2052,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2052,"sourceUnit":2130,"src":"131:36:7","symbolAliases":[{"foreign":{"id":1539,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"139:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2052,"sourceUnit":2156,"src":"168:63:7","symbolAliases":[{"foreign":{"id":1541,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"176:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2052,"sourceUnit":4393,"src":"232:48:7","symbolAliases":[{"foreign":{"id":1543,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"240:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2052,"sourceUnit":285,"src":"281:65:7","symbolAliases":[{"foreign":{"id":1545,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1548,"name":"Context","nameLocations":["1133:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":4392,"src":"1133:7:7"},"id":1549,"nodeType":"InheritanceSpecifier","src":"1133:7:7"},{"baseName":{"id":1550,"name":"IERC20","nameLocations":["1142:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":2129,"src":"1142:6:7"},"id":1551,"nodeType":"InheritanceSpecifier","src":"1142:6:7"},{"baseName":{"id":1552,"name":"IERC20Metadata","nameLocations":["1150:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":2155,"src":"1150:14:7"},"id":1553,"nodeType":"InheritanceSpecifier","src":"1150:14:7"},{"baseName":{"id":1554,"name":"IERC20Errors","nameLocations":["1166:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1166:12:7"},"id":1555,"nodeType":"InheritanceSpecifier","src":"1166:12:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"348:757:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":2051,"linearizedBaseContracts":[2051,189,2155,2129,4392],"name":"ERC20","nameLocation":"1124:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1559,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:7","nodeType":"VariableDeclaration","scope":2051,"src":"1185:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1558,"keyName":"account","keyNameLocation":"1201:7:7","keyType":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1565,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:7","nodeType":"VariableDeclaration","scope":2051,"src":"1245:83:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1564,"keyName":"account","keyNameLocation":"1261:7:7","keyType":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1563,"keyName":"spender","keyNameLocation":"1288:7:7","keyType":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1567,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:7","nodeType":"VariableDeclaration","scope":2051,"src":"1335:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1569,"mutability":"mutable","name":"_name","nameLocation":"1385:5:7","nodeType":"VariableDeclaration","scope":2051,"src":"1370:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1568,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1571,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:7","nodeType":"VariableDeclaration","scope":2051,"src":"1396:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1570,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1587,"nodeType":"Block","src":"1638:57:7","statements":[{"expression":{"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1579,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"1648:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1580,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1656:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1582,"nodeType":"ExpressionStatement","src":"1648:13:7"},{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1583,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1671:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1584,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1681:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1586,"nodeType":"ExpressionStatement","src":"1671:17:7"}]},"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"1425:152:7","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":1588,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"name_","nameLocation":"1608:5:7","nodeType":"VariableDeclaration","scope":1588,"src":"1594:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1573,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:7","nodeType":"VariableDeclaration","scope":1588,"src":"1615:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1575,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:7"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[],"src":"1638:0:7"},"scope":2051,"src":"1582:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2142],"body":{"id":1596,"nodeType":"Block","src":"1820:29:7","statements":[{"expression":{"id":1594,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"1837:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1593,"id":1595,"nodeType":"Return","src":"1830:12:7"}]},"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"1701:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:7","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[],"src":"1773:2:7"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"1805:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1591,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:7"},"scope":2051,"src":"1760:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2148],"body":{"id":1605,"nodeType":"Block","src":"2024:31:7","statements":[{"expression":{"id":1603,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"2041:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1602,"id":1604,"nodeType":"Return","src":"2034:14:7"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"1855:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:7","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[],"src":"1977:2:7"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"2009:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1600,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:7"},"scope":2051,"src":"1962:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2154],"body":{"id":1614,"nodeType":"Block","src":"2744:26:7","statements":[{"expression":{"hexValue":"3138","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1611,"id":1613,"nodeType":"Return","src":"2754:9:7"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"2061:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:7","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"2705:2:7"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"2737:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1609,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:7"},"scope":2051,"src":"2688:82:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2078],"body":{"id":1623,"nodeType":"Block","src":"2864:36:7","statements":[{"expression":{"id":1621,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"2881:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1620,"id":1622,"nodeType":"Return","src":"2874:19:7"}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"2776:22:7","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:7","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[],"src":"2823:2:7"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1624,"src":"2855:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:7"},"scope":2051,"src":"2803:97:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2086],"body":{"id":1636,"nodeType":"Block","src":"3007:42:7","statements":[{"expression":{"baseExpression":{"id":1632,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"3024:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1634,"indexExpression":{"id":1633,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"3034:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1631,"id":1635,"nodeType":"Return","src":"3017:25:7"}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"2906:22:7","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:7","nodeType":"FunctionDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"account","nameLocation":"2960:7:7","nodeType":"VariableDeclaration","scope":1637,"src":"2952:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:7"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"2998:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:7"},"scope":2051,"src":"2933:116:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2096],"body":{"id":1660,"nodeType":"Block","src":"3319:103:7","statements":[{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"owner","nameLocation":"3337:5:7","nodeType":"VariableDeclaration","scope":1660,"src":"3329:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1647,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1651,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1649,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"3345:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:7"},{"expression":{"arguments":[{"id":1653,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"3377:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1654,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"3384:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"3388:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1652,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"3367:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1657,"nodeType":"ExpressionStatement","src":"3367:27:7"},{"expression":{"hexValue":"74727565","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1646,"id":1659,"nodeType":"Return","src":"3404:11:7"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"3055:184:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:7","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"to","nameLocation":"3270:2:7","nodeType":"VariableDeclaration","scope":1661,"src":"3262:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"value","nameLocation":"3282:5:7","nodeType":"VariableDeclaration","scope":1661,"src":"3274:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:7"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1661,"src":"3313:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1644,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:7"},"scope":2051,"src":"3244:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2106],"body":{"id":1677,"nodeType":"Block","src":"3544:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1671,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"3561:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1673,"indexExpression":{"id":1672,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"3573:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1675,"indexExpression":{"id":1674,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"3580:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1670,"id":1676,"nodeType":"Return","src":"3554:34:7"}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"3428:22:7","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:7","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"owner","nameLocation":"3482:5:7","nodeType":"VariableDeclaration","scope":1678,"src":"3474:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"spender","nameLocation":"3497:7:7","nodeType":"VariableDeclaration","scope":1678,"src":"3489:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:7"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"3535:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:7"},"scope":2051,"src":"3455:140:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2116],"body":{"id":1701,"nodeType":"Block","src":"3981:107:7","statements":[{"assignments":[1689],"declarations":[{"constant":false,"id":1689,"mutability":"mutable","name":"owner","nameLocation":"3999:5:7","nodeType":"VariableDeclaration","scope":1701,"src":"3991:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1692,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1690,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"4007:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:7"},{"expression":{"arguments":[{"id":1694,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"4038:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1695,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"4045:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"4054:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1942,2002],"referencedDeclaration":1942,"src":"4029:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"ExpressionStatement","src":"4029:31:7"},{"expression":{"hexValue":"74727565","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1687,"id":1700,"nodeType":"Return","src":"4070:11:7"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"3601:296:7","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1702,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:7","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"spender","nameLocation":"3927:7:7","nodeType":"VariableDeclaration","scope":1702,"src":"3919:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"value","nameLocation":"3944:5:7","nodeType":"VariableDeclaration","scope":1702,"src":"3936:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:7"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1702,"src":"3975:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1685,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:7"},"scope":2051,"src":"3902:186:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2128],"body":{"id":1733,"nodeType":"Block","src":"4773:151:7","statements":[{"assignments":[1715],"declarations":[{"constant":false,"id":1715,"mutability":"mutable","name":"spender","nameLocation":"4791:7:7","nodeType":"VariableDeclaration","scope":1733,"src":"4783:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1718,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1716,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"4801:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:7"},{"expression":{"arguments":[{"id":1720,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"4839:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1721,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"4845:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"4854:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1719,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4823:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"ExpressionStatement","src":"4823:37:7"},{"expression":{"arguments":[{"id":1726,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"4880:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1727,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4886:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"4890:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1725,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"4870:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1730,"nodeType":"ExpressionStatement","src":"4870:26:7"},{"expression":{"hexValue":"74727565","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1713,"id":1732,"nodeType":"Return","src":"4906:11:7"}]},"documentation":{"id":1703,"nodeType":"StructuredDocumentation","src":"4094:581:7","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1734,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:7","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"from","nameLocation":"4710:4:7","nodeType":"VariableDeclaration","scope":1734,"src":"4702:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1704,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1707,"mutability":"mutable","name":"to","nameLocation":"4724:2:7","nodeType":"VariableDeclaration","scope":1734,"src":"4716:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"value","nameLocation":"4736:5:7","nodeType":"VariableDeclaration","scope":1734,"src":"4728:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:7"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1734,"src":"4767:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1711,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:7"},"scope":2051,"src":"4680:244:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1780,"nodeType":"Block","src":"5366:231:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1744,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"5380:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:7","typeDescriptions":{}}},"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1758,"nodeType":"IfStatement","src":"5376:86:7","trueBody":{"id":1757,"nodeType":"Block","src":"5400:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:7","typeDescriptions":{}}},"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1750,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5421:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1756,"nodeType":"RevertStatement","src":"5414:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"5475:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:7","typeDescriptions":{}}},"id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1773,"nodeType":"IfStatement","src":"5471:86:7","trueBody":{"id":1772,"nodeType":"Block","src":"5493:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1766,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:7","typeDescriptions":{}}},"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1765,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5514:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1771,"nodeType":"RevertStatement","src":"5507:39:7"}]}},{"expression":{"arguments":[{"id":1775,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"5574:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1776,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"5580:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"5584:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1774,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"5566:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"5566:24:7"}]},"documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"4930:362:7","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1781,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:7","nodeType":"FunctionDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"from","nameLocation":"5324:4:7","nodeType":"VariableDeclaration","scope":1781,"src":"5316:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"to","nameLocation":"5338:2:7","nodeType":"VariableDeclaration","scope":1781,"src":"5330:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1738,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1741,"mutability":"mutable","name":"value","nameLocation":"5350:5:7","nodeType":"VariableDeclaration","scope":1781,"src":"5342:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:7"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[],"src":"5366:0:7"},"scope":2051,"src":"5297:300:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1857,"nodeType":"Block","src":"5987:1032:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6001:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:7","typeDescriptions":{}}},"id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1828,"nodeType":"Block","src":"6175:362:7","statements":[{"assignments":[1803],"declarations":[{"constant":false,"id":1803,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:7","nodeType":"VariableDeclaration","scope":1828,"src":"6189:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1807,"initialValue":{"baseExpression":{"id":1804,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6211:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1806,"indexExpression":{"id":1805,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6221:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1808,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"6244:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6258:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1818,"nodeType":"IfStatement","src":"6240:115:7","trueBody":{"id":1817,"nodeType":"Block","src":"6265:90:7","statements":[{"errorCall":{"arguments":[{"id":1812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6315:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1813,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"6321:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6334:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1811,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6290:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1816,"nodeType":"RevertStatement","src":"6283:57:7"}]}},{"id":1827,"nodeType":"UncheckedBlock","src":"6368:159:7","statements":[{"expression":{"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1819,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6475:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1821,"indexExpression":{"id":1820,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6485:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"6493:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6507:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1826,"nodeType":"ExpressionStatement","src":"6475:37:7"}]}]},"id":1829,"nodeType":"IfStatement","src":"5997:540:7","trueBody":{"id":1801,"nodeType":"Block","src":"6021:148:7","statements":[{"expression":{"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1797,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"6137:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6153:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1800,"nodeType":"ExpressionStatement","src":"6137:21:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6551:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:7","typeDescriptions":{}}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1849,"nodeType":"Block","src":"6766:206:7","statements":[{"id":1848,"nodeType":"UncheckedBlock","src":"6780:182:7","statements":[{"expression":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1842,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6925:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1844,"indexExpression":{"id":1843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"6935:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6942:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1847,"nodeType":"ExpressionStatement","src":"6925:22:7"}]}]},"id":1850,"nodeType":"IfStatement","src":"6547:425:7","trueBody":{"id":1841,"nodeType":"Block","src":"6569:191:7","statements":[{"id":1840,"nodeType":"UncheckedBlock","src":"6583:167:7","statements":[{"expression":{"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1836,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"6714:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6730:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1839,"nodeType":"ExpressionStatement","src":"6714:21:7"}]}]}},{"eventCall":{"arguments":[{"id":1852,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6996:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1853,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"7002:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"7006:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1851,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"6987:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1856,"nodeType":"EmitStatement","src":"6982:30:7"}]},"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"5603:304:7","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:7","nodeType":"FunctionDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"from","nameLocation":"5937:4:7","nodeType":"VariableDeclaration","scope":1858,"src":"5929:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"to","nameLocation":"5951:2:7","nodeType":"VariableDeclaration","scope":1858,"src":"5943:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"value","nameLocation":"5963:5:7","nodeType":"VariableDeclaration","scope":1858,"src":"5955:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:7"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[],"src":"5987:0:7"},"scope":2051,"src":"5912:1107:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1890,"nodeType":"Block","src":"7418:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"7432:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:7","typeDescriptions":{}}},"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1880,"nodeType":"IfStatement","src":"7428:91:7","trueBody":{"id":1879,"nodeType":"Block","src":"7455:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:7","typeDescriptions":{}}},"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1872,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7476:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1878,"nodeType":"RevertStatement","src":"7469:39:7"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:7","typeDescriptions":{}}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1886,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"7548:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"7557:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1881,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7528:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1889,"nodeType":"ExpressionStatement","src":"7528:35:7"}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"7025:332:7","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:7","nodeType":"FunctionDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"account","nameLocation":"7385:7:7","nodeType":"VariableDeclaration","scope":1891,"src":"7377:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1860,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"value","nameLocation":"7402:5:7","nodeType":"VariableDeclaration","scope":1891,"src":"7394:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:7"},"returnParameters":{"id":1865,"nodeType":"ParameterList","parameters":[],"src":"7418:0:7"},"scope":2051,"src":"7362:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1923,"nodeType":"Block","src":"7944:150:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"7958:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:7","typeDescriptions":{}}},"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1913,"nodeType":"IfStatement","src":"7954:89:7","trueBody":{"id":1912,"nodeType":"Block","src":"7981:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:7","typeDescriptions":{}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1905,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8002:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1911,"nodeType":"RevertStatement","src":"7995:37:7"}]}},{"expression":{"arguments":[{"id":1915,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"8060:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1916,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:7","typeDescriptions":{}}},"id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"8081:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1914,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8052:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1922,"nodeType":"ExpressionStatement","src":"8052:35:7"}]},"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"7576:307:7","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1924,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:7","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"account","nameLocation":"7911:7:7","nodeType":"VariableDeclaration","scope":1924,"src":"7903:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"value","nameLocation":"7928:5:7","nodeType":"VariableDeclaration","scope":1924,"src":"7920:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:7"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[],"src":"7944:0:7"},"scope":2051,"src":"7888:206:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1941,"nodeType":"Block","src":"8704:54:7","statements":[{"expression":{"arguments":[{"id":1935,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8723:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1936,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"8730:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"8739:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1934,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1942,2002],"referencedDeclaration":2002,"src":"8714:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1940,"nodeType":"ExpressionStatement","src":"8714:37:7"}]},"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"8100:525:7","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:7","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"owner","nameLocation":"8656:5:7","nodeType":"VariableDeclaration","scope":1942,"src":"8648:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"spender","nameLocation":"8671:7:7","nodeType":"VariableDeclaration","scope":1942,"src":"8663:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"value","nameLocation":"8688:5:7","nodeType":"VariableDeclaration","scope":1942,"src":"8680:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:7"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"8704:0:7"},"scope":2051,"src":"8630:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2001,"nodeType":"Block","src":"9703:334:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1954,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"9717:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:7","typeDescriptions":{}}},"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1968,"nodeType":"IfStatement","src":"9713:89:7","trueBody":{"id":1967,"nodeType":"Block","src":"9738:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:7","typeDescriptions":{}}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1960,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"9759:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1966,"nodeType":"RevertStatement","src":"9752:39:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"9815:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:7","typeDescriptions":{}}},"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1983,"nodeType":"IfStatement","src":"9811:90:7","trueBody":{"id":1982,"nodeType":"Block","src":"9838:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:7","typeDescriptions":{}}},"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1975,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9859:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1981,"nodeType":"RevertStatement","src":"9852:38:7"}]}},{"expression":{"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1984,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"9910:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1987,"indexExpression":{"id":1985,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"9922:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1988,"indexExpression":{"id":1986,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"9929:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"9940:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1991,"nodeType":"ExpressionStatement","src":"9910:35:7"},{"condition":{"id":1992,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"9959:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2000,"nodeType":"IfStatement","src":"9955:76:7","trueBody":{"id":1999,"nodeType":"Block","src":"9970:61:7","statements":[{"eventCall":{"arguments":[{"id":1994,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"9998:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1995,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"10005:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"10014:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1993,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"9989:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"EmitStatement","src":"9984:36:7"}]}}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"8764:836:7","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2002,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:7","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"owner","nameLocation":"9631:5:7","nodeType":"VariableDeclaration","scope":2002,"src":"9623:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"spender","nameLocation":"9646:7:7","nodeType":"VariableDeclaration","scope":2002,"src":"9638:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"value","nameLocation":"9663:5:7","nodeType":"VariableDeclaration","scope":2002,"src":"9655:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:7","nodeType":"VariableDeclaration","scope":2002,"src":"9670:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1950,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:7"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[],"src":"9703:0:7"},"scope":2051,"src":"9605:432:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2049,"nodeType":"Block","src":"10408:387:7","statements":[{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:7","nodeType":"VariableDeclaration","scope":2049,"src":"10418:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2018,"initialValue":{"arguments":[{"id":2015,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"10455:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2016,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"10462:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2014,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"10445:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2019,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10484:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2020,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:7","memberName":"max","nodeType":"MemberAccess","src":"10503:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2048,"nodeType":"IfStatement","src":"10480:309:7","trueBody":{"id":2047,"nodeType":"Block","src":"10522:267:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10540:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"10559:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2036,"nodeType":"IfStatement","src":"10536:130:7","trueBody":{"id":2035,"nodeType":"Block","src":"10566:100:7","statements":[{"errorCall":{"arguments":[{"id":2030,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"10618:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2031,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10627:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"10645:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2029,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10591:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2034,"nodeType":"RevertStatement","src":"10584:67:7"}]}},{"id":2046,"nodeType":"UncheckedBlock","src":"10679:100:7","statements":[{"expression":{"arguments":[{"id":2038,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"10716:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2039,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"10723:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2040,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10732:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"10751:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2037,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1942,2002],"referencedDeclaration":2002,"src":"10707:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"ExpressionStatement","src":"10707:57:7"}]}]}}]},"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"10043:271:7","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:7","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"owner","nameLocation":"10352:5:7","nodeType":"VariableDeclaration","scope":2050,"src":"10344:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"spender","nameLocation":"10367:7:7","nodeType":"VariableDeclaration","scope":2050,"src":"10359:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"value","nameLocation":"10384:5:7","nodeType":"VariableDeclaration","scope":2050,"src":"10376:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:7"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[],"src":"10408:0:7"},"scope":2051,"src":"10319:476:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2052,"src":"1106:9691:7","usedErrors":[159,164,169,178,183,188],"usedEvents":[2063,2072]}],"src":"105:10693:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2129]},"id":2130,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2053,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"133:71:8","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2129,"linearizedBaseContracts":[2129],"name":"IERC20","nameLocation":"215:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"228:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2063,"name":"Transfer","nameLocation":"397:8:8","nodeType":"EventDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:8","nodeType":"VariableDeclaration","scope":2063,"src":"406:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2056,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2059,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:8","nodeType":"VariableDeclaration","scope":2063,"src":"428:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2058,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2061,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:8","nodeType":"VariableDeclaration","scope":2063,"src":"448:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:8"},"src":"391:72:8"},{"anonymous":false,"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"469:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2072,"name":"Approval","nameLocation":"628:8:8","nodeType":"EventDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:8","nodeType":"VariableDeclaration","scope":2072,"src":"637:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2068,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:8","nodeType":"VariableDeclaration","scope":2072,"src":"660:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2070,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:8","nodeType":"VariableDeclaration","scope":2072,"src":"685:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:8"},"src":"622:78:8"},{"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"706:65:8","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2078,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:8","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[],"src":"796:2:8"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2078,"src":"822:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:8"},"scope":2129,"src":"776:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"837:71:8","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2086,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:8","nodeType":"FunctionDefinition","parameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"account","nameLocation":"940:7:8","nodeType":"VariableDeclaration","scope":2086,"src":"932:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:8"},"returnParameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2086,"src":"972:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:8"},"scope":2129,"src":"913:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"987:213:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2096,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:8","nodeType":"FunctionDefinition","parameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"to","nameLocation":"1231:2:8","nodeType":"VariableDeclaration","scope":2096,"src":"1223:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"value","nameLocation":"1243:5:8","nodeType":"VariableDeclaration","scope":2096,"src":"1235:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:8"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2096,"src":"1268:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2093,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:8"},"scope":2129,"src":"1205:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"1280:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2106,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:8","nodeType":"FunctionDefinition","parameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"owner","nameLocation":"1576:5:8","nodeType":"VariableDeclaration","scope":2106,"src":"1568:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"spender","nameLocation":"1591:7:8","nodeType":"VariableDeclaration","scope":2106,"src":"1583:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2100,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:8"},"returnParameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"1623:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:8"},"scope":2129,"src":"1549:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"1638:667:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2116,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:8","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"spender","nameLocation":"2335:7:8","nodeType":"VariableDeclaration","scope":2116,"src":"2327:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"value","nameLocation":"2352:5:8","nodeType":"VariableDeclaration","scope":2116,"src":"2344:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:8"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2116,"src":"2377:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2113,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:8"},"scope":2129,"src":"2310:73:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"2389:297:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2128,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:8","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"from","nameLocation":"2721:4:8","nodeType":"VariableDeclaration","scope":2128,"src":"2713:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"to","nameLocation":"2735:2:8","nodeType":"VariableDeclaration","scope":2128,"src":"2727:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2120,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"value","nameLocation":"2747:5:8","nodeType":"VariableDeclaration","scope":2128,"src":"2739:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:8"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2128,"src":"2772:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2125,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:8"},"scope":2129,"src":"2691:87:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2130,"src":"205:2575:8","usedErrors":[],"usedEvents":[2063,2072]}],"src":"106:2675:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2129],"IERC20Metadata":[2155]},"id":2156,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2131,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2133,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2156,"sourceUnit":2130,"src":"151:37:9","symbolAliases":[{"foreign":{"id":2132,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2135,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2129,"src":"306:6:9"},"id":2136,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2155,"linearizedBaseContracts":[2155,2129],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2142,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2142,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2139,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":2155,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2148,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2148,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2145,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":2155,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2149,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2154,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":2150,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2151,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":2155,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2156,"src":"278:405:9","usedErrors":[],"usedEvents":[2063,2072]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[4392],"ERC165":[6124],"ERC721":[3112],"ERC721Utils":[3352],"IERC165":[6136],"IERC721":[3229],"IERC721Errors":[237],"IERC721Metadata":[3275],"Strings":[6100]},"id":3113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2157,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":2159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":3230,"src":"133:38:10","symbolAliases":[{"foreign":{"id":2158,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"141:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":2161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":3276,"src":"172:65:10","symbolAliases":[{"foreign":{"id":2160,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"180:15:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":2163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":3353,"src":"238:52:10","symbolAliases":[{"foreign":{"id":2162,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"246:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":2165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":4393,"src":"291:48:10","symbolAliases":[{"foreign":{"id":2164,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"299:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":2167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":6101,"src":"340:48:10","symbolAliases":[{"foreign":{"id":2166,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"348:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":2170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":6125,"src":"389:69:10","symbolAliases":[{"foreign":{"id":2168,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"397:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2169,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"406:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":2172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3113,"sourceUnit":285,"src":"459:66:10","symbolAliases":[{"foreign":{"id":2171,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2174,"name":"Context","nameLocations":["803:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":4392,"src":"803:7:10"},"id":2175,"nodeType":"InheritanceSpecifier","src":"803:7:10"},{"baseName":{"id":2176,"name":"ERC165","nameLocations":["812:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"812:6:10"},"id":2177,"nodeType":"InheritanceSpecifier","src":"812:6:10"},{"baseName":{"id":2178,"name":"IERC721","nameLocations":["820:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3229,"src":"820:7:10"},"id":2179,"nodeType":"InheritanceSpecifier","src":"820:7:10"},{"baseName":{"id":2180,"name":"IERC721Metadata","nameLocations":["829:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":3275,"src":"829:15:10"},"id":2181,"nodeType":"InheritanceSpecifier","src":"829:15:10"},{"baseName":{"id":2182,"name":"IERC721Errors","nameLocations":["846:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:10"},"id":2183,"nodeType":"InheritanceSpecifier","src":"846:13:10"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"527:247:10","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":3112,"linearizedBaseContracts":[3112,237,3275,3229,6124,6136,4392],"name":"ERC721","nameLocation":"793:6:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2186,"libraryName":{"id":2184,"name":"Strings","nameLocations":["872:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":6100,"src":"872:7:10"},"nodeType":"UsingForDirective","src":"866:26:10","typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2188,"mutability":"mutable","name":"_name","nameLocation":"931:5:10","nodeType":"VariableDeclaration","scope":3112,"src":"916:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2187,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2190,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:10","nodeType":"VariableDeclaration","scope":3112,"src":"963:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2189,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2194,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:10","nodeType":"VariableDeclaration","scope":3112,"src":"992:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2193,"keyName":"tokenId","keyNameLocation":"1008:7:10","keyType":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2198,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:10","nodeType":"VariableDeclaration","scope":3112,"src":"1050:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2197,"keyName":"owner","keyNameLocation":"1066:5:10","keyType":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2202,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:10","nodeType":"VariableDeclaration","scope":3112,"src":"1108:59:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2201,"keyName":"tokenId","keyNameLocation":"1124:7:10","keyType":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2208,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:10","nodeType":"VariableDeclaration","scope":3112,"src":"1174:86:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":2207,"keyName":"owner","keyNameLocation":"1190:5:10","keyType":{"id":2203,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2206,"keyName":"operator","keyNameLocation":"1215:8:10","keyType":{"id":2204,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2205,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":2224,"nodeType":"Block","src":"1436:57:10","statements":[{"expression":{"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2216,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"1446:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2217,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"1454:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2219,"nodeType":"ExpressionStatement","src":"1446:13:10"},{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2220,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"1469:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2221,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"1479:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2223,"nodeType":"ExpressionStatement","src":"1469:17:10"}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"1267:108:10","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":2225,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"name_","nameLocation":"1406:5:10","nodeType":"VariableDeclaration","scope":2225,"src":"1392:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2210,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:10","nodeType":"VariableDeclaration","scope":2225,"src":"1413:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2212,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:10"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[],"src":"1436:0:10"},"scope":3112,"src":"1380:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6123,6135],"body":{"id":2255,"nodeType":"Block","src":"1635:192:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1664:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2238,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"1684:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3229_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$3229_$","typeString":"type(contract IERC721)"}],"id":2237,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$3229","typeString":"type(contract IERC721)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1720:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2244,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"1740:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3275_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3275_$","typeString":"type(contract IERC721Metadata)"}],"id":2243,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3275","typeString":"type(contract IERC721Metadata)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2251,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1808:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2249,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$3112_$","typeString":"type(contract super ERC721)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6123,"src":"1784:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2235,"id":2254,"nodeType":"Return","src":"1645:175:10"}]},"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"1499:23:10","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2256,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:10","nodeType":"FunctionDefinition","overrides":{"id":2232,"nodeType":"OverrideSpecifier","overrides":[{"id":2230,"name":"ERC165","nameLocations":["1603:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"1603:6:10"},{"id":2231,"name":"IERC165","nameLocations":["1611:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":6136,"src":"1611:7:10"}],"src":"1594:25:10"},"parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:10","nodeType":"VariableDeclaration","scope":2256,"src":"1554:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2227,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:10"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2256,"src":"1629:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2233,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:10"},"scope":3112,"src":"1527:300:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3154],"body":{"id":2283,"nodeType":"Block","src":"1933:136:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"1947:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2265,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:10","typeDescriptions":{}}},"id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2278,"nodeType":"IfStatement","src":"1943:87:10","trueBody":{"id":2277,"nodeType":"Block","src":"1968:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:10","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2270,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"1989:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2276,"nodeType":"RevertStatement","src":"1982:37:10"}]}},{"expression":{"baseExpression":{"id":2279,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"2046:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2281,"indexExpression":{"id":2280,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"2056:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2263,"id":2282,"nodeType":"Return","src":"2039:23:10"}]},"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"1833:23:10","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:10","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"owner","nameLocation":"1888:5:10","nodeType":"VariableDeclaration","scope":2284,"src":"1880:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:10"},"returnParameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"1924:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:10"},"scope":3112,"src":"1861:208:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3162],"body":{"id":2296,"nodeType":"Block","src":"2175:46:10","statements":[{"expression":{"arguments":[{"id":2293,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"2206:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2292,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"2192:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2291,"id":2295,"nodeType":"Return","src":"2185:29:10"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"2075:23:10","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":2297,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:10","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:10","nodeType":"VariableDeclaration","scope":2297,"src":"2120:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:10"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2297,"src":"2166:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:10"},"scope":3112,"src":"2103:118:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3260],"body":{"id":2305,"nodeType":"Block","src":"2323:29:10","statements":[{"expression":{"id":2303,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"2340:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2302,"id":2304,"nodeType":"Return","src":"2333:12:10"}]},"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"2227:31:10","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:10","nodeType":"FunctionDefinition","parameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"2276:2:10"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2306,"src":"2308:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2300,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:10"},"scope":3112,"src":"2263:89:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3266],"body":{"id":2314,"nodeType":"Block","src":"2456:31:10","statements":[{"expression":{"id":2312,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"2473:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2311,"id":2313,"nodeType":"Return","src":"2466:14:10"}]},"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"2358:31:10","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:10","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[],"src":"2409:2:10"},"returnParameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"2441:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2309,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:10"},"scope":3112,"src":"2394:93:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3274],"body":{"id":2350,"nodeType":"Block","src":"2608:176:10","statements":[{"expression":{"arguments":[{"id":2324,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2632:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2323,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"2618:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2326,"nodeType":"ExpressionStatement","src":"2618:22:10"},{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:10","nodeType":"VariableDeclaration","scope":2350,"src":"2651:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2327,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2331,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2329,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"2675:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2334,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2708:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2332,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:10","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:10","memberName":"length","nodeType":"MemberAccess","src":"2702:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:10","trueExpression":{"arguments":[{"id":2342,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2744:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2343,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"2753:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:10","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4812,"src":"2753:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2339,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:10","typeDescriptions":{}}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:10","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2322,"id":2349,"nodeType":"Return","src":"2695:82:10"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"2493:31:10","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":2351,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:10","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:10","nodeType":"VariableDeclaration","scope":2351,"src":"2547:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:10"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2351,"src":"2593:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2320,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:10"},"scope":3112,"src":"2529:255:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2359,"nodeType":"Block","src":"3092:26:10","statements":[{"expression":{"hexValue":"","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2356,"id":2358,"nodeType":"Return","src":"3102:9:10"}]},"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"2790:231:10","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:10","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[],"src":"3043:2:10"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"3077:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2354,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:10"},"scope":3112,"src":"3026:92:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3202],"body":{"id":2375,"nodeType":"Block","src":"3213:52:10","statements":[{"expression":{"arguments":[{"id":2369,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"3232:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"3236:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2371,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"3245:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2368,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2979,3045],"referencedDeclaration":2979,"src":"3223:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2374,"nodeType":"ExpressionStatement","src":"3223:35:10"}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"3124:23:10","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":2376,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:10","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"to","nameLocation":"3177:2:10","nodeType":"VariableDeclaration","scope":2376,"src":"3169:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2362,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:10","nodeType":"VariableDeclaration","scope":2376,"src":"3181:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:10"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[],"src":"3213:0:10"},"scope":3112,"src":"3152:113:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3218],"body":{"id":2392,"nodeType":"Block","src":"3375:78:10","statements":[{"expression":{"arguments":[{"id":2385,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3399:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2384,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"3385:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2387,"nodeType":"ExpressionStatement","src":"3385:22:10"},{"expression":{"arguments":[{"id":2389,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3438:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2388,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"3425:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2383,"id":2391,"nodeType":"Return","src":"3418:28:10"}]},"documentation":{"id":2377,"nodeType":"StructuredDocumentation","src":"3271:23:10","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":2393,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:10","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:10","nodeType":"VariableDeclaration","scope":2393,"src":"3320:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:10"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"3366:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2381,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:10"},"scope":3112,"src":"3299:154:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3210],"body":{"id":2408,"nodeType":"Block","src":"3562:69:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2402,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"3591:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2404,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"3605:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2405,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"3615:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2401,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"3572:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2407,"nodeType":"ExpressionStatement","src":"3572:52:10"}]},"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"3459:23:10","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:10","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"operator","nameLocation":"3522:8:10","nodeType":"VariableDeclaration","scope":2409,"src":"3514:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2395,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"approved","nameLocation":"3537:8:10","nodeType":"VariableDeclaration","scope":2409,"src":"3532:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2397,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:10"},"returnParameters":{"id":2400,"nodeType":"ParameterList","parameters":[],"src":"3562:0:10"},"scope":3112,"src":"3487:144:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3228],"body":{"id":2425,"nodeType":"Block","src":"3759:59:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2419,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"3776:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2421,"indexExpression":{"id":2420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"3795:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2423,"indexExpression":{"id":2422,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"3802:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2418,"id":2424,"nodeType":"Return","src":"3769:42:10"}]},"documentation":{"id":2410,"nodeType":"StructuredDocumentation","src":"3637:23:10","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:10","nodeType":"FunctionDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"owner","nameLocation":"3699:5:10","nodeType":"VariableDeclaration","scope":2426,"src":"3691:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2414,"mutability":"mutable","name":"operator","nameLocation":"3714:8:10","nodeType":"VariableDeclaration","scope":2426,"src":"3706:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2413,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:10"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"3753:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2416,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:10"},"scope":3112,"src":"3665:153:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3194],"body":{"id":2471,"nodeType":"Block","src":"3932:498:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"3946:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:10","typeDescriptions":{}}},"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"nodeType":"IfStatement","src":"3942:87:10","trueBody":{"id":2449,"nodeType":"Block","src":"3964:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2443,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:10","typeDescriptions":{}}},"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2442,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3985:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2448,"nodeType":"RevertStatement","src":"3978:40:10"}]}},{"assignments":[2452],"declarations":[{"constant":false,"id":2452,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:10","nodeType":"VariableDeclaration","scope":2471,"src":"4247:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2459,"initialValue":{"arguments":[{"id":2454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"4279:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2455,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"4283:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"4292:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2453,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"4271:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2460,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4319:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2461,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"4336:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2470,"nodeType":"IfStatement","src":"4315:109:10","trueBody":{"id":2469,"nodeType":"Block","src":"4342:82:10","statements":[{"errorCall":{"arguments":[{"id":2464,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"4384:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"4390:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2466,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4399:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2463,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4363:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2468,"nodeType":"RevertStatement","src":"4356:57:10"}]}}]},"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"3824:23:10","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":2472,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:10","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"from","nameLocation":"3882:4:10","nodeType":"VariableDeclaration","scope":2472,"src":"3874:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2428,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2431,"mutability":"mutable","name":"to","nameLocation":"3896:2:10","nodeType":"VariableDeclaration","scope":2472,"src":"3888:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2430,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:10","nodeType":"VariableDeclaration","scope":2472,"src":"3900:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:10"},"returnParameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"3932:0:10"},"scope":3112,"src":"3852:578:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3184],"body":{"id":2489,"nodeType":"Block","src":"4540:56:10","statements":[{"expression":{"arguments":[{"id":2483,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"4567:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2484,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"4573:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2485,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"4577:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2482,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[2490,2520],"referencedDeclaration":2520,"src":"4550:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2488,"nodeType":"ExpressionStatement","src":"4550:39:10"}]},"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"4436:23:10","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:10","nodeType":"FunctionDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"from","nameLocation":"4498:4:10","nodeType":"VariableDeclaration","scope":2490,"src":"4490:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"to","nameLocation":"4512:2:10","nodeType":"VariableDeclaration","scope":2490,"src":"4504:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2476,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:10","nodeType":"VariableDeclaration","scope":2490,"src":"4516:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:10"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[],"src":"4540:0:10"},"scope":3112,"src":"4464:132:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3174],"body":{"id":2519,"nodeType":"Block","src":"4733:130:10","statements":[{"expression":{"arguments":[{"id":2503,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"4756:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2504,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"4762:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2505,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"4766:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2502,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"4743:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2507,"nodeType":"ExpressionStatement","src":"4743:31:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2511,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"4818:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2513,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"4832:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2514,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"4838:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2515,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"4842:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2516,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"4851:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2508,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"4784:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3352_$","typeString":"type(library ERC721Utils)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:10","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3351,"src":"4784:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2518,"nodeType":"ExpressionStatement","src":"4784:72:10"}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"4602:23:10","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":2520,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:10","nodeType":"FunctionDefinition","parameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"from","nameLocation":"4664:4:10","nodeType":"VariableDeclaration","scope":2520,"src":"4656:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"to","nameLocation":"4678:2:10","nodeType":"VariableDeclaration","scope":2520,"src":"4670:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2494,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:10","nodeType":"VariableDeclaration","scope":2520,"src":"4682:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"data","nameLocation":"4712:4:10","nodeType":"VariableDeclaration","scope":2520,"src":"4699:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2498,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:10"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[],"src":"4733:0:10"},"scope":3112,"src":"4630:233:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2532,"nodeType":"Block","src":"5453:40:10","statements":[{"expression":{"baseExpression":{"id":2528,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"5470:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2530,"indexExpression":{"id":2529,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"5478:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2527,"id":2531,"nodeType":"Return","src":"5463:23:10"}]},"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"4869:504:10","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":2533,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:10","nodeType":"FunctionDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:10","nodeType":"VariableDeclaration","scope":2533,"src":"5396:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:10"},"returnParameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2533,"src":"5444:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2525,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:10"},"scope":3112,"src":"5378:115:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2545,"nodeType":"Block","src":"5688:48:10","statements":[{"expression":{"baseExpression":{"id":2541,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"5705:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2543,"indexExpression":{"id":2542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"5721:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2540,"id":2544,"nodeType":"Return","src":"5698:31:10"}]},"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"5499:105:10","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":2546,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:10","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:10","nodeType":"VariableDeclaration","scope":2546,"src":"5631:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:10"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2546,"src":"5679:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2538,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:10"},"scope":3112,"src":"5609:127:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2581,"nodeType":"Block","src":"6156:163:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2558,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6185:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:10","typeDescriptions":{}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"6223:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2565,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6232:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2568,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"6260:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6267:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2567,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"6243:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2573,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"6292:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2572,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"6279:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2575,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"6304:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2557,"id":2580,"nodeType":"Return","src":"6166:146:10"}]},"documentation":{"id":2547,"nodeType":"StructuredDocumentation","src":"5742:300:10","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2582,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:10","nodeType":"FunctionDefinition","parameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"owner","nameLocation":"6078:5:10","nodeType":"VariableDeclaration","scope":2582,"src":"6070:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2548,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"spender","nameLocation":"6093:7:10","nodeType":"VariableDeclaration","scope":2582,"src":"6085:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:10","nodeType":"VariableDeclaration","scope":2582,"src":"6102:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:10"},"returnParameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2582,"src":"6150:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2555,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:10"},"scope":3112,"src":"6047:272:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2618,"nodeType":"Block","src":"6848:271:10","statements":[{"condition":{"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:10","subExpression":{"arguments":[{"id":2593,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"6877:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2594,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"6884:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"6893:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2592,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"6863:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2617,"nodeType":"IfStatement","src":"6858:255:10","trueBody":{"id":2616,"nodeType":"Block","src":"6903:210:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"6921:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:10","typeDescriptions":{}}},"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2614,"nodeType":"Block","src":"7019:84:10","statements":[{"errorCall":{"arguments":[{"id":2610,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"7071:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2611,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"7080:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2609,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7044:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2613,"nodeType":"RevertStatement","src":"7037:51:10"}]},"id":2615,"nodeType":"IfStatement","src":"6917:186:10","trueBody":{"id":2608,"nodeType":"Block","src":"6942:71:10","statements":[{"errorCall":{"arguments":[{"id":2605,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"6990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2604,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6967:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2607,"nodeType":"RevertStatement","src":"6960:38:10"}]}}]}}]},"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"6325:421:10","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2619,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:10","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"owner","nameLocation":"6785:5:10","nodeType":"VariableDeclaration","scope":2619,"src":"6777:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"spender","nameLocation":"6800:7:10","nodeType":"VariableDeclaration","scope":2619,"src":"6792:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:10","nodeType":"VariableDeclaration","scope":2619,"src":"6809:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:10"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"6848:0:10"},"scope":3112,"src":"6751:368:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2634,"nodeType":"Block","src":"7836:78:10","statements":[{"id":2633,"nodeType":"UncheckedBlock","src":"7846:62:10","statements":[{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2627,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"7870:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2629,"indexExpression":{"id":2628,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"7880:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"7892:5:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ExpressionStatement","src":"7870:27:10"}]}]},"documentation":{"id":2620,"nodeType":"StructuredDocumentation","src":"7125:631:10","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":2635,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:10","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"account","nameLocation":"7795:7:10","nodeType":"VariableDeclaration","scope":2635,"src":"7787:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"value","nameLocation":"7812:5:10","nodeType":"VariableDeclaration","scope":2635,"src":"7804:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2623,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:10"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[],"src":"7836:0:10"},"scope":3112,"src":"7761:153:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2724,"nodeType":"Block","src":"8602:700:10","statements":[{"assignments":[2648],"declarations":[{"constant":false,"id":2648,"mutability":"mutable","name":"from","nameLocation":"8620:4:10","nodeType":"VariableDeclaration","scope":2724,"src":"8612:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2652,"initialValue":{"arguments":[{"id":2650,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"8636:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2649,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"8627:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"8704:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:10","typeDescriptions":{}}},"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2666,"nodeType":"IfStatement","src":"8700:86:10","trueBody":{"id":2665,"nodeType":"Block","src":"8724:62:10","statements":[{"expression":{"arguments":[{"id":2660,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"8755:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2661,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"8761:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2662,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"8767:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2659,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"8738:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2664,"nodeType":"ExpressionStatement","src":"8738:37:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"8830:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2668,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:10","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2694,"nodeType":"IfStatement","src":"8826:256:10","trueBody":{"id":2693,"nodeType":"Block","src":"8850:232:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:10","typeDescriptions":{}}},"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2678,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"8967:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2679,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:10","typeDescriptions":{}}},"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2673,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2979,3045],"referencedDeclaration":3045,"src":"8946:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2685,"nodeType":"ExpressionStatement","src":"8946:48:10"},{"id":2692,"nodeType":"UncheckedBlock","src":"9009:63:10","statements":[{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2686,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"9037:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2688,"indexExpression":{"id":2687,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9047:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ExpressionStatement","src":"9037:20:10"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"9096:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2696,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:10","typeDescriptions":{}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2709,"nodeType":"IfStatement","src":"9092:107:10","trueBody":{"id":2708,"nodeType":"Block","src":"9114:85:10","statements":[{"id":2707,"nodeType":"UncheckedBlock","src":"9128:61:10","statements":[{"expression":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2701,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"9156:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2703,"indexExpression":{"id":2702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"9166:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2706,"nodeType":"ExpressionStatement","src":"9156:18:10"}]}]}},{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2710,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"9209:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2712,"indexExpression":{"id":2711,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"9217:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2713,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"9228:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2715,"nodeType":"ExpressionStatement","src":"9209:21:10"},{"eventCall":{"arguments":[{"id":2717,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9255:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2718,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"9261:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2719,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"9265:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2716,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"9246:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2721,"nodeType":"EmitStatement","src":"9241:32:10"},{"expression":{"id":2722,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"9291:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2646,"id":2723,"nodeType":"Return","src":"9284:11:10"}]},"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"7920:582:10","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:10","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"to","nameLocation":"8532:2:10","nodeType":"VariableDeclaration","scope":2725,"src":"8524:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:10","nodeType":"VariableDeclaration","scope":2725,"src":"8536:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"auth","nameLocation":"8561:4:10","nodeType":"VariableDeclaration","scope":2725,"src":"8553:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:10"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2725,"src":"8593:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2644,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:10"},"scope":3112,"src":"8507:795:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2774,"nodeType":"Block","src":"9677:274:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"9691:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:10","typeDescriptions":{}}},"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2747,"nodeType":"IfStatement","src":"9687:87:10","trueBody":{"id":2746,"nodeType":"Block","src":"9709:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:10","typeDescriptions":{}}},"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2739,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"9730:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2745,"nodeType":"RevertStatement","src":"9723:40:10"}]}},{"assignments":[2749],"declarations":[{"constant":false,"id":2749,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:10","nodeType":"VariableDeclaration","scope":2774,"src":"9783:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2748,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2758,"initialValue":{"arguments":[{"id":2751,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"9815:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2752,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"9819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2753,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:10","typeDescriptions":{}}},"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2750,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9807:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"9853:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:10","typeDescriptions":{}}},"id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2773,"nodeType":"IfStatement","src":"9849:96:10","trueBody":{"id":2772,"nodeType":"Block","src":"9882:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2766,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:10","typeDescriptions":{}}},"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2765,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"9903:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2771,"nodeType":"RevertStatement","src":"9896:38:10"}]}}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"9308:311:10","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:10","nodeType":"FunctionDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"to","nameLocation":"9647:2:10","nodeType":"VariableDeclaration","scope":2775,"src":"9639:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:10","nodeType":"VariableDeclaration","scope":2775,"src":"9651:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:10"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[],"src":"9677:0:10"},"scope":3112,"src":"9624:327:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2789,"nodeType":"Block","src":"10359:43:10","statements":[{"expression":{"arguments":[{"id":2784,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"10379:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2785,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"10383:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2783,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2790,2820],"referencedDeclaration":2820,"src":"10369:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2788,"nodeType":"ExpressionStatement","src":"10369:26:10"}]},"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"9957:340:10","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2790,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:10","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"to","nameLocation":"10329:2:10","nodeType":"VariableDeclaration","scope":2790,"src":"10321:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:10","nodeType":"VariableDeclaration","scope":2790,"src":"10333:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:10"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"10359:0:10"},"scope":3112,"src":"10302:100:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2819,"nodeType":"Block","src":"10707:123:10","statements":[{"expression":{"arguments":[{"id":2801,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"10723:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2802,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"10727:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2800,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"10717:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2804,"nodeType":"ExpressionStatement","src":"10717:18:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2808,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"10779:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:10","typeDescriptions":{}}},"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2814,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"10805:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2815,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"10809:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2816,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"10818:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2805,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"10745:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3352_$","typeString":"type(library ERC721Utils)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:10","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3351,"src":"10745:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2818,"nodeType":"ExpressionStatement","src":"10745:78:10"}]},"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"10408:210:10","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2820,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:10","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"to","nameLocation":"10650:2:10","nodeType":"VariableDeclaration","scope":2820,"src":"10642:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:10","nodeType":"VariableDeclaration","scope":2820,"src":"10654:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"data","nameLocation":"10684:4:10","nodeType":"VariableDeclaration","scope":2820,"src":"10671:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2796,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:10"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"10707:0:10"},"scope":3112,"src":"10623:207:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2852,"nodeType":"Block","src":"11197:186:10","statements":[{"assignments":[2827],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:10","nodeType":"VariableDeclaration","scope":2852,"src":"11207:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2839,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:10","typeDescriptions":{}}},"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2833,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"11251:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2834,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:10","typeDescriptions":{}}},"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2828,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"11231:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"11285:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:10","typeDescriptions":{}}},"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2851,"nodeType":"IfStatement","src":"11281:96:10","trueBody":{"id":2850,"nodeType":"Block","src":"11314:63:10","statements":[{"errorCall":{"arguments":[{"id":2847,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"11358:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2846,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11335:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2849,"nodeType":"RevertStatement","src":"11328:38:10"}]}}]},"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"10836:315:10","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2853,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:10","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:10","nodeType":"VariableDeclaration","scope":2853,"src":"11171:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:10"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[],"src":"11197:0:10"},"scope":3112,"src":"11156:227:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"11778:389:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"11792:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:10","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2877,"nodeType":"IfStatement","src":"11788:87:10","trueBody":{"id":2876,"nodeType":"Block","src":"11810:65:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:10","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2869,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"11831:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2875,"nodeType":"RevertStatement","src":"11824:40:10"}]}},{"assignments":[2879],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:10","nodeType":"VariableDeclaration","scope":2912,"src":"11884:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2878,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2888,"initialValue":{"arguments":[{"id":2881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"11916:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2882,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"11920:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2883,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:10","typeDescriptions":{}}},"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2880,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"11908:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"11954:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:10","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"12056:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2901,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"12073:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"nodeType":"IfStatement","src":"12052:109:10","trueBody":{"id":2909,"nodeType":"Block","src":"12079:82:10","statements":[{"errorCall":{"arguments":[{"id":2904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"12121:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2905,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"12127:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2906,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"12136:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2903,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12100:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2908,"nodeType":"RevertStatement","src":"12093:57:10"}]}},"id":2911,"nodeType":"IfStatement","src":"11950:211:10","trueBody":{"id":2899,"nodeType":"Block","src":"11983:63:10","statements":[{"errorCall":{"arguments":[{"id":2896,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"12027:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2895,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12004:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2898,"nodeType":"RevertStatement","src":"11997:38:10"}]}}]},"documentation":{"id":2854,"nodeType":"StructuredDocumentation","src":"11389:313:10","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:10","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"from","nameLocation":"11734:4:10","nodeType":"VariableDeclaration","scope":2913,"src":"11726:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"to","nameLocation":"11748:2:10","nodeType":"VariableDeclaration","scope":2913,"src":"11740:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2857,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:10","nodeType":"VariableDeclaration","scope":2913,"src":"11752:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:10"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[],"src":"11778:0:10"},"scope":3112,"src":"11707:460:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2930,"nodeType":"Block","src":"13176:53:10","statements":[{"expression":{"arguments":[{"id":2924,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"13200:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2925,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"13206:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2926,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"13210:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2923,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2931,2961],"referencedDeclaration":2961,"src":"13186:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"ExpressionStatement","src":"13186:36:10"}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"12173:923:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:10","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"from","nameLocation":"13132:4:10","nodeType":"VariableDeclaration","scope":2931,"src":"13124:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"to","nameLocation":"13146:2:10","nodeType":"VariableDeclaration","scope":2931,"src":"13138:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:10","nodeType":"VariableDeclaration","scope":2931,"src":"13150:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:10"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[],"src":"13176:0:10"},"scope":3112,"src":"13101:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2960,"nodeType":"Block","src":"13568:127:10","statements":[{"expression":{"arguments":[{"id":2944,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"13588:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2945,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"13594:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2946,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"13598:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2943,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"13578:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2948,"nodeType":"ExpressionStatement","src":"13578:28:10"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2952,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"13650:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2954,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"13664:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2955,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"13670:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2956,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"13674:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2957,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"13683:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2949,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"13616:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3352_$","typeString":"type(library ERC721Utils)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:10","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3351,"src":"13616:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2959,"nodeType":"ExpressionStatement","src":"13616:72:10"}]},"documentation":{"id":2932,"nodeType":"StructuredDocumentation","src":"13235:226:10","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:10","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"from","nameLocation":"13497:4:10","nodeType":"VariableDeclaration","scope":2961,"src":"13489:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2933,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"to","nameLocation":"13511:2:10","nodeType":"VariableDeclaration","scope":2961,"src":"13503:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:10","nodeType":"VariableDeclaration","scope":2961,"src":"13515:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"data","nameLocation":"13545:4:10","nodeType":"VariableDeclaration","scope":2961,"src":"13532:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2939,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:10"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[],"src":"13568:0:10"},"scope":3112,"src":"13466:229:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2978,"nodeType":"Block","src":"14208:50:10","statements":[{"expression":{"arguments":[{"id":2972,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"14227:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2973,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"14231:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2974,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"14240:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2971,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2979,3045],"referencedDeclaration":3045,"src":"14218:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2977,"nodeType":"ExpressionStatement","src":"14218:33:10"}]},"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"13701:432:10","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2979,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:10","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"to","nameLocation":"14164:2:10","nodeType":"VariableDeclaration","scope":2979,"src":"14156:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:10","nodeType":"VariableDeclaration","scope":2979,"src":"14168:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"auth","nameLocation":"14193:4:10","nodeType":"VariableDeclaration","scope":2979,"src":"14185:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:10"},"returnParameters":{"id":2970,"nodeType":"ParameterList","parameters":[],"src":"14208:0:10"},"scope":3112,"src":"14138:120:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3044,"nodeType":"Block","src":"14534:568:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"14600:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"14613:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:10","typeDescriptions":{}}},"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3037,"nodeType":"IfStatement","src":"14596:460:10","trueBody":{"id":3036,"nodeType":"Block","src":"14633:423:10","statements":[{"assignments":[3000],"declarations":[{"constant":false,"id":3000,"mutability":"mutable","name":"owner","nameLocation":"14655:5:10","nodeType":"VariableDeclaration","scope":3036,"src":"14647:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3004,"initialValue":{"arguments":[{"id":3002,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"14677:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3001,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"14663:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3005,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"14813:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3006,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:10","typeDescriptions":{}}},"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"14835:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3012,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"14844:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:10","subExpression":{"arguments":[{"id":3016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"14870:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3017,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"14877:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3015,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"14853:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3026,"nodeType":"IfStatement","src":"14809:142:10","trueBody":{"id":3025,"nodeType":"Block","src":"14884:67:10","statements":[{"errorCall":{"arguments":[{"id":3022,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"14931:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3021,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"14909:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3024,"nodeType":"RevertStatement","src":"14902:34:10"}]}},{"condition":{"id":3027,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"14969:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3035,"nodeType":"IfStatement","src":"14965:81:10","trueBody":{"id":3034,"nodeType":"Block","src":"14980:66:10","statements":[{"eventCall":{"arguments":[{"id":3029,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"15012:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3030,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"15019:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3031,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"15023:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3028,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"15003:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3033,"nodeType":"EmitStatement","src":"14998:33:10"}]}}]}},{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3038,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"15066:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3040,"indexExpression":{"id":3039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"15082:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"15093:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3043,"nodeType":"ExpressionStatement","src":"15066:29:10"}]},"documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"14264:171:10","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":3045,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:10","nodeType":"FunctionDefinition","parameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"to","nameLocation":"14466:2:10","nodeType":"VariableDeclaration","scope":3045,"src":"14458:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:10","nodeType":"VariableDeclaration","scope":3045,"src":"14470:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2986,"mutability":"mutable","name":"auth","nameLocation":"14495:4:10","nodeType":"VariableDeclaration","scope":3045,"src":"14487:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2985,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2988,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:10","nodeType":"VariableDeclaration","scope":3045,"src":"14501:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2987,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:10"},"returnParameters":{"id":2990,"nodeType":"ParameterList","parameters":[],"src":"14534:0:10"},"scope":3112,"src":"14440:662:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3081,"nodeType":"Block","src":"15404:219:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3055,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"15418:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:10","typeDescriptions":{}}},"id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3066,"nodeType":"IfStatement","src":"15414:91:10","trueBody":{"id":3065,"nodeType":"Block","src":"15442:63:10","statements":[{"errorCall":{"arguments":[{"id":3062,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"15485:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3061,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15463:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3064,"nodeType":"RevertStatement","src":"15456:38:10"}]}},{"expression":{"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3067,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"15514:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":3070,"indexExpression":{"id":3068,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"15533:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3071,"indexExpression":{"id":3069,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"15540:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3072,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"15552:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3074,"nodeType":"ExpressionStatement","src":"15514:46:10"},{"eventCall":{"arguments":[{"id":3076,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"15590:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3077,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"15597:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3078,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"15607:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3075,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"15575:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3080,"nodeType":"EmitStatement","src":"15570:46:10"}]},"documentation":{"id":3046,"nodeType":"StructuredDocumentation","src":"15108:198:10","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":3082,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:10","nodeType":"FunctionDefinition","parameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"owner","nameLocation":"15347:5:10","nodeType":"VariableDeclaration","scope":3082,"src":"15339:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"operator","nameLocation":"15362:8:10","nodeType":"VariableDeclaration","scope":3082,"src":"15354:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"approved","nameLocation":"15377:8:10","nodeType":"VariableDeclaration","scope":3082,"src":"15372:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3051,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:10"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[],"src":"15404:0:10"},"scope":3112,"src":"15311:312:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"15930:169:10","statements":[{"assignments":[3091],"declarations":[{"constant":false,"id":3091,"mutability":"mutable","name":"owner","nameLocation":"15948:5:10","nodeType":"VariableDeclaration","scope":3110,"src":"15940:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3095,"initialValue":{"arguments":[{"id":3093,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"15965:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3092,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"15956:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3096,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"15987:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3097,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:10","typeDescriptions":{}}},"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3107,"nodeType":"IfStatement","src":"15983:88:10","trueBody":{"id":3106,"nodeType":"Block","src":"16008:63:10","statements":[{"errorCall":{"arguments":[{"id":3103,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"16052:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3102,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16029:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3105,"nodeType":"RevertStatement","src":"16022:38:10"}]}},{"expression":{"id":3108,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"16087:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3089,"id":3109,"nodeType":"Return","src":"16080:12:10"}]},"documentation":{"id":3083,"nodeType":"StructuredDocumentation","src":"15629:224:10","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:10","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:10","nodeType":"VariableDeclaration","scope":3111,"src":"15881:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:10"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3111,"src":"15921:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:10"},"scope":3112,"src":"15858:241:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3113,"src":"775:15326:10","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[3128,3137,3146]}],"src":"107:15995:10"},"id":10},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[6136],"IERC721":[3229]},"id":3230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3114,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3230,"sourceUnit":6137,"src":"134:62:11","symbolAliases":[{"foreign":{"id":3115,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"142:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3118,"name":"IERC165","nameLocations":["288:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":6136,"src":"288:7:11"},"id":3119,"nodeType":"InheritanceSpecifier","src":"288:7:11"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"198:68:11","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":3229,"linearizedBaseContracts":[3229,6136],"name":"IERC721","nameLocation":"277:7:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3120,"nodeType":"StructuredDocumentation","src":"302:88:11","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3128,"name":"Transfer","nameLocation":"401:8:11","nodeType":"EventDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:11","nodeType":"VariableDeclaration","scope":3128,"src":"410:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3121,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3124,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:11","nodeType":"VariableDeclaration","scope":3128,"src":"432:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3126,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:11","nodeType":"VariableDeclaration","scope":3128,"src":"452:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:11"},"src":"395:82:11"},{"anonymous":false,"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"483:94:11","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3137,"name":"Approval","nameLocation":"588:8:11","nodeType":"EventDefinition","parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:11","nodeType":"VariableDeclaration","scope":3137,"src":"597:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3130,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3133,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:11","nodeType":"VariableDeclaration","scope":3137,"src":"620:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3135,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:11","nodeType":"VariableDeclaration","scope":3137,"src":"646:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:11"},"src":"582:89:11"},{"anonymous":false,"documentation":{"id":3138,"nodeType":"StructuredDocumentation","src":"677:117:11","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":3146,"name":"ApprovalForAll","nameLocation":"805:14:11","nodeType":"EventDefinition","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:11","nodeType":"VariableDeclaration","scope":3146,"src":"820:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3139,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3142,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:11","nodeType":"VariableDeclaration","scope":3146,"src":"843:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3141,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3144,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:11","nodeType":"VariableDeclaration","scope":3146,"src":"869:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3143,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:11"},"src":"799:85:11"},{"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"890:76:11","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":3154,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:11","nodeType":"FunctionDefinition","parameters":{"id":3150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"owner","nameLocation":"998:5:11","nodeType":"VariableDeclaration","scope":3154,"src":"990:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3148,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:11"},"returnParameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"balance","nameLocation":"1036:7:11","nodeType":"VariableDeclaration","scope":3154,"src":"1028:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:11"},"scope":3229,"src":"971:74:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"1051:131:11","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":3162,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:11","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:11","nodeType":"VariableDeclaration","scope":3162,"src":"1204:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:11"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"owner","nameLocation":"1252:5:11","nodeType":"VariableDeclaration","scope":3162,"src":"1244:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:11"},"scope":3229,"src":"1187:72:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"1265:565:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":3174,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:11","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"from","nameLocation":"1869:4:11","nodeType":"VariableDeclaration","scope":3174,"src":"1861:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3164,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"to","nameLocation":"1883:2:11","nodeType":"VariableDeclaration","scope":3174,"src":"1875:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:11","nodeType":"VariableDeclaration","scope":3174,"src":"1887:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"data","nameLocation":"1919:4:11","nodeType":"VariableDeclaration","scope":3174,"src":"1904:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3170,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:11"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[],"src":"1933:0:11"},"scope":3229,"src":"1835:99:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"1940:706:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":3184,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:11","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"from","nameLocation":"2685:4:11","nodeType":"VariableDeclaration","scope":3184,"src":"2677:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3176,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"to","nameLocation":"2699:2:11","nodeType":"VariableDeclaration","scope":3184,"src":"2691:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3178,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:11","nodeType":"VariableDeclaration","scope":3184,"src":"2703:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:11"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[],"src":"2728:0:11"},"scope":3229,"src":"2651:78:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"2735:733:11","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3194,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:11","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"from","nameLocation":"3503:4:11","nodeType":"VariableDeclaration","scope":3194,"src":"3495:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3186,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"to","nameLocation":"3517:2:11","nodeType":"VariableDeclaration","scope":3194,"src":"3509:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:11","nodeType":"VariableDeclaration","scope":3194,"src":"3521:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:11"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[],"src":"3546:0:11"},"scope":3229,"src":"3473:74:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3195,"nodeType":"StructuredDocumentation","src":"3553:452:11","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3202,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:11","nodeType":"FunctionDefinition","parameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"to","nameLocation":"4035:2:11","nodeType":"VariableDeclaration","scope":3202,"src":"4027:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3196,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:11","nodeType":"VariableDeclaration","scope":3202,"src":"4039:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:11"},"returnParameters":{"id":3201,"nodeType":"ParameterList","parameters":[],"src":"4064:0:11"},"scope":3229,"src":"4010:55:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3203,"nodeType":"StructuredDocumentation","src":"4071:315:11","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":3210,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:11","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"operator","nameLocation":"4426:8:11","nodeType":"VariableDeclaration","scope":3210,"src":"4418:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"approved","nameLocation":"4441:8:11","nodeType":"VariableDeclaration","scope":3210,"src":"4436:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3206,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:11"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[],"src":"4459:0:11"},"scope":3229,"src":"4391:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"4466:139:11","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":3218,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:11","nodeType":"FunctionDefinition","parameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:11","nodeType":"VariableDeclaration","scope":3218,"src":"4631:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:11"},"returnParameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"operator","nameLocation":"4679:8:11","nodeType":"VariableDeclaration","scope":3218,"src":"4671:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3215,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:11"},"scope":3229,"src":"4610:79:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"4695:138:11","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":3228,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:11","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"owner","nameLocation":"4872:5:11","nodeType":"VariableDeclaration","scope":3228,"src":"4864:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"operator","nameLocation":"4887:8:11","nodeType":"VariableDeclaration","scope":3228,"src":"4879:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3222,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:11"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3228,"src":"4920:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3225,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:11"},"scope":3229,"src":"4838:88:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3230,"src":"267:4661:11","usedErrors":[],"usedEvents":[3128,3137,3146]}],"src":"108:4821:11"},"id":11},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3247]},"id":3248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3231,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3232,"nodeType":"StructuredDocumentation","src":"142:154:12","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":3247,"linearizedBaseContracts":[3247],"name":"IERC721Receiver","nameLocation":"307:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3233,"nodeType":"StructuredDocumentation","src":"329:500:12","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3246,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:12","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"operator","nameLocation":"877:8:12","nodeType":"VariableDeclaration","scope":3246,"src":"869:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"from","nameLocation":"903:4:12","nodeType":"VariableDeclaration","scope":3246,"src":"895:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:12","nodeType":"VariableDeclaration","scope":3246,"src":"917:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"data","nameLocation":"957:4:12","nodeType":"VariableDeclaration","scope":3246,"src":"942:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3240,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:12"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3246,"src":"986:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3243,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:12"},"scope":3247,"src":"834:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3248,"src":"297:699:12","usedErrors":[],"usedEvents":[]}],"src":"116:881:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[3229],"IERC721Metadata":[3275]},"id":3276,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3249,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3276,"sourceUnit":3230,"src":"153:39:13","symbolAliases":[{"foreign":{"id":3250,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"161:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3253,"name":"IERC721","nameLocations":["357:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":3229,"src":"357:7:13"},"id":3254,"nodeType":"InheritanceSpecifier","src":"357:7:13"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3252,"nodeType":"StructuredDocumentation","src":"194:133:13","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3275,"linearizedBaseContracts":[3275,3229,6136],"name":"IERC721Metadata","nameLocation":"338:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"371:58:13","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3260,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:13","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[],"src":"447:2:13"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3260,"src":"473:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3257,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:13"},"scope":3275,"src":"434:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"494:60:13","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3266,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:13","nodeType":"FunctionDefinition","parameters":{"id":3262,"nodeType":"ParameterList","parameters":[],"src":"574:2:13"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3266,"src":"600:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3263,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:13"},"scope":3275,"src":"559:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"621:90:13","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3274,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:13","nodeType":"FunctionDefinition","parameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:13","nodeType":"VariableDeclaration","scope":3274,"src":"734:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:13"},"returnParameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3274,"src":"774:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3271,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:13"},"scope":3275,"src":"716:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3276,"src":"328:463:13","usedErrors":[],"usedEvents":[3128,3137,3146]}],"src":"127:665:13"},"id":13},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[3352],"IERC721Errors":[237],"IERC721Receiver":[3247]},"id":3353,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3277,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":3279,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3353,"sourceUnit":3248,"src":"144:55:14","symbolAliases":[{"foreign":{"id":3278,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"152:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":3281,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3353,"sourceUnit":285,"src":"200:69:14","symbolAliases":[{"foreign":{"id":3280,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3282,"nodeType":"StructuredDocumentation","src":"271:159:14","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":3352,"linearizedBaseContracts":[3352],"name":"ERC721Utils","nameLocation":"439:11:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":3350,"nodeType":"Block","src":"1159:760:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3296,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"1173:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:14","memberName":"code","nodeType":"MemberAccess","src":"1173:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:14","memberName":"length","nodeType":"MemberAccess","src":"1173:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3349,"nodeType":"IfStatement","src":"1169:744:14","trueBody":{"id":3348,"nodeType":"Block","src":"1193:720:14","statements":[{"clauses":[{"block":{"id":3326,"nodeType":"Block","src":"1303:214:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1325:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3314,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"1335:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3247_$","typeString":"type(contract IERC721Receiver)"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3246,"src":"1335:32:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:14","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3325,"nodeType":"IfStatement","src":"1321:182:14","trueBody":{"id":3324,"nodeType":"Block","src":"1378:125:14","statements":[{"errorCall":{"arguments":[{"id":3321,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"1481:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3318,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1445:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1445:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3323,"nodeType":"RevertStatement","src":"1438:46:14"}]}}]},"errorName":"","id":3327,"nodeType":"TryCatchClause","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"retval","nameLocation":"1295:6:14","nodeType":"VariableDeclaration","scope":3327,"src":"1288:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3310,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:14"},"src":"1279:238:14"},{"block":{"id":3345,"nodeType":"Block","src":"1546:357:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3331,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"1568:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:14","memberName":"length","nodeType":"MemberAccess","src":"1568:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3343,"nodeType":"Block","src":"1736:153:14","statements":[{"AST":{"nativeSrc":"1783:88:14","nodeType":"YulBlock","src":"1783:88:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:14","nodeType":"YulIdentifier","src":"1820:6:14"},{"kind":"number","nativeSrc":"1828:4:14","nodeType":"YulLiteral","src":"1828:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:14","nodeType":"YulIdentifier","src":"1816:3:14"},"nativeSrc":"1816:17:14","nodeType":"YulFunctionCall","src":"1816:17:14"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:14","nodeType":"YulIdentifier","src":"1841:6:14"}],"functionName":{"name":"mload","nativeSrc":"1835:5:14","nodeType":"YulIdentifier","src":"1835:5:14"},"nativeSrc":"1835:13:14","nodeType":"YulFunctionCall","src":"1835:13:14"}],"functionName":{"name":"revert","nativeSrc":"1809:6:14","nodeType":"YulIdentifier","src":"1809:6:14"},"nativeSrc":"1809:40:14","nodeType":"YulFunctionCall","src":"1809:40:14"},"nativeSrc":"1809:40:14","nodeType":"YulExpressionStatement","src":"1809:40:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3329,"isOffset":false,"isSlot":false,"src":"1820:6:14","valueSize":1},{"declaration":3329,"isOffset":false,"isSlot":false,"src":"1841:6:14","valueSize":1}],"flags":["memory-safe"],"id":3342,"nodeType":"InlineAssembly","src":"1758:113:14"}]},"id":3344,"nodeType":"IfStatement","src":"1564:325:14","trueBody":{"id":3341,"nodeType":"Block","src":"1588:142:14","statements":[{"errorCall":{"arguments":[{"id":3338,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"1708:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3335,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1672:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1672:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3340,"nodeType":"RevertStatement","src":"1665:46:14"}]}}]},"errorName":"","id":3346,"nodeType":"TryCatchClause","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"reason","nameLocation":"1538:6:14","nodeType":"VariableDeclaration","scope":3346,"src":"1525:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3328,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:14"},"src":"1518:385:14"}],"externalCall":{"arguments":[{"id":3305,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"1248:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3306,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"1258:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3307,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"1264:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3308,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1273:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3302,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"1227:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3301,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"1211:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3247_$","typeString":"type(contract IERC721Receiver)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$3247","typeString":"contract IERC721Receiver"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3246,"src":"1211:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3347,"nodeType":"TryStatement","src":"1207:696:14"}]}}]},"documentation":{"id":3283,"nodeType":"StructuredDocumentation","src":"457:531:14","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":3351,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:14","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"operator","nameLocation":"1041:8:14","nodeType":"VariableDeclaration","scope":3351,"src":"1033:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"from","nameLocation":"1067:4:14","nodeType":"VariableDeclaration","scope":3351,"src":"1059:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3286,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"to","nameLocation":"1089:2:14","nodeType":"VariableDeclaration","scope":3351,"src":"1081:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3288,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:14","nodeType":"VariableDeclaration","scope":3351,"src":"1101:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"data","nameLocation":"1139:4:14","nodeType":"VariableDeclaration","scope":3351,"src":"1126:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3292,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:14"},"returnParameters":{"id":3295,"nodeType":"ParameterList","parameters":[],"src":"1159:0:14"},"scope":3352,"src":"993:926:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3353,"src":"431:1490:14","usedErrors":[],"usedEvents":[]}],"src":"118:1804:14"},"id":14},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[4330],"Comparators":[4362],"Math":[7757],"SlotDerivation":[4574],"StorageSlot":[4698]},"id":4331,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3354,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":3356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4331,"sourceUnit":4363,"src":"209:46:15","symbolAliases":[{"foreign":{"id":3355,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"217:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":3358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4331,"sourceUnit":4575,"src":"256:52:15","symbolAliases":[{"foreign":{"id":3357,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"264:14:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4331,"sourceUnit":4699,"src":"309:46:15","symbolAliases":[{"foreign":{"id":3359,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"317:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4331,"sourceUnit":7758,"src":"356:37:15","symbolAliases":[{"foreign":{"id":3361,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"364:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"395:63:15","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":4330,"linearizedBaseContracts":[4330],"name":"Arrays","nameLocation":"467:6:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3366,"libraryName":{"id":3364,"name":"SlotDerivation","nameLocations":["486:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":4574,"src":"486:14:15"},"nodeType":"UsingForDirective","src":"480:33:15","typeName":{"id":3365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":3369,"libraryName":{"id":3367,"name":"StorageSlot","nameLocations":["524:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":4698,"src":"524:11:15"},"nodeType":"UsingForDirective","src":"518:30:15","typeName":{"id":3368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":3401,"nodeType":"Block","src":"1628:83:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3391,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"1656:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3390,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"1649:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3394,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"1669:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3393,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"1664:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3396,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"1677:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3389,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"1638:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3398,"nodeType":"ExpressionStatement","src":"1638:44:15"},{"expression":{"id":3399,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"1699:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3388,"id":3400,"nodeType":"Return","src":"1692:12:15"}]},"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"554:915:15","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:15","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"array","nameLocation":"1514:5:15","nodeType":"VariableDeclaration","scope":3402,"src":"1497:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3372,"nodeType":"ArrayTypeName","src":"1497:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"comp","nameLocation":"1576:4:15","nodeType":"VariableDeclaration","scope":3402,"src":"1529:51:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3382,"nodeType":"FunctionTypeName","parameterTypes":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"1538:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"1547:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:15"},"returnParameterTypes":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"1570:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3379,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:15"},"src":"1529:51:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:15"},"returnParameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"1610:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3386,"nodeType":"ArrayTypeName","src":"1610:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:15"},"scope":4330,"src":"1474:237:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3420,"nodeType":"Block","src":"1894:66:15","statements":[{"expression":{"arguments":[{"id":3413,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1909:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3414,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"1916:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4362_$","typeString":"type(library Comparators)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:15","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4347,"src":"1916:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3412,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3402,3421,3453,3474,3506,3527],"referencedDeclaration":3402,"src":"1904:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3417,"nodeType":"ExpressionStatement","src":"1904:27:15"},{"expression":{"id":3418,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1948:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3411,"id":3419,"nodeType":"Return","src":"1941:12:15"}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"1717:93:15","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":3421,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:15","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"array","nameLocation":"1846:5:15","nodeType":"VariableDeclaration","scope":3421,"src":"1829:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3405,"nodeType":"ArrayTypeName","src":"1829:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:15"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3421,"src":"1876:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3409,"nodeType":"ArrayTypeName","src":"1876:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:15"},"scope":4330,"src":"1815:145:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3452,"nodeType":"Block","src":"3040:97:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3443,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"3075:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3442,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3678,3690],"referencedDeclaration":3678,"src":"3055:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3446,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"3102:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":3445,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3716,3742],"referencedDeclaration":3716,"src":"3083:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3441,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3402,3421,3453,3474,3506,3527],"referencedDeclaration":3402,"src":"3050:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3449,"nodeType":"ExpressionStatement","src":"3050:58:15"},{"expression":{"id":3450,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"3125:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3440,"id":3451,"nodeType":"Return","src":"3118:12:15"}]},"documentation":{"id":3422,"nodeType":"StructuredDocumentation","src":"1966:915:15","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3453,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:15","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"array","nameLocation":"2926:5:15","nodeType":"VariableDeclaration","scope":3453,"src":"2909:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3424,"nodeType":"ArrayTypeName","src":"2909:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3435,"mutability":"mutable","name":"comp","nameLocation":"2988:4:15","nodeType":"VariableDeclaration","scope":3453,"src":"2941:51:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3434,"nodeType":"FunctionTypeName","parameterTypes":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3434,"src":"2950:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3426,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3434,"src":"2959:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3428,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:15"},"returnParameterTypes":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3434,"src":"2982:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3431,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:15"},"src":"2941:51:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:15"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"3022:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3437,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3438,"nodeType":"ArrayTypeName","src":"3022:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:15"},"scope":4330,"src":"2886:251:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3473,"nodeType":"Block","src":"3320:87:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3465,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"3355:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3464,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3678,3690],"referencedDeclaration":3678,"src":"3335:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3467,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"3363:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4362_$","typeString":"type(library Comparators)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:15","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4347,"src":"3363:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3463,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3402,3421,3453,3474,3506,3527],"referencedDeclaration":3402,"src":"3330:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3470,"nodeType":"ExpressionStatement","src":"3330:48:15"},{"expression":{"id":3471,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"3395:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3462,"id":3472,"nodeType":"Return","src":"3388:12:15"}]},"documentation":{"id":3454,"nodeType":"StructuredDocumentation","src":"3143:93:15","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":3474,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:15","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"array","nameLocation":"3272:5:15","nodeType":"VariableDeclaration","scope":3474,"src":"3255:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3455,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3456,"nodeType":"ArrayTypeName","src":"3255:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:15"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3474,"src":"3302:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3459,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3460,"nodeType":"ArrayTypeName","src":"3302:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:15"},"scope":4330,"src":"3241:166:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3505,"nodeType":"Block","src":"4487:97:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3496,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"4522:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3495,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3678,3690],"referencedDeclaration":3690,"src":"4502:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3499,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"4549:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":3498,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3716,3742],"referencedDeclaration":3742,"src":"4530:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3494,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3402,3421,3453,3474,3506,3527],"referencedDeclaration":3402,"src":"4497:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3502,"nodeType":"ExpressionStatement","src":"4497:58:15"},{"expression":{"id":3503,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"4572:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3493,"id":3504,"nodeType":"Return","src":"4565:12:15"}]},"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"3413:915:15","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3506,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:15","nodeType":"FunctionDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"array","nameLocation":"4373:5:15","nodeType":"VariableDeclaration","scope":3506,"src":"4356:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3477,"nodeType":"ArrayTypeName","src":"4356:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"comp","nameLocation":"4435:4:15","nodeType":"VariableDeclaration","scope":3506,"src":"4388:51:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3487,"nodeType":"FunctionTypeName","parameterTypes":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"4397:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"4406:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:15"},"returnParameterTypes":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"4429:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3484,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:15"},"src":"4388:51:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:15"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3506,"src":"4469:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3491,"nodeType":"ArrayTypeName","src":"4469:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:15"},"scope":4330,"src":"4333:251:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3526,"nodeType":"Block","src":"4767:87:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3518,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4802:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3517,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3678,3690],"referencedDeclaration":3690,"src":"4782:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3520,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"4810:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4362_$","typeString":"type(library Comparators)"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:15","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4347,"src":"4810:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3516,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3402,3421,3453,3474,3506,3527],"referencedDeclaration":3402,"src":"4777:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3523,"nodeType":"ExpressionStatement","src":"4777:48:15"},{"expression":{"id":3524,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4842:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3515,"id":3525,"nodeType":"Return","src":"4835:12:15"}]},"documentation":{"id":3507,"nodeType":"StructuredDocumentation","src":"4590:93:15","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":3527,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:15","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"array","nameLocation":"4719:5:15","nodeType":"VariableDeclaration","scope":3527,"src":"4702:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3509,"nodeType":"ArrayTypeName","src":"4702:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:15"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3527,"src":"4749:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3513,"nodeType":"ArrayTypeName","src":"4749:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:15"},"scope":4330,"src":"4688:166:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3614,"nodeType":"Block","src":"5470:889:15","statements":[{"id":3613,"nodeType":"UncheckedBlock","src":"5480:873:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5508:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3546,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5514:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3551,"nodeType":"IfStatement","src":"5504:31:15","trueBody":{"functionReturnParameters":3544,"id":3550,"nodeType":"Return","src":"5528:7:15"}},{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:15","nodeType":"VariableDeclaration","scope":3613,"src":"5591:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3557,"initialValue":{"arguments":[{"id":3555,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5614:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3554,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"5607:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:15"},{"assignments":[3559],"declarations":[{"constant":false,"id":3559,"mutability":"mutable","name":"pos","nameLocation":"5715:3:15","nodeType":"VariableDeclaration","scope":3613,"src":"5707:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3561,"initialValue":{"id":3560,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5721:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:15"},{"body":{"id":3592,"nodeType":"Block","src":"5795:331:15","statements":[{"condition":{"arguments":[{"arguments":[{"id":3577,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5829:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3576,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"5822:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3579,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"5834:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3575,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"5817:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3591,"nodeType":"IfStatement","src":"5813:299:15","trueBody":{"id":3590,"nodeType":"Block","src":"5842:270:15","statements":[{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3581,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"6046:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"6046:11:15"},{"expression":{"arguments":[{"id":3586,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"6085:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3587,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"6090:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3585,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"6079:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3589,"nodeType":"ExpressionStatement","src":"6079:14:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3568,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5773:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3569,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"5778:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"initializationExpression":{"assignments":[3563],"declarations":[{"constant":false,"id":3563,"mutability":"mutable","name":"it","nameLocation":"5754:2:15","nodeType":"VariableDeclaration","scope":3593,"src":"5746:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3567,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5759:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3571,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5783:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ExpressionStatement","src":"5783:10:15"},"nodeType":"ForStatement","src":"5741:385:15"},{"expression":{"arguments":[{"id":3595,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"6146:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3596,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"6153:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3594,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"6140:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3598,"nodeType":"ExpressionStatement","src":"6140:17:15"},{"expression":{"arguments":[{"id":3600,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"6207:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3601,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"6214:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3602,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"6219:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3599,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"6196:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3604,"nodeType":"ExpressionStatement","src":"6196:28:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"6284:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3609,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"6296:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3610,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"6301:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3605,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"6273:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3612,"nodeType":"ExpressionStatement","src":"6273:33:15"}]}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"4860:491:15","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":3615,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:15","nodeType":"FunctionDefinition","parameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"begin","nameLocation":"5384:5:15","nodeType":"VariableDeclaration","scope":3615,"src":"5376:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"end","nameLocation":"5399:3:15","nodeType":"VariableDeclaration","scope":3615,"src":"5391:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"comp","nameLocation":"5451:4:15","nodeType":"VariableDeclaration","scope":3615,"src":"5404:51:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3541,"nodeType":"FunctionTypeName","parameterTypes":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"5413:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"5422:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:15"},"returnParameterTypes":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"5445:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3538,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:15"},"src":"5404:51:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:15"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[],"src":"5470:0:15"},"scope":4330,"src":"5356:1003:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3625,"nodeType":"Block","src":"6532:88:15","statements":[{"AST":{"nativeSrc":"6567:47:15","nodeType":"YulBlock","src":"6567:47:15","statements":[{"nativeSrc":"6581:23:15","nodeType":"YulAssignment","src":"6581:23:15","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:15","nodeType":"YulIdentifier","src":"6592:5:15"},{"kind":"number","nativeSrc":"6599:4:15","nodeType":"YulLiteral","src":"6599:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:15","nodeType":"YulIdentifier","src":"6588:3:15"},"nativeSrc":"6588:16:15","nodeType":"YulFunctionCall","src":"6588:16:15"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:15","nodeType":"YulIdentifier","src":"6581:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3619,"isOffset":false,"isSlot":false,"src":"6592:5:15","valueSize":1},{"declaration":3622,"isOffset":false,"isSlot":false,"src":"6581:3:15","valueSize":1}],"flags":["memory-safe"],"id":3624,"nodeType":"InlineAssembly","src":"6542:72:15"}]},"documentation":{"id":3616,"nodeType":"StructuredDocumentation","src":"6365:87:15","text":" @dev Pointer to the memory location of the first element of `array`."},"id":3626,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:15","nodeType":"FunctionDefinition","parameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"array","nameLocation":"6490:5:15","nodeType":"VariableDeclaration","scope":3626,"src":"6473:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ArrayTypeName","src":"6473:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:15"},"returnParameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:15","nodeType":"VariableDeclaration","scope":3626,"src":"6519:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:15"},"scope":4330,"src":"6457:163:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3645,"nodeType":"Block","src":"6892:93:15","statements":[{"id":3644,"nodeType":"UncheckedBlock","src":"6902:77:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3636,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"6940:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3635,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"6933:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3638,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"6949:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:15","memberName":"length","nodeType":"MemberAccess","src":"6949:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3634,"id":3643,"nodeType":"Return","src":"6926:42:15"}]}]},"documentation":{"id":3627,"nodeType":"StructuredDocumentation","src":"6626:188:15","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3646,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:15","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"array","nameLocation":"6850:5:15","nodeType":"VariableDeclaration","scope":3646,"src":"6833:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3629,"nodeType":"ArrayTypeName","src":"6833:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:15"},"returnParameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:15","nodeType":"VariableDeclaration","scope":3646,"src":"6879:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:15"},"scope":4330,"src":"6819:166:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3655,"nodeType":"Block","src":"7136:68:15","statements":[{"AST":{"nativeSrc":"7155:43:15","nodeType":"YulBlock","src":"7155:43:15","statements":[{"nativeSrc":"7169:19:15","nodeType":"YulAssignment","src":"7169:19:15","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:15","nodeType":"YulIdentifier","src":"7184:3:15"}],"functionName":{"name":"mload","nativeSrc":"7178:5:15","nodeType":"YulIdentifier","src":"7178:5:15"},"nativeSrc":"7178:10:15","nodeType":"YulFunctionCall","src":"7178:10:15"},"variableNames":[{"name":"value","nativeSrc":"7169:5:15","nodeType":"YulIdentifier","src":"7169:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3649,"isOffset":false,"isSlot":false,"src":"7184:3:15","valueSize":1},{"declaration":3652,"isOffset":false,"isSlot":false,"src":"7169:5:15","valueSize":1}],"id":3654,"nodeType":"InlineAssembly","src":"7146:52:15"}]},"documentation":{"id":3647,"nodeType":"StructuredDocumentation","src":"6991:74:15","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3656,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:15","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3649,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:15","nodeType":"VariableDeclaration","scope":3656,"src":"7086:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:15"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"value","nameLocation":"7129:5:15","nodeType":"VariableDeclaration","scope":3656,"src":"7121:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:15"},"scope":4330,"src":"7070:134:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3665,"nodeType":"Block","src":"7348:178:15","statements":[{"AST":{"nativeSrc":"7367:153:15","nodeType":"YulBlock","src":"7367:153:15","statements":[{"nativeSrc":"7381:25:15","nodeType":"YulVariableDeclaration","src":"7381:25:15","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:15","nodeType":"YulIdentifier","src":"7401:4:15"}],"functionName":{"name":"mload","nativeSrc":"7395:5:15","nodeType":"YulIdentifier","src":"7395:5:15"},"nativeSrc":"7395:11:15","nodeType":"YulFunctionCall","src":"7395:11:15"},"variables":[{"name":"value1","nativeSrc":"7385:6:15","nodeType":"YulTypedName","src":"7385:6:15","type":""}]},{"nativeSrc":"7419:25:15","nodeType":"YulVariableDeclaration","src":"7419:25:15","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:15","nodeType":"YulIdentifier","src":"7439:4:15"}],"functionName":{"name":"mload","nativeSrc":"7433:5:15","nodeType":"YulIdentifier","src":"7433:5:15"},"nativeSrc":"7433:11:15","nodeType":"YulFunctionCall","src":"7433:11:15"},"variables":[{"name":"value2","nativeSrc":"7423:6:15","nodeType":"YulTypedName","src":"7423:6:15","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:15","nodeType":"YulIdentifier","src":"7464:4:15"},{"name":"value2","nativeSrc":"7470:6:15","nodeType":"YulIdentifier","src":"7470:6:15"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:15","nodeType":"YulIdentifier","src":"7457:6:15"},"nativeSrc":"7457:20:15","nodeType":"YulFunctionCall","src":"7457:20:15"},"nativeSrc":"7457:20:15","nodeType":"YulExpressionStatement","src":"7457:20:15"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:15","nodeType":"YulIdentifier","src":"7497:4:15"},{"name":"value1","nativeSrc":"7503:6:15","nodeType":"YulIdentifier","src":"7503:6:15"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:15","nodeType":"YulIdentifier","src":"7490:6:15"},"nativeSrc":"7490:20:15","nodeType":"YulFunctionCall","src":"7490:20:15"},"nativeSrc":"7490:20:15","nodeType":"YulExpressionStatement","src":"7490:20:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3659,"isOffset":false,"isSlot":false,"src":"7401:4:15","valueSize":1},{"declaration":3659,"isOffset":false,"isSlot":false,"src":"7464:4:15","valueSize":1},{"declaration":3661,"isOffset":false,"isSlot":false,"src":"7439:4:15","valueSize":1},{"declaration":3661,"isOffset":false,"isSlot":false,"src":"7497:4:15","valueSize":1}],"id":3664,"nodeType":"InlineAssembly","src":"7358:162:15"}]},"documentation":{"id":3657,"nodeType":"StructuredDocumentation","src":"7210:77:15","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3666,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:15","nodeType":"FunctionDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:15","nodeType":"VariableDeclaration","scope":3666,"src":"7307:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:15","nodeType":"VariableDeclaration","scope":3666,"src":"7321:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:15"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[],"src":"7348:0:15"},"scope":4330,"src":"7292:234:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3677,"nodeType":"Block","src":"7713:64:15","statements":[{"AST":{"nativeSrc":"7732:39:15","nodeType":"YulBlock","src":"7732:39:15","statements":[{"nativeSrc":"7746:15:15","nodeType":"YulAssignment","src":"7746:15:15","value":{"name":"input","nativeSrc":"7756:5:15","nodeType":"YulIdentifier","src":"7756:5:15"},"variableNames":[{"name":"output","nativeSrc":"7746:6:15","nodeType":"YulIdentifier","src":"7746:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3670,"isOffset":false,"isSlot":false,"src":"7756:5:15","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"7746:6:15","valueSize":1}],"id":3676,"nodeType":"InlineAssembly","src":"7723:48:15"}]},"documentation":{"id":3667,"nodeType":"StructuredDocumentation","src":"7532:76:15","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3678,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:15","nodeType":"FunctionDefinition","parameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"input","nameLocation":"7659:5:15","nodeType":"VariableDeclaration","scope":3678,"src":"7642:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3668,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3669,"nodeType":"ArrayTypeName","src":"7642:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:15"},"returnParameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"output","nameLocation":"7705:6:15","nodeType":"VariableDeclaration","scope":3678,"src":"7688:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ArrayTypeName","src":"7688:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:15"},"scope":4330,"src":"7613:164:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3689,"nodeType":"Block","src":"7964:64:15","statements":[{"AST":{"nativeSrc":"7983:39:15","nodeType":"YulBlock","src":"7983:39:15","statements":[{"nativeSrc":"7997:15:15","nodeType":"YulAssignment","src":"7997:15:15","value":{"name":"input","nativeSrc":"8007:5:15","nodeType":"YulIdentifier","src":"8007:5:15"},"variableNames":[{"name":"output","nativeSrc":"7997:6:15","nodeType":"YulIdentifier","src":"7997:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3682,"isOffset":false,"isSlot":false,"src":"8007:5:15","valueSize":1},{"declaration":3686,"isOffset":false,"isSlot":false,"src":"7997:6:15","valueSize":1}],"id":3688,"nodeType":"InlineAssembly","src":"7974:48:15"}]},"documentation":{"id":3679,"nodeType":"StructuredDocumentation","src":"7783:76:15","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3690,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:15","nodeType":"FunctionDefinition","parameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"input","nameLocation":"7910:5:15","nodeType":"VariableDeclaration","scope":3690,"src":"7893:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3681,"nodeType":"ArrayTypeName","src":"7893:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:15"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"output","nameLocation":"7956:6:15","nodeType":"VariableDeclaration","scope":3690,"src":"7939:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3685,"nodeType":"ArrayTypeName","src":"7939:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:15"},"scope":4330,"src":"7864:164:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3715,"nodeType":"Block","src":"8290:64:15","statements":[{"AST":{"nativeSrc":"8309:39:15","nodeType":"YulBlock","src":"8309:39:15","statements":[{"nativeSrc":"8323:15:15","nodeType":"YulAssignment","src":"8323:15:15","value":{"name":"input","nativeSrc":"8333:5:15","nodeType":"YulIdentifier","src":"8333:5:15"},"variableNames":[{"name":"output","nativeSrc":"8323:6:15","nodeType":"YulIdentifier","src":"8323:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3701,"isOffset":false,"isSlot":false,"src":"8333:5:15","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"8323:6:15","valueSize":1}],"id":3714,"nodeType":"InlineAssembly","src":"8300:48:15"}]},"documentation":{"id":3691,"nodeType":"StructuredDocumentation","src":"8034:78:15","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3716,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:15","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"input","nameLocation":"8201:5:15","nodeType":"VariableDeclaration","scope":3716,"src":"8154:52:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3700,"nodeType":"FunctionTypeName","parameterTypes":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3700,"src":"8163:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3692,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3700,"src":"8172:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3694,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:15"},"returnParameterTypes":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3700,"src":"8195:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3697,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:15"},"src":"8154:52:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:15"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"output","nameLocation":"8282:6:15","nodeType":"VariableDeclaration","scope":3716,"src":"8235:53:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3711,"nodeType":"FunctionTypeName","parameterTypes":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"8244:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"8253:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:15"},"returnParameterTypes":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"8276:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3708,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:15"},"src":"8235:53:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:15"},"scope":4330,"src":"8117:237:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3741,"nodeType":"Block","src":"8616:64:15","statements":[{"AST":{"nativeSrc":"8635:39:15","nodeType":"YulBlock","src":"8635:39:15","statements":[{"nativeSrc":"8649:15:15","nodeType":"YulAssignment","src":"8649:15:15","value":{"name":"input","nativeSrc":"8659:5:15","nodeType":"YulIdentifier","src":"8659:5:15"},"variableNames":[{"name":"output","nativeSrc":"8649:6:15","nodeType":"YulIdentifier","src":"8649:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3727,"isOffset":false,"isSlot":false,"src":"8659:5:15","valueSize":1},{"declaration":3738,"isOffset":false,"isSlot":false,"src":"8649:6:15","valueSize":1}],"id":3740,"nodeType":"InlineAssembly","src":"8626:48:15"}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"8360:78:15","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3742,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:15","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"input","nameLocation":"8527:5:15","nodeType":"VariableDeclaration","scope":3742,"src":"8480:52:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3726,"nodeType":"FunctionTypeName","parameterTypes":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"8489:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"8498:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:15"},"returnParameterTypes":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"8521:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3723,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:15"},"src":"8480:52:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:15"},"returnParameters":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"output","nameLocation":"8608:6:15","nodeType":"VariableDeclaration","scope":3742,"src":"8561:53:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3737,"nodeType":"FunctionTypeName","parameterTypes":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3737,"src":"8570:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3737,"src":"8579:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:15"},"returnParameterTypes":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3737,"src":"8602:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3734,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:15"},"src":"8561:53:15","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:15"},"scope":4330,"src":"8443:237:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3824,"nodeType":"Block","src":"9405:834:15","statements":[{"assignments":[3754],"declarations":[{"constant":false,"id":3754,"mutability":"mutable","name":"low","nameLocation":"9423:3:15","nodeType":"VariableDeclaration","scope":3824,"src":"9415:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3756,"initialValue":{"hexValue":"30","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:15"},{"assignments":[3758],"declarations":[{"constant":false,"id":3758,"mutability":"mutable","name":"high","nameLocation":"9448:4:15","nodeType":"VariableDeclaration","scope":3824,"src":"9440:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3761,"initialValue":{"expression":{"id":3759,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"9455:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:15","memberName":"length","nodeType":"MemberAccess","src":"9455:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3762,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9482:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3768,"nodeType":"IfStatement","src":"9478:48:15","trueBody":{"id":3767,"nodeType":"Block","src":"9493:33:15","statements":[{"expression":{"hexValue":"30","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3752,"id":3766,"nodeType":"Return","src":"9507:8:15"}]}},{"body":{"id":3800,"nodeType":"Block","src":"9555:423:15","statements":[{"assignments":[3773],"declarations":[{"constant":false,"id":3773,"mutability":"mutable","name":"mid","nameLocation":"9577:3:15","nodeType":"VariableDeclaration","scope":3800,"src":"9569:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3779,"initialValue":{"arguments":[{"id":3776,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"9596:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3777,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9601:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3774,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"9583:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7757_$","typeString":"type(library Math)"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6486,"src":"9583:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3781,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"9844:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3782,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"9851:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3780,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4105,4131,4157,4183,4209],"referencedDeclaration":4157,"src":"9831:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4589_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4589_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"9831:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3785,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"9864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3798,"nodeType":"Block","src":"9922:46:15","statements":[{"expression":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3792,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"9940:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3793,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"9946:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3797,"nodeType":"ExpressionStatement","src":"9940:13:15"}]},"id":3799,"nodeType":"IfStatement","src":"9827:141:15","trueBody":{"id":3791,"nodeType":"Block","src":"9873:43:15","statements":[{"expression":{"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3787,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9891:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3788,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"9898:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3790,"nodeType":"ExpressionStatement","src":"9891:10:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3769,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"9543:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3770,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9549:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3801,"nodeType":"WhileStatement","src":"9536:442:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3802,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"10095:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3806,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"10119:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"10126:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3805,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4105,4131,4157,4183,4209],"referencedDeclaration":4157,"src":"10106:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4589_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4589_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"10106:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3812,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"10144:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3822,"nodeType":"Block","src":"10198:35:15","statements":[{"expression":{"id":3820,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"10219:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3752,"id":3821,"nodeType":"Return","src":"10212:10:15"}]},"id":3823,"nodeType":"IfStatement","src":"10091:142:15","trueBody":{"id":3819,"nodeType":"Block","src":"10153:39:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"10174:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3752,"id":3818,"nodeType":"Return","src":"10167:14:15"}]}}]},"documentation":{"id":3743,"nodeType":"StructuredDocumentation","src":"8686:616:15","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:15","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"array","nameLocation":"9349:5:15","nodeType":"VariableDeclaration","scope":3825,"src":"9331:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3745,"nodeType":"ArrayTypeName","src":"9331:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"element","nameLocation":"9364:7:15","nodeType":"VariableDeclaration","scope":3825,"src":"9356:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:15"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3825,"src":"9396:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:15"},"scope":4330,"src":"9307:932:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3888,"nodeType":"Block","src":"10756:709:15","statements":[{"assignments":[3837],"declarations":[{"constant":false,"id":3837,"mutability":"mutable","name":"low","nameLocation":"10774:3:15","nodeType":"VariableDeclaration","scope":3888,"src":"10766:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3839,"initialValue":{"hexValue":"30","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:15"},{"assignments":[3841],"declarations":[{"constant":false,"id":3841,"mutability":"mutable","name":"high","nameLocation":"10799:4:15","nodeType":"VariableDeclaration","scope":3888,"src":"10791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3844,"initialValue":{"expression":{"id":3842,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"10806:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:15","memberName":"length","nodeType":"MemberAccess","src":"10806:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3845,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"10833:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3851,"nodeType":"IfStatement","src":"10829:48:15","trueBody":{"id":3850,"nodeType":"Block","src":"10844:33:15","statements":[{"expression":{"hexValue":"30","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3835,"id":3849,"nodeType":"Return","src":"10858:8:15"}]}},{"body":{"id":3884,"nodeType":"Block","src":"10906:532:15","statements":[{"assignments":[3856],"declarations":[{"constant":false,"id":3856,"mutability":"mutable","name":"mid","nameLocation":"10928:3:15","nodeType":"VariableDeclaration","scope":3884,"src":"10920:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3862,"initialValue":{"arguments":[{"id":3859,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"10947:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3860,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"10952:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3857,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"10934:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7757_$","typeString":"type(library Math)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6486,"src":"10934:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3864,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"11195:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3865,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"11202:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3863,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4105,4131,4157,4183,4209],"referencedDeclaration":4157,"src":"11182:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4589_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4589_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"11182:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3868,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"11215:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3882,"nodeType":"Block","src":"11385:43:15","statements":[{"expression":{"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3878,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"11403:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3879,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"11410:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3881,"nodeType":"ExpressionStatement","src":"11403:10:15"}]},"id":3883,"nodeType":"IfStatement","src":"11178:250:15","trueBody":{"id":3877,"nodeType":"Block","src":"11224:155:15","statements":[{"id":3876,"nodeType":"UncheckedBlock","src":"11301:64:15","statements":[{"expression":{"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3870,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"11333:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"11339:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3875,"nodeType":"ExpressionStatement","src":"11333:13:15"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"10894:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3853,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"10900:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3885,"nodeType":"WhileStatement","src":"10887:551:15"},{"expression":{"id":3886,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"11455:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3835,"id":3887,"nodeType":"Return","src":"11448:10:15"}]},"documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"10245:412:15","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3889,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:15","nodeType":"FunctionDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"array","nameLocation":"10700:5:15","nodeType":"VariableDeclaration","scope":3889,"src":"10682:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3828,"nodeType":"ArrayTypeName","src":"10682:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"element","nameLocation":"10715:7:15","nodeType":"VariableDeclaration","scope":3889,"src":"10707:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:15"},"returnParameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3889,"src":"10747:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:15"},"scope":4330,"src":"10662:803:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3952,"nodeType":"Block","src":"11982:709:15","statements":[{"assignments":[3901],"declarations":[{"constant":false,"id":3901,"mutability":"mutable","name":"low","nameLocation":"12000:3:15","nodeType":"VariableDeclaration","scope":3952,"src":"11992:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3903,"initialValue":{"hexValue":"30","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:15"},{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"high","nameLocation":"12025:4:15","nodeType":"VariableDeclaration","scope":3952,"src":"12017:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3908,"initialValue":{"expression":{"id":3906,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"12032:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:15","memberName":"length","nodeType":"MemberAccess","src":"12032:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"12059:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3915,"nodeType":"IfStatement","src":"12055:48:15","trueBody":{"id":3914,"nodeType":"Block","src":"12070:33:15","statements":[{"expression":{"hexValue":"30","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3899,"id":3913,"nodeType":"Return","src":"12084:8:15"}]}},{"body":{"id":3948,"nodeType":"Block","src":"12132:532:15","statements":[{"assignments":[3920],"declarations":[{"constant":false,"id":3920,"mutability":"mutable","name":"mid","nameLocation":"12154:3:15","nodeType":"VariableDeclaration","scope":3948,"src":"12146:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3926,"initialValue":{"arguments":[{"id":3923,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12173:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3924,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"12178:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3921,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"12160:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7757_$","typeString":"type(library Math)"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6486,"src":"12160:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3928,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"12421:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3929,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"12428:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3927,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4105,4131,4157,4183,4209],"referencedDeclaration":4157,"src":"12408:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4589_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4589_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"12408:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3932,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"12441:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3946,"nodeType":"Block","src":"12499:155:15","statements":[{"id":3945,"nodeType":"UncheckedBlock","src":"12576:64:15","statements":[{"expression":{"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3939,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12608:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"12614:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3944,"nodeType":"ExpressionStatement","src":"12608:13:15"}]}]},"id":3947,"nodeType":"IfStatement","src":"12404:250:15","trueBody":{"id":3938,"nodeType":"Block","src":"12450:43:15","statements":[{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3934,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"12468:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3935,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"12475:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3937,"nodeType":"ExpressionStatement","src":"12468:10:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3916,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12120:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3917,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"12126:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3949,"nodeType":"WhileStatement","src":"12113:551:15"},{"expression":{"id":3950,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12681:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3899,"id":3951,"nodeType":"Return","src":"12674:10:15"}]},"documentation":{"id":3890,"nodeType":"StructuredDocumentation","src":"11471:412:15","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3953,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:15","nodeType":"FunctionDefinition","parameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"array","nameLocation":"11926:5:15","nodeType":"VariableDeclaration","scope":3953,"src":"11908:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3892,"nodeType":"ArrayTypeName","src":"11908:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"element","nameLocation":"11941:7:15","nodeType":"VariableDeclaration","scope":3953,"src":"11933:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:15"},"returnParameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3953,"src":"11973:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:15"},"scope":4330,"src":"11888:803:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4015,"nodeType":"Block","src":"12875:709:15","statements":[{"assignments":[3965],"declarations":[{"constant":false,"id":3965,"mutability":"mutable","name":"low","nameLocation":"12893:3:15","nodeType":"VariableDeclaration","scope":4015,"src":"12885:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3967,"initialValue":{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:15"},{"assignments":[3969],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"high","nameLocation":"12918:4:15","nodeType":"VariableDeclaration","scope":4015,"src":"12910:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3972,"initialValue":{"expression":{"id":3970,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"12925:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:15","memberName":"length","nodeType":"MemberAccess","src":"12925:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"12952:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3979,"nodeType":"IfStatement","src":"12948:48:15","trueBody":{"id":3978,"nodeType":"Block","src":"12963:33:15","statements":[{"expression":{"hexValue":"30","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3963,"id":3977,"nodeType":"Return","src":"12977:8:15"}]}},{"body":{"id":4011,"nodeType":"Block","src":"13025:532:15","statements":[{"assignments":[3984],"declarations":[{"constant":false,"id":3984,"mutability":"mutable","name":"mid","nameLocation":"13047:3:15","nodeType":"VariableDeclaration","scope":4011,"src":"13039:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3990,"initialValue":{"arguments":[{"id":3987,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"13066:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3988,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"13071:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3985,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"13053:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7757_$","typeString":"type(library Math)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6486,"src":"13053:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3992,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"13320:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3993,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"13327:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3991,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4222,4235,4248,4261,4274],"referencedDeclaration":4248,"src":"13301:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3995,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"13334:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4009,"nodeType":"Block","src":"13504:43:15","statements":[{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4005,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"13522:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4006,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"13529:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ExpressionStatement","src":"13522:10:15"}]},"id":4010,"nodeType":"IfStatement","src":"13297:250:15","trueBody":{"id":4004,"nodeType":"Block","src":"13343:155:15","statements":[{"id":4003,"nodeType":"UncheckedBlock","src":"13420:64:15","statements":[{"expression":{"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3997,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"13452:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3998,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"13458:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4002,"nodeType":"ExpressionStatement","src":"13452:13:15"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3980,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"13013:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3981,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"13019:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4012,"nodeType":"WhileStatement","src":"13006:551:15"},{"expression":{"id":4013,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"13574:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3963,"id":4014,"nodeType":"Return","src":"13567:10:15"}]},"documentation":{"id":3954,"nodeType":"StructuredDocumentation","src":"12697:74:15","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":4016,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:15","nodeType":"FunctionDefinition","parameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"array","nameLocation":"12819:5:15","nodeType":"VariableDeclaration","scope":4016,"src":"12802:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3956,"nodeType":"ArrayTypeName","src":"12802:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"element","nameLocation":"12834:7:15","nodeType":"VariableDeclaration","scope":4016,"src":"12826:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:15"},"returnParameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4016,"src":"12866:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:15"},"scope":4330,"src":"12776:808:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4078,"nodeType":"Block","src":"13768:709:15","statements":[{"assignments":[4028],"declarations":[{"constant":false,"id":4028,"mutability":"mutable","name":"low","nameLocation":"13786:3:15","nodeType":"VariableDeclaration","scope":4078,"src":"13778:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4027,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4030,"initialValue":{"hexValue":"30","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:15"},{"assignments":[4032],"declarations":[{"constant":false,"id":4032,"mutability":"mutable","name":"high","nameLocation":"13811:4:15","nodeType":"VariableDeclaration","scope":4078,"src":"13803:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4035,"initialValue":{"expression":{"id":4033,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"13818:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:15","memberName":"length","nodeType":"MemberAccess","src":"13818:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4036,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"13845:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4042,"nodeType":"IfStatement","src":"13841:48:15","trueBody":{"id":4041,"nodeType":"Block","src":"13856:33:15","statements":[{"expression":{"hexValue":"30","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4026,"id":4040,"nodeType":"Return","src":"13870:8:15"}]}},{"body":{"id":4074,"nodeType":"Block","src":"13918:532:15","statements":[{"assignments":[4047],"declarations":[{"constant":false,"id":4047,"mutability":"mutable","name":"mid","nameLocation":"13940:3:15","nodeType":"VariableDeclaration","scope":4074,"src":"13932:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4053,"initialValue":{"arguments":[{"id":4050,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"13959:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4051,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"13964:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4048,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"13946:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7757_$","typeString":"type(library Math)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6486,"src":"13946:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4055,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"14213:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4056,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"14220:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4054,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4222,4235,4248,4261,4274],"referencedDeclaration":4248,"src":"14194:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4058,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"14227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4072,"nodeType":"Block","src":"14285:155:15","statements":[{"id":4071,"nodeType":"UncheckedBlock","src":"14362:64:15","statements":[{"expression":{"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4065,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"14394:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4066,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"14400:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4070,"nodeType":"ExpressionStatement","src":"14394:13:15"}]}]},"id":4073,"nodeType":"IfStatement","src":"14190:250:15","trueBody":{"id":4064,"nodeType":"Block","src":"14236:43:15","statements":[{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"14254:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4061,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"14261:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4063,"nodeType":"ExpressionStatement","src":"14254:10:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4043,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"13906:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4044,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"13912:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4075,"nodeType":"WhileStatement","src":"13899:551:15"},{"expression":{"id":4076,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"14467:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4026,"id":4077,"nodeType":"Return","src":"14460:10:15"}]},"documentation":{"id":4017,"nodeType":"StructuredDocumentation","src":"13590:74:15","text":" @dev Same as {upperBound}, but with an array in memory."},"id":4079,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:15","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"array","nameLocation":"13712:5:15","nodeType":"VariableDeclaration","scope":4079,"src":"13695:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4019,"nodeType":"ArrayTypeName","src":"13695:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"element","nameLocation":"13727:7:15","nodeType":"VariableDeclaration","scope":4079,"src":"13719:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:15"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4079,"src":"13759:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4024,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:15"},"scope":4330,"src":"13669:808:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4104,"nodeType":"Block","src":"14793:167:15","statements":[{"assignments":[4092],"declarations":[{"constant":false,"id":4092,"mutability":"mutable","name":"slot","nameLocation":"14811:4:15","nodeType":"VariableDeclaration","scope":4104,"src":"14803:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4093,"nodeType":"VariableDeclarationStatement","src":"14803:12:15"},{"AST":{"nativeSrc":"14850:40:15","nodeType":"YulBlock","src":"14850:40:15","statements":[{"nativeSrc":"14864:16:15","nodeType":"YulAssignment","src":"14864:16:15","value":{"name":"arr.slot","nativeSrc":"14872:8:15","nodeType":"YulIdentifier","src":"14872:8:15"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:15","nodeType":"YulIdentifier","src":"14864:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4083,"isOffset":false,"isSlot":true,"src":"14872:8:15","suffix":"slot","valueSize":1},{"declaration":4092,"isOffset":false,"isSlot":false,"src":"14864:4:15","valueSize":1}],"flags":["memory-safe"],"id":4094,"nodeType":"InlineAssembly","src":"14825:65:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4099,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"14932:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4095,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"14906:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:15","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4489,"src":"14906:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:15","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4479,"src":"14906:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"14906:45:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4580_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4580_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":4090,"id":4103,"nodeType":"Return","src":"14899:54:15"}]},"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"14483:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:15","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"arr","nameLocation":"14719:3:15","nodeType":"VariableDeclaration","scope":4105,"src":"14701:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4081,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4082,"nodeType":"ArrayTypeName","src":"14701:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4085,"mutability":"mutable","name":"pos","nameLocation":"14732:3:15","nodeType":"VariableDeclaration","scope":4105,"src":"14724:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4084,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:15"},"returnParameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4105,"src":"14760:31:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4580_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4088,"nodeType":"UserDefinedTypeName","pathNode":{"id":4087,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:15","14772:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":4580,"src":"14760:23:15"},"referencedDeclaration":4580,"src":"14760:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4580_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:15"},"scope":4330,"src":"14679:281:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4130,"nodeType":"Block","src":"15276:167:15","statements":[{"assignments":[4118],"declarations":[{"constant":false,"id":4118,"mutability":"mutable","name":"slot","nameLocation":"15294:4:15","nodeType":"VariableDeclaration","scope":4130,"src":"15286:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4119,"nodeType":"VariableDeclarationStatement","src":"15286:12:15"},{"AST":{"nativeSrc":"15333:40:15","nodeType":"YulBlock","src":"15333:40:15","statements":[{"nativeSrc":"15347:16:15","nodeType":"YulAssignment","src":"15347:16:15","value":{"name":"arr.slot","nativeSrc":"15355:8:15","nodeType":"YulIdentifier","src":"15355:8:15"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:15","nodeType":"YulIdentifier","src":"15347:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4109,"isOffset":false,"isSlot":true,"src":"15355:8:15","suffix":"slot","valueSize":1},{"declaration":4118,"isOffset":false,"isSlot":false,"src":"15347:4:15","valueSize":1}],"flags":["memory-safe"],"id":4120,"nodeType":"InlineAssembly","src":"15308:65:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4125,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"15415:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4121,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"15389:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:15","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4489,"src":"15389:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:15","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4479,"src":"15389:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:15","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4631,"src":"15389:45:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4586_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4586_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":4116,"id":4129,"nodeType":"Return","src":"15382:54:15"}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"14966:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4131,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:15","nodeType":"FunctionDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"arr","nameLocation":"15202:3:15","nodeType":"VariableDeclaration","scope":4131,"src":"15184:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4108,"nodeType":"ArrayTypeName","src":"15184:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4111,"mutability":"mutable","name":"pos","nameLocation":"15215:3:15","nodeType":"VariableDeclaration","scope":4131,"src":"15207:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:15"},"returnParameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4131,"src":"15243:31:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4586_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4114,"nodeType":"UserDefinedTypeName","pathNode":{"id":4113,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:15","15255:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":4586,"src":"15243:23:15"},"referencedDeclaration":4586,"src":"15243:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4586_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:15"},"scope":4330,"src":"15162:281:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4156,"nodeType":"Block","src":"15759:167:15","statements":[{"assignments":[4144],"declarations":[{"constant":false,"id":4144,"mutability":"mutable","name":"slot","nameLocation":"15777:4:15","nodeType":"VariableDeclaration","scope":4156,"src":"15769:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4145,"nodeType":"VariableDeclarationStatement","src":"15769:12:15"},{"AST":{"nativeSrc":"15816:40:15","nodeType":"YulBlock","src":"15816:40:15","statements":[{"nativeSrc":"15830:16:15","nodeType":"YulAssignment","src":"15830:16:15","value":{"name":"arr.slot","nativeSrc":"15838:8:15","nodeType":"YulIdentifier","src":"15838:8:15"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:15","nodeType":"YulIdentifier","src":"15830:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4135,"isOffset":false,"isSlot":true,"src":"15838:8:15","suffix":"slot","valueSize":1},{"declaration":4144,"isOffset":false,"isSlot":false,"src":"15830:4:15","valueSize":1}],"flags":["memory-safe"],"id":4146,"nodeType":"InlineAssembly","src":"15791:65:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4151,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"15898:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4147,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"15872:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:15","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4489,"src":"15872:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:15","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4479,"src":"15872:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:15","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4642,"src":"15872:45:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4589_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4589_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":4142,"id":4155,"nodeType":"Return","src":"15865:54:15"}]},"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"15449:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:15","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"arr","nameLocation":"15685:3:15","nodeType":"VariableDeclaration","scope":4157,"src":"15667:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4134,"nodeType":"ArrayTypeName","src":"15667:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"pos","nameLocation":"15698:3:15","nodeType":"VariableDeclaration","scope":4157,"src":"15690:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:15"},"returnParameters":{"id":4142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"15726:31:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4589_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4140,"nodeType":"UserDefinedTypeName","pathNode":{"id":4139,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:15","15738:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":4589,"src":"15726:23:15"},"referencedDeclaration":4589,"src":"15726:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4589_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:15"},"scope":4330,"src":"15645:281:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4182,"nodeType":"Block","src":"16238:165:15","statements":[{"assignments":[4170],"declarations":[{"constant":false,"id":4170,"mutability":"mutable","name":"slot","nameLocation":"16256:4:15","nodeType":"VariableDeclaration","scope":4182,"src":"16248:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16248:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4171,"nodeType":"VariableDeclarationStatement","src":"16248:12:15"},{"AST":{"nativeSrc":"16295:40:15","nodeType":"YulBlock","src":"16295:40:15","statements":[{"nativeSrc":"16309:16:15","nodeType":"YulAssignment","src":"16309:16:15","value":{"name":"arr.slot","nativeSrc":"16317:8:15","nodeType":"YulIdentifier","src":"16317:8:15"},"variableNames":[{"name":"slot","nativeSrc":"16309:4:15","nodeType":"YulIdentifier","src":"16309:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4161,"isOffset":false,"isSlot":true,"src":"16317:8:15","suffix":"slot","valueSize":1},{"declaration":4170,"isOffset":false,"isSlot":false,"src":"16309:4:15","valueSize":1}],"flags":["memory-safe"],"id":4172,"nodeType":"InlineAssembly","src":"16270:65:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4177,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"16377:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4173,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"16351:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16356:11:15","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4489,"src":"16351:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16370:6:15","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4479,"src":"16351:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16382:12:15","memberName":"getBytesSlot","nodeType":"MemberAccess","referencedDeclaration":4686,"src":"16351:43:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BytesSlot_$4598_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BytesSlot storage pointer)"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4598_storage_ptr","typeString":"struct StorageSlot.BytesSlot storage pointer"}},"functionReturnParameters":4168,"id":4181,"nodeType":"Return","src":"16344:52:15"}]},"documentation":{"id":4158,"nodeType":"StructuredDocumentation","src":"15932:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4183,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16137:12:15","nodeType":"FunctionDefinition","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"arr","nameLocation":"16166:3:15","nodeType":"VariableDeclaration","scope":4183,"src":"16150:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4159,"name":"bytes","nodeType":"ElementaryTypeName","src":"16150:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4160,"nodeType":"ArrayTypeName","src":"16150:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"pos","nameLocation":"16179:3:15","nodeType":"VariableDeclaration","scope":4183,"src":"16171:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"16171:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16149:34:15"},"returnParameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4183,"src":"16207:29:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4598_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4166,"nodeType":"UserDefinedTypeName","pathNode":{"id":4165,"name":"StorageSlot.BytesSlot","nameLocations":["16207:11:15","16219:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"16207:21:15"},"referencedDeclaration":4598,"src":"16207:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4598_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"16206:31:15"},"scope":4330,"src":"16128:275:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4208,"nodeType":"Block","src":"16717:166:15","statements":[{"assignments":[4196],"declarations":[{"constant":false,"id":4196,"mutability":"mutable","name":"slot","nameLocation":"16735:4:15","nodeType":"VariableDeclaration","scope":4208,"src":"16727:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16727:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4197,"nodeType":"VariableDeclarationStatement","src":"16727:12:15"},{"AST":{"nativeSrc":"16774:40:15","nodeType":"YulBlock","src":"16774:40:15","statements":[{"nativeSrc":"16788:16:15","nodeType":"YulAssignment","src":"16788:16:15","value":{"name":"arr.slot","nativeSrc":"16796:8:15","nodeType":"YulIdentifier","src":"16796:8:15"},"variableNames":[{"name":"slot","nativeSrc":"16788:4:15","nodeType":"YulIdentifier","src":"16788:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4187,"isOffset":false,"isSlot":true,"src":"16796:8:15","suffix":"slot","valueSize":1},{"declaration":4196,"isOffset":false,"isSlot":false,"src":"16788:4:15","valueSize":1}],"flags":["memory-safe"],"id":4198,"nodeType":"InlineAssembly","src":"16749:65:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4203,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"16856:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4199,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"16830:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16835:11:15","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4489,"src":"16830:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16849:6:15","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4479,"src":"16830:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16861:13:15","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":4664,"src":"16830:44:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_StringSlot_$4595_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4595_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"functionReturnParameters":4194,"id":4207,"nodeType":"Return","src":"16823:53:15"}]},"documentation":{"id":4184,"nodeType":"StructuredDocumentation","src":"16409:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4209,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16614:12:15","nodeType":"FunctionDefinition","parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"arr","nameLocation":"16644:3:15","nodeType":"VariableDeclaration","scope":4209,"src":"16627:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4185,"name":"string","nodeType":"ElementaryTypeName","src":"16627:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4186,"nodeType":"ArrayTypeName","src":"16627:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"pos","nameLocation":"16657:3:15","nodeType":"VariableDeclaration","scope":4209,"src":"16649:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"16649:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16626:35:15"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4209,"src":"16685:30:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4595_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4192,"nodeType":"UserDefinedTypeName","pathNode":{"id":4191,"name":"StorageSlot.StringSlot","nameLocations":["16685:11:15","16697:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":4595,"src":"16685:22:15"},"referencedDeclaration":4595,"src":"16685:22:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4595_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"16684:32:15"},"scope":4330,"src":"16605:278:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4221,"nodeType":"Block","src":"17184:98:15","statements":[{"AST":{"nativeSrc":"17203:73:15","nodeType":"YulBlock","src":"17203:73:15","statements":[{"nativeSrc":"17217:49:15","nodeType":"YulAssignment","src":"17217:49:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17238:3:15","nodeType":"YulIdentifier","src":"17238:3:15"},{"kind":"number","nativeSrc":"17243:4:15","nodeType":"YulLiteral","src":"17243:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17234:3:15","nodeType":"YulIdentifier","src":"17234:3:15"},"nativeSrc":"17234:14:15","nodeType":"YulFunctionCall","src":"17234:14:15"},{"arguments":[{"name":"pos","nativeSrc":"17254:3:15","nodeType":"YulIdentifier","src":"17254:3:15"},{"kind":"number","nativeSrc":"17259:4:15","nodeType":"YulLiteral","src":"17259:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17250:3:15","nodeType":"YulIdentifier","src":"17250:3:15"},"nativeSrc":"17250:14:15","nodeType":"YulFunctionCall","src":"17250:14:15"}],"functionName":{"name":"add","nativeSrc":"17230:3:15","nodeType":"YulIdentifier","src":"17230:3:15"},"nativeSrc":"17230:35:15","nodeType":"YulFunctionCall","src":"17230:35:15"}],"functionName":{"name":"mload","nativeSrc":"17224:5:15","nodeType":"YulIdentifier","src":"17224:5:15"},"nativeSrc":"17224:42:15","nodeType":"YulFunctionCall","src":"17224:42:15"},"variableNames":[{"name":"res","nativeSrc":"17217:3:15","nodeType":"YulIdentifier","src":"17217:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4213,"isOffset":false,"isSlot":false,"src":"17238:3:15","valueSize":1},{"declaration":4215,"isOffset":false,"isSlot":false,"src":"17254:3:15","valueSize":1},{"declaration":4218,"isOffset":false,"isSlot":false,"src":"17217:3:15","valueSize":1}],"id":4220,"nodeType":"InlineAssembly","src":"17194:82:15"}]},"documentation":{"id":4210,"nodeType":"StructuredDocumentation","src":"16889:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17094:18:15","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"arr","nameLocation":"17130:3:15","nodeType":"VariableDeclaration","scope":4222,"src":"17113:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4211,"name":"address","nodeType":"ElementaryTypeName","src":"17113:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4212,"nodeType":"ArrayTypeName","src":"17113:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"pos","nameLocation":"17143:3:15","nodeType":"VariableDeclaration","scope":4222,"src":"17135:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"17135:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17112:35:15"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"res","nameLocation":"17179:3:15","nodeType":"VariableDeclaration","scope":4222,"src":"17171:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4217,"name":"address","nodeType":"ElementaryTypeName","src":"17171:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17170:13:15"},"scope":4330,"src":"17085:197:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4234,"nodeType":"Block","src":"17583:98:15","statements":[{"AST":{"nativeSrc":"17602:73:15","nodeType":"YulBlock","src":"17602:73:15","statements":[{"nativeSrc":"17616:49:15","nodeType":"YulAssignment","src":"17616:49:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17637:3:15","nodeType":"YulIdentifier","src":"17637:3:15"},{"kind":"number","nativeSrc":"17642:4:15","nodeType":"YulLiteral","src":"17642:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17633:3:15","nodeType":"YulIdentifier","src":"17633:3:15"},"nativeSrc":"17633:14:15","nodeType":"YulFunctionCall","src":"17633:14:15"},{"arguments":[{"name":"pos","nativeSrc":"17653:3:15","nodeType":"YulIdentifier","src":"17653:3:15"},{"kind":"number","nativeSrc":"17658:4:15","nodeType":"YulLiteral","src":"17658:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17649:3:15","nodeType":"YulIdentifier","src":"17649:3:15"},"nativeSrc":"17649:14:15","nodeType":"YulFunctionCall","src":"17649:14:15"}],"functionName":{"name":"add","nativeSrc":"17629:3:15","nodeType":"YulIdentifier","src":"17629:3:15"},"nativeSrc":"17629:35:15","nodeType":"YulFunctionCall","src":"17629:35:15"}],"functionName":{"name":"mload","nativeSrc":"17623:5:15","nodeType":"YulIdentifier","src":"17623:5:15"},"nativeSrc":"17623:42:15","nodeType":"YulFunctionCall","src":"17623:42:15"},"variableNames":[{"name":"res","nativeSrc":"17616:3:15","nodeType":"YulIdentifier","src":"17616:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4226,"isOffset":false,"isSlot":false,"src":"17637:3:15","valueSize":1},{"declaration":4228,"isOffset":false,"isSlot":false,"src":"17653:3:15","valueSize":1},{"declaration":4231,"isOffset":false,"isSlot":false,"src":"17616:3:15","valueSize":1}],"id":4233,"nodeType":"InlineAssembly","src":"17593:82:15"}]},"documentation":{"id":4223,"nodeType":"StructuredDocumentation","src":"17288:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4235,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17493:18:15","nodeType":"FunctionDefinition","parameters":{"id":4229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"arr","nameLocation":"17529:3:15","nodeType":"VariableDeclaration","scope":4235,"src":"17512:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17512:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4225,"nodeType":"ArrayTypeName","src":"17512:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4228,"mutability":"mutable","name":"pos","nameLocation":"17542:3:15","nodeType":"VariableDeclaration","scope":4235,"src":"17534:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4227,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17511:35:15"},"returnParameters":{"id":4232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4231,"mutability":"mutable","name":"res","nameLocation":"17578:3:15","nodeType":"VariableDeclaration","scope":4235,"src":"17570:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17570:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17569:13:15"},"scope":4330,"src":"17484:197:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4247,"nodeType":"Block","src":"17982:98:15","statements":[{"AST":{"nativeSrc":"18001:73:15","nodeType":"YulBlock","src":"18001:73:15","statements":[{"nativeSrc":"18015:49:15","nodeType":"YulAssignment","src":"18015:49:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18036:3:15","nodeType":"YulIdentifier","src":"18036:3:15"},{"kind":"number","nativeSrc":"18041:4:15","nodeType":"YulLiteral","src":"18041:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18032:3:15","nodeType":"YulIdentifier","src":"18032:3:15"},"nativeSrc":"18032:14:15","nodeType":"YulFunctionCall","src":"18032:14:15"},{"arguments":[{"name":"pos","nativeSrc":"18052:3:15","nodeType":"YulIdentifier","src":"18052:3:15"},{"kind":"number","nativeSrc":"18057:4:15","nodeType":"YulLiteral","src":"18057:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18048:3:15","nodeType":"YulIdentifier","src":"18048:3:15"},"nativeSrc":"18048:14:15","nodeType":"YulFunctionCall","src":"18048:14:15"}],"functionName":{"name":"add","nativeSrc":"18028:3:15","nodeType":"YulIdentifier","src":"18028:3:15"},"nativeSrc":"18028:35:15","nodeType":"YulFunctionCall","src":"18028:35:15"}],"functionName":{"name":"mload","nativeSrc":"18022:5:15","nodeType":"YulIdentifier","src":"18022:5:15"},"nativeSrc":"18022:42:15","nodeType":"YulFunctionCall","src":"18022:42:15"},"variableNames":[{"name":"res","nativeSrc":"18015:3:15","nodeType":"YulIdentifier","src":"18015:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4239,"isOffset":false,"isSlot":false,"src":"18036:3:15","valueSize":1},{"declaration":4241,"isOffset":false,"isSlot":false,"src":"18052:3:15","valueSize":1},{"declaration":4244,"isOffset":false,"isSlot":false,"src":"18015:3:15","valueSize":1}],"id":4246,"nodeType":"InlineAssembly","src":"17992:82:15"}]},"documentation":{"id":4236,"nodeType":"StructuredDocumentation","src":"17687:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4248,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17892:18:15","nodeType":"FunctionDefinition","parameters":{"id":4242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4239,"mutability":"mutable","name":"arr","nameLocation":"17928:3:15","nodeType":"VariableDeclaration","scope":4248,"src":"17911:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"17911:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4238,"nodeType":"ArrayTypeName","src":"17911:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4241,"mutability":"mutable","name":"pos","nameLocation":"17941:3:15","nodeType":"VariableDeclaration","scope":4248,"src":"17933:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4240,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17910:35:15"},"returnParameters":{"id":4245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4244,"mutability":"mutable","name":"res","nameLocation":"17977:3:15","nodeType":"VariableDeclaration","scope":4248,"src":"17969:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"17969:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17968:13:15"},"scope":4330,"src":"17883:197:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"18384:98:15","statements":[{"AST":{"nativeSrc":"18403:73:15","nodeType":"YulBlock","src":"18403:73:15","statements":[{"nativeSrc":"18417:49:15","nodeType":"YulAssignment","src":"18417:49:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18438:3:15","nodeType":"YulIdentifier","src":"18438:3:15"},{"kind":"number","nativeSrc":"18443:4:15","nodeType":"YulLiteral","src":"18443:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18434:3:15","nodeType":"YulIdentifier","src":"18434:3:15"},"nativeSrc":"18434:14:15","nodeType":"YulFunctionCall","src":"18434:14:15"},{"arguments":[{"name":"pos","nativeSrc":"18454:3:15","nodeType":"YulIdentifier","src":"18454:3:15"},{"kind":"number","nativeSrc":"18459:4:15","nodeType":"YulLiteral","src":"18459:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18450:3:15","nodeType":"YulIdentifier","src":"18450:3:15"},"nativeSrc":"18450:14:15","nodeType":"YulFunctionCall","src":"18450:14:15"}],"functionName":{"name":"add","nativeSrc":"18430:3:15","nodeType":"YulIdentifier","src":"18430:3:15"},"nativeSrc":"18430:35:15","nodeType":"YulFunctionCall","src":"18430:35:15"}],"functionName":{"name":"mload","nativeSrc":"18424:5:15","nodeType":"YulIdentifier","src":"18424:5:15"},"nativeSrc":"18424:42:15","nodeType":"YulFunctionCall","src":"18424:42:15"},"variableNames":[{"name":"res","nativeSrc":"18417:3:15","nodeType":"YulIdentifier","src":"18417:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4252,"isOffset":false,"isSlot":false,"src":"18438:3:15","valueSize":1},{"declaration":4254,"isOffset":false,"isSlot":false,"src":"18454:3:15","valueSize":1},{"declaration":4257,"isOffset":false,"isSlot":false,"src":"18417:3:15","valueSize":1}],"id":4259,"nodeType":"InlineAssembly","src":"18394:82:15"}]},"documentation":{"id":4249,"nodeType":"StructuredDocumentation","src":"18086:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18291:18:15","nodeType":"FunctionDefinition","parameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"arr","nameLocation":"18325:3:15","nodeType":"VariableDeclaration","scope":4261,"src":"18310:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4250,"name":"bytes","nodeType":"ElementaryTypeName","src":"18310:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4251,"nodeType":"ArrayTypeName","src":"18310:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"pos","nameLocation":"18338:3:15","nodeType":"VariableDeclaration","scope":4261,"src":"18330:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"18330:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18309:33:15"},"returnParameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"res","nameLocation":"18379:3:15","nodeType":"VariableDeclaration","scope":4261,"src":"18366:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4256,"name":"bytes","nodeType":"ElementaryTypeName","src":"18366:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18365:18:15"},"scope":4330,"src":"18282:200:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4273,"nodeType":"Block","src":"18788:98:15","statements":[{"AST":{"nativeSrc":"18807:73:15","nodeType":"YulBlock","src":"18807:73:15","statements":[{"nativeSrc":"18821:49:15","nodeType":"YulAssignment","src":"18821:49:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18842:3:15","nodeType":"YulIdentifier","src":"18842:3:15"},{"kind":"number","nativeSrc":"18847:4:15","nodeType":"YulLiteral","src":"18847:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18838:3:15","nodeType":"YulIdentifier","src":"18838:3:15"},"nativeSrc":"18838:14:15","nodeType":"YulFunctionCall","src":"18838:14:15"},{"arguments":[{"name":"pos","nativeSrc":"18858:3:15","nodeType":"YulIdentifier","src":"18858:3:15"},{"kind":"number","nativeSrc":"18863:4:15","nodeType":"YulLiteral","src":"18863:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18854:3:15","nodeType":"YulIdentifier","src":"18854:3:15"},"nativeSrc":"18854:14:15","nodeType":"YulFunctionCall","src":"18854:14:15"}],"functionName":{"name":"add","nativeSrc":"18834:3:15","nodeType":"YulIdentifier","src":"18834:3:15"},"nativeSrc":"18834:35:15","nodeType":"YulFunctionCall","src":"18834:35:15"}],"functionName":{"name":"mload","nativeSrc":"18828:5:15","nodeType":"YulIdentifier","src":"18828:5:15"},"nativeSrc":"18828:42:15","nodeType":"YulFunctionCall","src":"18828:42:15"},"variableNames":[{"name":"res","nativeSrc":"18821:3:15","nodeType":"YulIdentifier","src":"18821:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4265,"isOffset":false,"isSlot":false,"src":"18842:3:15","valueSize":1},{"declaration":4267,"isOffset":false,"isSlot":false,"src":"18858:3:15","valueSize":1},{"declaration":4270,"isOffset":false,"isSlot":false,"src":"18821:3:15","valueSize":1}],"id":4272,"nodeType":"InlineAssembly","src":"18798:82:15"}]},"documentation":{"id":4262,"nodeType":"StructuredDocumentation","src":"18488:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4274,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18693:18:15","nodeType":"FunctionDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4265,"mutability":"mutable","name":"arr","nameLocation":"18728:3:15","nodeType":"VariableDeclaration","scope":4274,"src":"18712:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4263,"name":"string","nodeType":"ElementaryTypeName","src":"18712:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4264,"nodeType":"ArrayTypeName","src":"18712:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4267,"mutability":"mutable","name":"pos","nameLocation":"18741:3:15","nodeType":"VariableDeclaration","scope":4274,"src":"18733:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"18733:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18711:34:15"},"returnParameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"res","nameLocation":"18783:3:15","nodeType":"VariableDeclaration","scope":4274,"src":"18769:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4269,"name":"string","nodeType":"ElementaryTypeName","src":"18769:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18768:19:15"},"scope":4330,"src":"18684:202:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4284,"nodeType":"Block","src":"19202:88:15","statements":[{"AST":{"nativeSrc":"19237:47:15","nodeType":"YulBlock","src":"19237:47:15","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19258:10:15","nodeType":"YulIdentifier","src":"19258:10:15"},{"name":"len","nativeSrc":"19270:3:15","nodeType":"YulIdentifier","src":"19270:3:15"}],"functionName":{"name":"sstore","nativeSrc":"19251:6:15","nodeType":"YulIdentifier","src":"19251:6:15"},"nativeSrc":"19251:23:15","nodeType":"YulFunctionCall","src":"19251:23:15"},"nativeSrc":"19251:23:15","nodeType":"YulExpressionStatement","src":"19251:23:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":4278,"isOffset":false,"isSlot":true,"src":"19258:10:15","suffix":"slot","valueSize":1},{"declaration":4280,"isOffset":false,"isSlot":false,"src":"19270:3:15","valueSize":1}],"flags":["memory-safe"],"id":4283,"nodeType":"InlineAssembly","src":"19212:72:15"}]},"documentation":{"id":4275,"nodeType":"StructuredDocumentation","src":"18892:233:15","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4285,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19139:15:15","nodeType":"FunctionDefinition","parameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"array","nameLocation":"19173:5:15","nodeType":"VariableDeclaration","scope":4285,"src":"19155:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4276,"name":"address","nodeType":"ElementaryTypeName","src":"19155:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4277,"nodeType":"ArrayTypeName","src":"19155:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4280,"mutability":"mutable","name":"len","nameLocation":"19188:3:15","nodeType":"VariableDeclaration","scope":4285,"src":"19180:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"19180:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19154:38:15"},"returnParameters":{"id":4282,"nodeType":"ParameterList","parameters":[],"src":"19202:0:15"},"scope":4330,"src":"19130:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4295,"nodeType":"Block","src":"19606:88:15","statements":[{"AST":{"nativeSrc":"19641:47:15","nodeType":"YulBlock","src":"19641:47:15","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19662:10:15","nodeType":"YulIdentifier","src":"19662:10:15"},{"name":"len","nativeSrc":"19674:3:15","nodeType":"YulIdentifier","src":"19674:3:15"}],"functionName":{"name":"sstore","nativeSrc":"19655:6:15","nodeType":"YulIdentifier","src":"19655:6:15"},"nativeSrc":"19655:23:15","nodeType":"YulFunctionCall","src":"19655:23:15"},"nativeSrc":"19655:23:15","nodeType":"YulExpressionStatement","src":"19655:23:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":4289,"isOffset":false,"isSlot":true,"src":"19662:10:15","suffix":"slot","valueSize":1},{"declaration":4291,"isOffset":false,"isSlot":false,"src":"19674:3:15","valueSize":1}],"flags":["memory-safe"],"id":4294,"nodeType":"InlineAssembly","src":"19616:72:15"}]},"documentation":{"id":4286,"nodeType":"StructuredDocumentation","src":"19296:233:15","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4296,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19543:15:15","nodeType":"FunctionDefinition","parameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"array","nameLocation":"19577:5:15","nodeType":"VariableDeclaration","scope":4296,"src":"19559:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19559:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4288,"nodeType":"ArrayTypeName","src":"19559:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4291,"mutability":"mutable","name":"len","nameLocation":"19592:3:15","nodeType":"VariableDeclaration","scope":4296,"src":"19584:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint256","nodeType":"ElementaryTypeName","src":"19584:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19558:38:15"},"returnParameters":{"id":4293,"nodeType":"ParameterList","parameters":[],"src":"19606:0:15"},"scope":4330,"src":"19534:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4306,"nodeType":"Block","src":"20010:88:15","statements":[{"AST":{"nativeSrc":"20045:47:15","nodeType":"YulBlock","src":"20045:47:15","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20066:10:15","nodeType":"YulIdentifier","src":"20066:10:15"},{"name":"len","nativeSrc":"20078:3:15","nodeType":"YulIdentifier","src":"20078:3:15"}],"functionName":{"name":"sstore","nativeSrc":"20059:6:15","nodeType":"YulIdentifier","src":"20059:6:15"},"nativeSrc":"20059:23:15","nodeType":"YulFunctionCall","src":"20059:23:15"},"nativeSrc":"20059:23:15","nodeType":"YulExpressionStatement","src":"20059:23:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":4300,"isOffset":false,"isSlot":true,"src":"20066:10:15","suffix":"slot","valueSize":1},{"declaration":4302,"isOffset":false,"isSlot":false,"src":"20078:3:15","valueSize":1}],"flags":["memory-safe"],"id":4305,"nodeType":"InlineAssembly","src":"20020:72:15"}]},"documentation":{"id":4297,"nodeType":"StructuredDocumentation","src":"19700:233:15","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4307,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19947:15:15","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"array","nameLocation":"19981:5:15","nodeType":"VariableDeclaration","scope":4307,"src":"19963:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"19963:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4299,"nodeType":"ArrayTypeName","src":"19963:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"len","nameLocation":"19996:3:15","nodeType":"VariableDeclaration","scope":4307,"src":"19988:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"19988:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19962:38:15"},"returnParameters":{"id":4304,"nodeType":"ParameterList","parameters":[],"src":"20010:0:15"},"scope":4330,"src":"19938:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4317,"nodeType":"Block","src":"20412:88:15","statements":[{"AST":{"nativeSrc":"20447:47:15","nodeType":"YulBlock","src":"20447:47:15","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20468:10:15","nodeType":"YulIdentifier","src":"20468:10:15"},{"name":"len","nativeSrc":"20480:3:15","nodeType":"YulIdentifier","src":"20480:3:15"}],"functionName":{"name":"sstore","nativeSrc":"20461:6:15","nodeType":"YulIdentifier","src":"20461:6:15"},"nativeSrc":"20461:23:15","nodeType":"YulFunctionCall","src":"20461:23:15"},"nativeSrc":"20461:23:15","nodeType":"YulExpressionStatement","src":"20461:23:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":4311,"isOffset":false,"isSlot":true,"src":"20468:10:15","suffix":"slot","valueSize":1},{"declaration":4313,"isOffset":false,"isSlot":false,"src":"20480:3:15","valueSize":1}],"flags":["memory-safe"],"id":4316,"nodeType":"InlineAssembly","src":"20422:72:15"}]},"documentation":{"id":4308,"nodeType":"StructuredDocumentation","src":"20104:233:15","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20351:15:15","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"array","nameLocation":"20383:5:15","nodeType":"VariableDeclaration","scope":4318,"src":"20367:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4309,"name":"bytes","nodeType":"ElementaryTypeName","src":"20367:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4310,"nodeType":"ArrayTypeName","src":"20367:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4313,"mutability":"mutable","name":"len","nameLocation":"20398:3:15","nodeType":"VariableDeclaration","scope":4318,"src":"20390:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20366:36:15"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[],"src":"20412:0:15"},"scope":4330,"src":"20342:158:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4328,"nodeType":"Block","src":"20815:88:15","statements":[{"AST":{"nativeSrc":"20850:47:15","nodeType":"YulBlock","src":"20850:47:15","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20871:10:15","nodeType":"YulIdentifier","src":"20871:10:15"},{"name":"len","nativeSrc":"20883:3:15","nodeType":"YulIdentifier","src":"20883:3:15"}],"functionName":{"name":"sstore","nativeSrc":"20864:6:15","nodeType":"YulIdentifier","src":"20864:6:15"},"nativeSrc":"20864:23:15","nodeType":"YulFunctionCall","src":"20864:23:15"},"nativeSrc":"20864:23:15","nodeType":"YulExpressionStatement","src":"20864:23:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":4322,"isOffset":false,"isSlot":true,"src":"20871:10:15","suffix":"slot","valueSize":1},{"declaration":4324,"isOffset":false,"isSlot":false,"src":"20883:3:15","valueSize":1}],"flags":["memory-safe"],"id":4327,"nodeType":"InlineAssembly","src":"20825:72:15"}]},"documentation":{"id":4319,"nodeType":"StructuredDocumentation","src":"20506:233:15","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4329,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20753:15:15","nodeType":"FunctionDefinition","parameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"mutability":"mutable","name":"array","nameLocation":"20786:5:15","nodeType":"VariableDeclaration","scope":4329,"src":"20769:22:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4320,"name":"string","nodeType":"ElementaryTypeName","src":"20769:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4321,"nodeType":"ArrayTypeName","src":"20769:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4324,"mutability":"mutable","name":"len","nameLocation":"20801:3:15","nodeType":"VariableDeclaration","scope":4329,"src":"20793:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"20793:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20768:37:15"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[],"src":"20815:0:15"},"scope":4330,"src":"20744:159:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4331,"src":"459:20446:15","usedErrors":[],"usedEvents":[]}],"src":"183:20723:15"},"id":15},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[4362]},"id":4363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4332,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":4333,"nodeType":"StructuredDocumentation","src":"131:92:16","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":4362,"linearizedBaseContracts":[4362],"name":"Comparators","nameLocation":"232:11:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":4346,"nodeType":"Block","src":"313:29:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"330:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4343,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"334:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4341,"id":4345,"nodeType":"Return","src":"323:12:16"}]},"id":4347,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:16","nodeType":"FunctionDefinition","parameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"a","nameLocation":"270:1:16","nodeType":"VariableDeclaration","scope":4347,"src":"262:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4334,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4337,"mutability":"mutable","name":"b","nameLocation":"281:1:16","nodeType":"VariableDeclaration","scope":4347,"src":"273:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4336,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:16"},"returnParameters":{"id":4341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4347,"src":"307:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4339,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:16"},"scope":4362,"src":"250:92:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4360,"nodeType":"Block","src":"411:29:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4356,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"428:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4357,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"432:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4355,"id":4359,"nodeType":"Return","src":"421:12:16"}]},"id":4361,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:16","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4349,"mutability":"mutable","name":"a","nameLocation":"368:1:16","nodeType":"VariableDeclaration","scope":4361,"src":"360:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4348,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4351,"mutability":"mutable","name":"b","nameLocation":"379:1:16","nodeType":"VariableDeclaration","scope":4361,"src":"371:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:16"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4361,"src":"405:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4353,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:16"},"scope":4362,"src":"348:92:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4363,"src":"224:218:16","usedErrors":[],"usedEvents":[]}],"src":"105:338:16"},"id":16},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[4392]},"id":4393,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4364,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":4365,"nodeType":"StructuredDocumentation","src":"127:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":4392,"linearizedBaseContracts":[4392],"name":"Context","nameLocation":"642:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":4373,"nodeType":"Block","src":"718:34:17","statements":[{"expression":{"expression":{"id":4370,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:17","memberName":"sender","nodeType":"MemberAccess","src":"735:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4369,"id":4372,"nodeType":"Return","src":"728:17:17"}]},"id":4374,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:17","nodeType":"FunctionDefinition","parameters":{"id":4366,"nodeType":"ParameterList","parameters":[],"src":"675:2:17"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4374,"src":"709:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4367,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:17"},"scope":4392,"src":"656:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4382,"nodeType":"Block","src":"825:32:17","statements":[{"expression":{"expression":{"id":4379,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:17","memberName":"data","nodeType":"MemberAccess","src":"842:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4378,"id":4381,"nodeType":"Return","src":"835:15:17"}]},"id":4383,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:17","nodeType":"FunctionDefinition","parameters":{"id":4375,"nodeType":"ParameterList","parameters":[],"src":"775:2:17"},"returnParameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4383,"src":"809:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4376,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:17"},"scope":4392,"src":"758:99:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4390,"nodeType":"Block","src":"935:25:17","statements":[{"expression":{"hexValue":"30","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4387,"id":4389,"nodeType":"Return","src":"945:8:17"}]},"id":4391,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:17","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[],"src":"892:2:17"},"returnParameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4391,"src":"926:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:17"},"scope":4392,"src":"863:97:17","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4393,"src":"624:338:17","usedErrors":[],"usedEvents":[]}],"src":"101:862:17"},"id":17},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[4444]},"id":4445,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4394,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":4395,"nodeType":"StructuredDocumentation","src":"125:489:18","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":4444,"linearizedBaseContracts":[4444],"name":"Panic","nameLocation":"665:5:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":4396,"nodeType":"StructuredDocumentation","src":"677:36:18","text":"@dev generic / unspecified error"},"id":4399,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:18","nodeType":"VariableDeclaration","scope":4444,"src":"718:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":4400,"nodeType":"StructuredDocumentation","src":"764:37:18","text":"@dev used by the assert() builtin"},"id":4403,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:18","nodeType":"VariableDeclaration","scope":4444,"src":"806:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":4404,"nodeType":"StructuredDocumentation","src":"851:41:18","text":"@dev arithmetic underflow or overflow"},"id":4407,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:18","nodeType":"VariableDeclaration","scope":4444,"src":"897:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4405,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:18","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":4408,"nodeType":"StructuredDocumentation","src":"950:35:18","text":"@dev division or modulo by zero"},"id":4411,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:18","nodeType":"VariableDeclaration","scope":4444,"src":"990:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:18","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":4412,"nodeType":"StructuredDocumentation","src":"1045:30:18","text":"@dev enum conversion error"},"id":4415,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:18","nodeType":"VariableDeclaration","scope":4444,"src":"1080:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:18","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":4416,"nodeType":"StructuredDocumentation","src":"1140:36:18","text":"@dev invalid encoding in storage"},"id":4419,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:18","nodeType":"VariableDeclaration","scope":4444,"src":"1181:55:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":4420,"nodeType":"StructuredDocumentation","src":"1242:24:18","text":"@dev empty array pop"},"id":4423,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:18","nodeType":"VariableDeclaration","scope":4444,"src":"1271:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:18","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":4424,"nodeType":"StructuredDocumentation","src":"1325:35:18","text":"@dev array out of bounds access"},"id":4427,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:18","nodeType":"VariableDeclaration","scope":4444,"src":"1365:52:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:18","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":4428,"nodeType":"StructuredDocumentation","src":"1423:65:18","text":"@dev resource error (too large allocation or too large array)"},"id":4431,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:18","nodeType":"VariableDeclaration","scope":4444,"src":"1493:47:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":4432,"nodeType":"StructuredDocumentation","src":"1546:42:18","text":"@dev calling invalid internal function"},"id":4435,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:18","nodeType":"VariableDeclaration","scope":4444,"src":"1593:58:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:18","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":4442,"nodeType":"Block","src":"1819:151:18","statements":[{"AST":{"nativeSrc":"1854:110:18","nodeType":"YulBlock","src":"1854:110:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:18","nodeType":"YulLiteral","src":"1875:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:18","nodeType":"YulLiteral","src":"1881:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:18","nodeType":"YulIdentifier","src":"1868:6:18"},"nativeSrc":"1868:24:18","nodeType":"YulFunctionCall","src":"1868:24:18"},"nativeSrc":"1868:24:18","nodeType":"YulExpressionStatement","src":"1868:24:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:18","nodeType":"YulLiteral","src":"1912:4:18","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:18","nodeType":"YulIdentifier","src":"1918:4:18"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:18","nodeType":"YulIdentifier","src":"1905:6:18"},"nativeSrc":"1905:18:18","nodeType":"YulFunctionCall","src":"1905:18:18"},"nativeSrc":"1905:18:18","nodeType":"YulExpressionStatement","src":"1905:18:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:18","nodeType":"YulLiteral","src":"1943:4:18","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:18","nodeType":"YulLiteral","src":"1949:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:18","nodeType":"YulIdentifier","src":"1936:6:18"},"nativeSrc":"1936:18:18","nodeType":"YulFunctionCall","src":"1936:18:18"},"nativeSrc":"1936:18:18","nodeType":"YulExpressionStatement","src":"1936:18:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4438,"isOffset":false,"isSlot":false,"src":"1918:4:18","valueSize":1}],"flags":["memory-safe"],"id":4441,"nodeType":"InlineAssembly","src":"1829:135:18"}]},"documentation":{"id":4436,"nodeType":"StructuredDocumentation","src":"1658:113:18","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":4443,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:18","nodeType":"FunctionDefinition","parameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"code","nameLocation":"1799:4:18","nodeType":"VariableDeclaration","scope":4443,"src":"1791:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:18"},"returnParameters":{"id":4440,"nodeType":"ParameterList","parameters":[],"src":"1819:0:18"},"scope":4444,"src":"1776:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4445,"src":"657:1315:18","usedErrors":[],"usedEvents":[]}],"src":"99:1874:18"},"id":18},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4574]},"id":4575,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4446,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":4447,"nodeType":"StructuredDocumentation","src":"225:1373:19","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4574,"linearizedBaseContracts":[4574],"name":"SlotDerivation","nameLocation":"1607:14:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":4456,"nodeType":"Block","src":"1790:194:19","statements":[{"AST":{"nativeSrc":"1825:153:19","nodeType":"YulBlock","src":"1825:153:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:19","nodeType":"YulLiteral","src":"1846:4:19","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:19","nodeType":"YulIdentifier","src":"1870:9:19"},{"kind":"number","nativeSrc":"1881:4:19","nodeType":"YulLiteral","src":"1881:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:19","nodeType":"YulIdentifier","src":"1866:3:19"},"nativeSrc":"1866:20:19","nodeType":"YulFunctionCall","src":"1866:20:19"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:19","nodeType":"YulIdentifier","src":"1894:9:19"}],"functionName":{"name":"mload","nativeSrc":"1888:5:19","nodeType":"YulIdentifier","src":"1888:5:19"},"nativeSrc":"1888:16:19","nodeType":"YulFunctionCall","src":"1888:16:19"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:19","nodeType":"YulIdentifier","src":"1856:9:19"},"nativeSrc":"1856:49:19","nodeType":"YulFunctionCall","src":"1856:49:19"},{"kind":"number","nativeSrc":"1907:1:19","nodeType":"YulLiteral","src":"1907:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:19","nodeType":"YulIdentifier","src":"1852:3:19"},"nativeSrc":"1852:57:19","nodeType":"YulFunctionCall","src":"1852:57:19"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:19","nodeType":"YulIdentifier","src":"1839:6:19"},"nativeSrc":"1839:71:19","nodeType":"YulFunctionCall","src":"1839:71:19"},"nativeSrc":"1839:71:19","nodeType":"YulExpressionStatement","src":"1839:71:19"},{"nativeSrc":"1923:45:19","nodeType":"YulAssignment","src":"1923:45:19","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:19","nodeType":"YulLiteral","src":"1945:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:19","nodeType":"YulLiteral","src":"1951:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:19","nodeType":"YulIdentifier","src":"1935:9:19"},"nativeSrc":"1935:21:19","nodeType":"YulFunctionCall","src":"1935:21:19"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:19","nodeType":"YulLiteral","src":"1962:4:19","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:19","nodeType":"YulIdentifier","src":"1958:3:19"},"nativeSrc":"1958:9:19","nodeType":"YulFunctionCall","src":"1958:9:19"}],"functionName":{"name":"and","nativeSrc":"1931:3:19","nodeType":"YulIdentifier","src":"1931:3:19"},"nativeSrc":"1931:37:19","nodeType":"YulFunctionCall","src":"1931:37:19"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:19","nodeType":"YulIdentifier","src":"1923:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4450,"isOffset":false,"isSlot":false,"src":"1870:9:19","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"1894:9:19","valueSize":1},{"declaration":4453,"isOffset":false,"isSlot":false,"src":"1923:4:19","valueSize":1}],"flags":["memory-safe"],"id":4455,"nodeType":"InlineAssembly","src":"1800:178:19"}]},"documentation":{"id":4448,"nodeType":"StructuredDocumentation","src":"1628:74:19","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":4457,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:19","nodeType":"FunctionDefinition","parameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:19","nodeType":"VariableDeclaration","scope":4457,"src":"1728:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4449,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:19"},"returnParameters":{"id":4454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4453,"mutability":"mutable","name":"slot","nameLocation":"1784:4:19","nodeType":"VariableDeclaration","scope":4457,"src":"1776:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:19"},"scope":4574,"src":"1707:277:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4478,"nodeType":"Block","src":"2176:86:19","statements":[{"id":4477,"nodeType":"UncheckedBlock","src":"2186:70:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4471,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"2233:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:19","typeDescriptions":{}}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4473,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"2241:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:19","typeDescriptions":{}}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4466,"id":4476,"nodeType":"Return","src":"2210:35:19"}]}]},"documentation":{"id":4458,"nodeType":"StructuredDocumentation","src":"1990:99:19","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":4479,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:19","nodeType":"FunctionDefinition","parameters":{"id":4463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4460,"mutability":"mutable","name":"slot","nameLocation":"2118:4:19","nodeType":"VariableDeclaration","scope":4479,"src":"2110:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4462,"mutability":"mutable","name":"pos","nameLocation":"2132:3:19","nodeType":"VariableDeclaration","scope":4479,"src":"2124:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:19"},"returnParameters":{"id":4466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4465,"mutability":"mutable","name":"result","nameLocation":"2168:6:19","nodeType":"VariableDeclaration","scope":4479,"src":"2160:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:19"},"scope":4574,"src":"2094:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4488,"nodeType":"Block","src":"2465:127:19","statements":[{"AST":{"nativeSrc":"2500:86:19","nodeType":"YulBlock","src":"2500:86:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:19","nodeType":"YulLiteral","src":"2521:4:19","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:19","nodeType":"YulIdentifier","src":"2527:4:19"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:19","nodeType":"YulIdentifier","src":"2514:6:19"},"nativeSrc":"2514:18:19","nodeType":"YulFunctionCall","src":"2514:18:19"},"nativeSrc":"2514:18:19","nodeType":"YulExpressionStatement","src":"2514:18:19"},{"nativeSrc":"2545:31:19","nodeType":"YulAssignment","src":"2545:31:19","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:19","nodeType":"YulLiteral","src":"2565:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:19","nodeType":"YulLiteral","src":"2571:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:19","nodeType":"YulIdentifier","src":"2555:9:19"},"nativeSrc":"2555:21:19","nodeType":"YulFunctionCall","src":"2555:21:19"},"variableNames":[{"name":"result","nativeSrc":"2545:6:19","nodeType":"YulIdentifier","src":"2545:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4485,"isOffset":false,"isSlot":false,"src":"2545:6:19","valueSize":1},{"declaration":4482,"isOffset":false,"isSlot":false,"src":"2527:4:19","valueSize":1}],"flags":["memory-safe"],"id":4487,"nodeType":"InlineAssembly","src":"2475:111:19"}]},"documentation":{"id":4480,"nodeType":"StructuredDocumentation","src":"2268:118:19","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":4489,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:19","nodeType":"FunctionDefinition","parameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4482,"mutability":"mutable","name":"slot","nameLocation":"2420:4:19","nodeType":"VariableDeclaration","scope":4489,"src":"2412:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:19"},"returnParameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"result","nameLocation":"2457:6:19","nodeType":"VariableDeclaration","scope":4489,"src":"2449:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:19"},"scope":4574,"src":"2391:201:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4500,"nodeType":"Block","src":"2770:179:19","statements":[{"AST":{"nativeSrc":"2805:138:19","nodeType":"YulBlock","src":"2805:138:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:19","nodeType":"YulLiteral","src":"2826:4:19","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:19","nodeType":"YulIdentifier","src":"2836:3:19"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:19","nodeType":"YulLiteral","src":"2845:2:19","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:19","nodeType":"YulLiteral","src":"2853:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:19","nodeType":"YulIdentifier","src":"2849:3:19"},"nativeSrc":"2849:6:19","nodeType":"YulFunctionCall","src":"2849:6:19"}],"functionName":{"name":"shr","nativeSrc":"2841:3:19","nodeType":"YulIdentifier","src":"2841:3:19"},"nativeSrc":"2841:15:19","nodeType":"YulFunctionCall","src":"2841:15:19"}],"functionName":{"name":"and","nativeSrc":"2832:3:19","nodeType":"YulIdentifier","src":"2832:3:19"},"nativeSrc":"2832:25:19","nodeType":"YulFunctionCall","src":"2832:25:19"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:19","nodeType":"YulIdentifier","src":"2819:6:19"},"nativeSrc":"2819:39:19","nodeType":"YulFunctionCall","src":"2819:39:19"},"nativeSrc":"2819:39:19","nodeType":"YulExpressionStatement","src":"2819:39:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:19","nodeType":"YulLiteral","src":"2878:4:19","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:19","nodeType":"YulIdentifier","src":"2884:4:19"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:19","nodeType":"YulIdentifier","src":"2871:6:19"},"nativeSrc":"2871:18:19","nodeType":"YulFunctionCall","src":"2871:18:19"},"nativeSrc":"2871:18:19","nodeType":"YulExpressionStatement","src":"2871:18:19"},{"nativeSrc":"2902:31:19","nodeType":"YulAssignment","src":"2902:31:19","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:19","nodeType":"YulLiteral","src":"2922:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:19","nodeType":"YulLiteral","src":"2928:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:19","nodeType":"YulIdentifier","src":"2912:9:19"},"nativeSrc":"2912:21:19","nodeType":"YulFunctionCall","src":"2912:21:19"},"variableNames":[{"name":"result","nativeSrc":"2902:6:19","nodeType":"YulIdentifier","src":"2902:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4494,"isOffset":false,"isSlot":false,"src":"2836:3:19","valueSize":1},{"declaration":4497,"isOffset":false,"isSlot":false,"src":"2902:6:19","valueSize":1},{"declaration":4492,"isOffset":false,"isSlot":false,"src":"2884:4:19","valueSize":1}],"flags":["memory-safe"],"id":4499,"nodeType":"InlineAssembly","src":"2780:163:19"}]},"documentation":{"id":4490,"nodeType":"StructuredDocumentation","src":"2598:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4501,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:19","nodeType":"FunctionDefinition","parameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"slot","nameLocation":"2712:4:19","nodeType":"VariableDeclaration","scope":4501,"src":"2704:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4494,"mutability":"mutable","name":"key","nameLocation":"2726:3:19","nodeType":"VariableDeclaration","scope":4501,"src":"2718:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4493,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:19"},"returnParameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"result","nameLocation":"2762:6:19","nodeType":"VariableDeclaration","scope":4501,"src":"2754:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:19"},"scope":4574,"src":"2681:268:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4512,"nodeType":"Block","src":"3124:173:19","statements":[{"AST":{"nativeSrc":"3159:132:19","nodeType":"YulBlock","src":"3159:132:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:19","nodeType":"YulLiteral","src":"3180:4:19","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:19","nodeType":"YulIdentifier","src":"3200:3:19"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:19","nodeType":"YulIdentifier","src":"3193:6:19"},"nativeSrc":"3193:11:19","nodeType":"YulFunctionCall","src":"3193:11:19"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:19","nodeType":"YulIdentifier","src":"3186:6:19"},"nativeSrc":"3186:19:19","nodeType":"YulFunctionCall","src":"3186:19:19"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:19","nodeType":"YulIdentifier","src":"3173:6:19"},"nativeSrc":"3173:33:19","nodeType":"YulFunctionCall","src":"3173:33:19"},"nativeSrc":"3173:33:19","nodeType":"YulExpressionStatement","src":"3173:33:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:19","nodeType":"YulLiteral","src":"3226:4:19","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:19","nodeType":"YulIdentifier","src":"3232:4:19"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:19","nodeType":"YulIdentifier","src":"3219:6:19"},"nativeSrc":"3219:18:19","nodeType":"YulFunctionCall","src":"3219:18:19"},"nativeSrc":"3219:18:19","nodeType":"YulExpressionStatement","src":"3219:18:19"},{"nativeSrc":"3250:31:19","nodeType":"YulAssignment","src":"3250:31:19","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:19","nodeType":"YulLiteral","src":"3270:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:19","nodeType":"YulLiteral","src":"3276:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:19","nodeType":"YulIdentifier","src":"3260:9:19"},"nativeSrc":"3260:21:19","nodeType":"YulFunctionCall","src":"3260:21:19"},"variableNames":[{"name":"result","nativeSrc":"3250:6:19","nodeType":"YulIdentifier","src":"3250:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4506,"isOffset":false,"isSlot":false,"src":"3200:3:19","valueSize":1},{"declaration":4509,"isOffset":false,"isSlot":false,"src":"3250:6:19","valueSize":1},{"declaration":4504,"isOffset":false,"isSlot":false,"src":"3232:4:19","valueSize":1}],"flags":["memory-safe"],"id":4511,"nodeType":"InlineAssembly","src":"3134:157:19"}]},"documentation":{"id":4502,"nodeType":"StructuredDocumentation","src":"2955:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4513,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:19","nodeType":"FunctionDefinition","parameters":{"id":4507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"slot","nameLocation":"3069:4:19","nodeType":"VariableDeclaration","scope":4513,"src":"3061:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4506,"mutability":"mutable","name":"key","nameLocation":"3080:3:19","nodeType":"VariableDeclaration","scope":4513,"src":"3075:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4505,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:19"},"returnParameters":{"id":4510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4509,"mutability":"mutable","name":"result","nameLocation":"3116:6:19","nodeType":"VariableDeclaration","scope":4513,"src":"3108:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:19"},"scope":4574,"src":"3038:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4524,"nodeType":"Block","src":"3475:157:19","statements":[{"AST":{"nativeSrc":"3510:116:19","nodeType":"YulBlock","src":"3510:116:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:19","nodeType":"YulLiteral","src":"3531:4:19","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:19","nodeType":"YulIdentifier","src":"3537:3:19"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:19","nodeType":"YulIdentifier","src":"3524:6:19"},"nativeSrc":"3524:17:19","nodeType":"YulFunctionCall","src":"3524:17:19"},"nativeSrc":"3524:17:19","nodeType":"YulExpressionStatement","src":"3524:17:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:19","nodeType":"YulLiteral","src":"3561:4:19","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:19","nodeType":"YulIdentifier","src":"3567:4:19"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:19","nodeType":"YulIdentifier","src":"3554:6:19"},"nativeSrc":"3554:18:19","nodeType":"YulFunctionCall","src":"3554:18:19"},"nativeSrc":"3554:18:19","nodeType":"YulExpressionStatement","src":"3554:18:19"},{"nativeSrc":"3585:31:19","nodeType":"YulAssignment","src":"3585:31:19","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:19","nodeType":"YulLiteral","src":"3605:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:19","nodeType":"YulLiteral","src":"3611:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:19","nodeType":"YulIdentifier","src":"3595:9:19"},"nativeSrc":"3595:21:19","nodeType":"YulFunctionCall","src":"3595:21:19"},"variableNames":[{"name":"result","nativeSrc":"3585:6:19","nodeType":"YulIdentifier","src":"3585:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4518,"isOffset":false,"isSlot":false,"src":"3537:3:19","valueSize":1},{"declaration":4521,"isOffset":false,"isSlot":false,"src":"3585:6:19","valueSize":1},{"declaration":4516,"isOffset":false,"isSlot":false,"src":"3567:4:19","valueSize":1}],"flags":["memory-safe"],"id":4523,"nodeType":"InlineAssembly","src":"3485:141:19"}]},"documentation":{"id":4514,"nodeType":"StructuredDocumentation","src":"3303:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:19","nodeType":"FunctionDefinition","parameters":{"id":4519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4516,"mutability":"mutable","name":"slot","nameLocation":"3417:4:19","nodeType":"VariableDeclaration","scope":4525,"src":"3409:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4518,"mutability":"mutable","name":"key","nameLocation":"3431:3:19","nodeType":"VariableDeclaration","scope":4525,"src":"3423:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:19"},"returnParameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"mutability":"mutable","name":"result","nameLocation":"3467:6:19","nodeType":"VariableDeclaration","scope":4525,"src":"3459:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:19"},"scope":4574,"src":"3386:246:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4536,"nodeType":"Block","src":"3810:157:19","statements":[{"AST":{"nativeSrc":"3845:116:19","nodeType":"YulBlock","src":"3845:116:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:19","nodeType":"YulLiteral","src":"3866:4:19","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:19","nodeType":"YulIdentifier","src":"3872:3:19"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:19","nodeType":"YulIdentifier","src":"3859:6:19"},"nativeSrc":"3859:17:19","nodeType":"YulFunctionCall","src":"3859:17:19"},"nativeSrc":"3859:17:19","nodeType":"YulExpressionStatement","src":"3859:17:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:19","nodeType":"YulLiteral","src":"3896:4:19","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:19","nodeType":"YulIdentifier","src":"3902:4:19"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:19","nodeType":"YulIdentifier","src":"3889:6:19"},"nativeSrc":"3889:18:19","nodeType":"YulFunctionCall","src":"3889:18:19"},"nativeSrc":"3889:18:19","nodeType":"YulExpressionStatement","src":"3889:18:19"},{"nativeSrc":"3920:31:19","nodeType":"YulAssignment","src":"3920:31:19","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:19","nodeType":"YulLiteral","src":"3940:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:19","nodeType":"YulLiteral","src":"3946:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:19","nodeType":"YulIdentifier","src":"3930:9:19"},"nativeSrc":"3930:21:19","nodeType":"YulFunctionCall","src":"3930:21:19"},"variableNames":[{"name":"result","nativeSrc":"3920:6:19","nodeType":"YulIdentifier","src":"3920:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4530,"isOffset":false,"isSlot":false,"src":"3872:3:19","valueSize":1},{"declaration":4533,"isOffset":false,"isSlot":false,"src":"3920:6:19","valueSize":1},{"declaration":4528,"isOffset":false,"isSlot":false,"src":"3902:4:19","valueSize":1}],"flags":["memory-safe"],"id":4535,"nodeType":"InlineAssembly","src":"3820:141:19"}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"3638:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4537,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:19","nodeType":"FunctionDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"slot","nameLocation":"3752:4:19","nodeType":"VariableDeclaration","scope":4537,"src":"3744:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4530,"mutability":"mutable","name":"key","nameLocation":"3766:3:19","nodeType":"VariableDeclaration","scope":4537,"src":"3758:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:19"},"returnParameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"result","nameLocation":"3802:6:19","nodeType":"VariableDeclaration","scope":4537,"src":"3794:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:19"},"scope":4574,"src":"3721:246:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4548,"nodeType":"Block","src":"4144:157:19","statements":[{"AST":{"nativeSrc":"4179:116:19","nodeType":"YulBlock","src":"4179:116:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:19","nodeType":"YulLiteral","src":"4200:4:19","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:19","nodeType":"YulIdentifier","src":"4206:3:19"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:19","nodeType":"YulIdentifier","src":"4193:6:19"},"nativeSrc":"4193:17:19","nodeType":"YulFunctionCall","src":"4193:17:19"},"nativeSrc":"4193:17:19","nodeType":"YulExpressionStatement","src":"4193:17:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:19","nodeType":"YulLiteral","src":"4230:4:19","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:19","nodeType":"YulIdentifier","src":"4236:4:19"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:19","nodeType":"YulIdentifier","src":"4223:6:19"},"nativeSrc":"4223:18:19","nodeType":"YulFunctionCall","src":"4223:18:19"},"nativeSrc":"4223:18:19","nodeType":"YulExpressionStatement","src":"4223:18:19"},{"nativeSrc":"4254:31:19","nodeType":"YulAssignment","src":"4254:31:19","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:19","nodeType":"YulLiteral","src":"4274:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:19","nodeType":"YulLiteral","src":"4280:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:19","nodeType":"YulIdentifier","src":"4264:9:19"},"nativeSrc":"4264:21:19","nodeType":"YulFunctionCall","src":"4264:21:19"},"variableNames":[{"name":"result","nativeSrc":"4254:6:19","nodeType":"YulIdentifier","src":"4254:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4542,"isOffset":false,"isSlot":false,"src":"4206:3:19","valueSize":1},{"declaration":4545,"isOffset":false,"isSlot":false,"src":"4254:6:19","valueSize":1},{"declaration":4540,"isOffset":false,"isSlot":false,"src":"4236:4:19","valueSize":1}],"flags":["memory-safe"],"id":4547,"nodeType":"InlineAssembly","src":"4154:141:19"}]},"documentation":{"id":4538,"nodeType":"StructuredDocumentation","src":"3973:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4549,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:19","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"slot","nameLocation":"4087:4:19","nodeType":"VariableDeclaration","scope":4549,"src":"4079:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"key","nameLocation":"4100:3:19","nodeType":"VariableDeclaration","scope":4549,"src":"4093:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4541,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:19"},"returnParameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"result","nameLocation":"4136:6:19","nodeType":"VariableDeclaration","scope":4549,"src":"4128:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:19"},"scope":4574,"src":"4056:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4560,"nodeType":"Block","src":"4485:326:19","statements":[{"AST":{"nativeSrc":"4520:285:19","nodeType":"YulBlock","src":"4520:285:19","statements":[{"nativeSrc":"4534:24:19","nodeType":"YulVariableDeclaration","src":"4534:24:19","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:19","nodeType":"YulIdentifier","src":"4554:3:19"}],"functionName":{"name":"mload","nativeSrc":"4548:5:19","nodeType":"YulIdentifier","src":"4548:5:19"},"nativeSrc":"4548:10:19","nodeType":"YulFunctionCall","src":"4548:10:19"},"variables":[{"name":"length","nativeSrc":"4538:6:19","nodeType":"YulTypedName","src":"4538:6:19","type":""}]},{"nativeSrc":"4571:27:19","nodeType":"YulVariableDeclaration","src":"4571:27:19","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:19","nodeType":"YulIdentifier","src":"4588:3:19"},{"kind":"number","nativeSrc":"4593:4:19","nodeType":"YulLiteral","src":"4593:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:19","nodeType":"YulIdentifier","src":"4584:3:19"},"nativeSrc":"4584:14:19","nodeType":"YulFunctionCall","src":"4584:14:19"},"variables":[{"name":"begin","nativeSrc":"4575:5:19","nodeType":"YulTypedName","src":"4575:5:19","type":""}]},{"nativeSrc":"4611:29:19","nodeType":"YulVariableDeclaration","src":"4611:29:19","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:19","nodeType":"YulIdentifier","src":"4626:5:19"},{"name":"length","nativeSrc":"4633:6:19","nodeType":"YulIdentifier","src":"4633:6:19"}],"functionName":{"name":"add","nativeSrc":"4622:3:19","nodeType":"YulIdentifier","src":"4622:3:19"},"nativeSrc":"4622:18:19","nodeType":"YulFunctionCall","src":"4622:18:19"},"variables":[{"name":"end","nativeSrc":"4615:3:19","nodeType":"YulTypedName","src":"4615:3:19","type":""}]},{"nativeSrc":"4653:23:19","nodeType":"YulVariableDeclaration","src":"4653:23:19","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:19","nodeType":"YulIdentifier","src":"4672:3:19"}],"functionName":{"name":"mload","nativeSrc":"4666:5:19","nodeType":"YulIdentifier","src":"4666:5:19"},"nativeSrc":"4666:10:19","nodeType":"YulFunctionCall","src":"4666:10:19"},"variables":[{"name":"cache","nativeSrc":"4657:5:19","nodeType":"YulTypedName","src":"4657:5:19","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:19","nodeType":"YulIdentifier","src":"4696:3:19"},{"name":"slot","nativeSrc":"4701:4:19","nodeType":"YulIdentifier","src":"4701:4:19"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:19","nodeType":"YulIdentifier","src":"4689:6:19"},"nativeSrc":"4689:17:19","nodeType":"YulFunctionCall","src":"4689:17:19"},"nativeSrc":"4689:17:19","nodeType":"YulExpressionStatement","src":"4689:17:19"},{"nativeSrc":"4719:45:19","nodeType":"YulAssignment","src":"4719:45:19","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:19","nodeType":"YulIdentifier","src":"4739:5:19"},{"arguments":[{"name":"length","nativeSrc":"4750:6:19","nodeType":"YulIdentifier","src":"4750:6:19"},{"kind":"number","nativeSrc":"4758:4:19","nodeType":"YulLiteral","src":"4758:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:19","nodeType":"YulIdentifier","src":"4746:3:19"},"nativeSrc":"4746:17:19","nodeType":"YulFunctionCall","src":"4746:17:19"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:19","nodeType":"YulIdentifier","src":"4729:9:19"},"nativeSrc":"4729:35:19","nodeType":"YulFunctionCall","src":"4729:35:19"},"variableNames":[{"name":"result","nativeSrc":"4719:6:19","nodeType":"YulIdentifier","src":"4719:6:19"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:19","nodeType":"YulIdentifier","src":"4784:3:19"},{"name":"cache","nativeSrc":"4789:5:19","nodeType":"YulIdentifier","src":"4789:5:19"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:19","nodeType":"YulIdentifier","src":"4777:6:19"},"nativeSrc":"4777:18:19","nodeType":"YulFunctionCall","src":"4777:18:19"},"nativeSrc":"4777:18:19","nodeType":"YulExpressionStatement","src":"4777:18:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4554,"isOffset":false,"isSlot":false,"src":"4554:3:19","valueSize":1},{"declaration":4554,"isOffset":false,"isSlot":false,"src":"4588:3:19","valueSize":1},{"declaration":4557,"isOffset":false,"isSlot":false,"src":"4719:6:19","valueSize":1},{"declaration":4552,"isOffset":false,"isSlot":false,"src":"4701:4:19","valueSize":1}],"flags":["memory-safe"],"id":4559,"nodeType":"InlineAssembly","src":"4495:310:19"}]},"documentation":{"id":4550,"nodeType":"StructuredDocumentation","src":"4307:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:19","nodeType":"FunctionDefinition","parameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"slot","nameLocation":"4421:4:19","nodeType":"VariableDeclaration","scope":4561,"src":"4413:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4554,"mutability":"mutable","name":"key","nameLocation":"4441:3:19","nodeType":"VariableDeclaration","scope":4561,"src":"4427:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4553,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:19"},"returnParameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4557,"mutability":"mutable","name":"result","nameLocation":"4477:6:19","nodeType":"VariableDeclaration","scope":4561,"src":"4469:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:19"},"scope":4574,"src":"4390:421:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4572,"nodeType":"Block","src":"4994:326:19","statements":[{"AST":{"nativeSrc":"5029:285:19","nodeType":"YulBlock","src":"5029:285:19","statements":[{"nativeSrc":"5043:24:19","nodeType":"YulVariableDeclaration","src":"5043:24:19","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:19","nodeType":"YulIdentifier","src":"5063:3:19"}],"functionName":{"name":"mload","nativeSrc":"5057:5:19","nodeType":"YulIdentifier","src":"5057:5:19"},"nativeSrc":"5057:10:19","nodeType":"YulFunctionCall","src":"5057:10:19"},"variables":[{"name":"length","nativeSrc":"5047:6:19","nodeType":"YulTypedName","src":"5047:6:19","type":""}]},{"nativeSrc":"5080:27:19","nodeType":"YulVariableDeclaration","src":"5080:27:19","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:19","nodeType":"YulIdentifier","src":"5097:3:19"},{"kind":"number","nativeSrc":"5102:4:19","nodeType":"YulLiteral","src":"5102:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:19","nodeType":"YulIdentifier","src":"5093:3:19"},"nativeSrc":"5093:14:19","nodeType":"YulFunctionCall","src":"5093:14:19"},"variables":[{"name":"begin","nativeSrc":"5084:5:19","nodeType":"YulTypedName","src":"5084:5:19","type":""}]},{"nativeSrc":"5120:29:19","nodeType":"YulVariableDeclaration","src":"5120:29:19","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:19","nodeType":"YulIdentifier","src":"5135:5:19"},{"name":"length","nativeSrc":"5142:6:19","nodeType":"YulIdentifier","src":"5142:6:19"}],"functionName":{"name":"add","nativeSrc":"5131:3:19","nodeType":"YulIdentifier","src":"5131:3:19"},"nativeSrc":"5131:18:19","nodeType":"YulFunctionCall","src":"5131:18:19"},"variables":[{"name":"end","nativeSrc":"5124:3:19","nodeType":"YulTypedName","src":"5124:3:19","type":""}]},{"nativeSrc":"5162:23:19","nodeType":"YulVariableDeclaration","src":"5162:23:19","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:19","nodeType":"YulIdentifier","src":"5181:3:19"}],"functionName":{"name":"mload","nativeSrc":"5175:5:19","nodeType":"YulIdentifier","src":"5175:5:19"},"nativeSrc":"5175:10:19","nodeType":"YulFunctionCall","src":"5175:10:19"},"variables":[{"name":"cache","nativeSrc":"5166:5:19","nodeType":"YulTypedName","src":"5166:5:19","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:19","nodeType":"YulIdentifier","src":"5205:3:19"},{"name":"slot","nativeSrc":"5210:4:19","nodeType":"YulIdentifier","src":"5210:4:19"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:19","nodeType":"YulIdentifier","src":"5198:6:19"},"nativeSrc":"5198:17:19","nodeType":"YulFunctionCall","src":"5198:17:19"},"nativeSrc":"5198:17:19","nodeType":"YulExpressionStatement","src":"5198:17:19"},{"nativeSrc":"5228:45:19","nodeType":"YulAssignment","src":"5228:45:19","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:19","nodeType":"YulIdentifier","src":"5248:5:19"},{"arguments":[{"name":"length","nativeSrc":"5259:6:19","nodeType":"YulIdentifier","src":"5259:6:19"},{"kind":"number","nativeSrc":"5267:4:19","nodeType":"YulLiteral","src":"5267:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:19","nodeType":"YulIdentifier","src":"5255:3:19"},"nativeSrc":"5255:17:19","nodeType":"YulFunctionCall","src":"5255:17:19"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:19","nodeType":"YulIdentifier","src":"5238:9:19"},"nativeSrc":"5238:35:19","nodeType":"YulFunctionCall","src":"5238:35:19"},"variableNames":[{"name":"result","nativeSrc":"5228:6:19","nodeType":"YulIdentifier","src":"5228:6:19"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:19","nodeType":"YulIdentifier","src":"5293:3:19"},{"name":"cache","nativeSrc":"5298:5:19","nodeType":"YulIdentifier","src":"5298:5:19"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:19","nodeType":"YulIdentifier","src":"5286:6:19"},"nativeSrc":"5286:18:19","nodeType":"YulFunctionCall","src":"5286:18:19"},"nativeSrc":"5286:18:19","nodeType":"YulExpressionStatement","src":"5286:18:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4566,"isOffset":false,"isSlot":false,"src":"5063:3:19","valueSize":1},{"declaration":4566,"isOffset":false,"isSlot":false,"src":"5097:3:19","valueSize":1},{"declaration":4569,"isOffset":false,"isSlot":false,"src":"5228:6:19","valueSize":1},{"declaration":4564,"isOffset":false,"isSlot":false,"src":"5210:4:19","valueSize":1}],"flags":["memory-safe"],"id":4571,"nodeType":"InlineAssembly","src":"5004:310:19"}]},"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"4817:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":4573,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:19","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"slot","nameLocation":"4931:4:19","nodeType":"VariableDeclaration","scope":4573,"src":"4923:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"key","nameLocation":"4950:3:19","nodeType":"VariableDeclaration","scope":4573,"src":"4937:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4565,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:19"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"result","nameLocation":"4986:6:19","nodeType":"VariableDeclaration","scope":4573,"src":"4978:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:19"},"scope":4574,"src":"4900:420:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4575,"src":"1599:3723:19","usedErrors":[],"usedEvents":[]}],"src":"199:5124:19"},"id":19},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4698]},"id":4699,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4576,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4577,"nodeType":"StructuredDocumentation","src":"219:1187:20","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4698,"linearizedBaseContracts":[4698],"name":"StorageSlot","nameLocation":"1415:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4580,"members":[{"constant":false,"id":4579,"mutability":"mutable","name":"value","nameLocation":"1470:5:20","nodeType":"VariableDeclaration","scope":4580,"src":"1462:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4578,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:20","nodeType":"StructDefinition","scope":4698,"src":"1433:49:20","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4583,"members":[{"constant":false,"id":4582,"mutability":"mutable","name":"value","nameLocation":"1522:5:20","nodeType":"VariableDeclaration","scope":4583,"src":"1517:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4581,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:20","nodeType":"StructDefinition","scope":4698,"src":"1488:46:20","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4586,"members":[{"constant":false,"id":4585,"mutability":"mutable","name":"value","nameLocation":"1577:5:20","nodeType":"VariableDeclaration","scope":4586,"src":"1569:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:20","nodeType":"StructDefinition","scope":4698,"src":"1540:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4589,"members":[{"constant":false,"id":4588,"mutability":"mutable","name":"value","nameLocation":"1632:5:20","nodeType":"VariableDeclaration","scope":4589,"src":"1624:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:20","nodeType":"StructDefinition","scope":4698,"src":"1595:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4592,"members":[{"constant":false,"id":4591,"mutability":"mutable","name":"value","nameLocation":"1685:5:20","nodeType":"VariableDeclaration","scope":4592,"src":"1678:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4590,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:20","nodeType":"StructDefinition","scope":4698,"src":"1650:47:20","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4595,"members":[{"constant":false,"id":4594,"mutability":"mutable","name":"value","nameLocation":"1738:5:20","nodeType":"VariableDeclaration","scope":4595,"src":"1731:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4593,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:20","nodeType":"StructDefinition","scope":4698,"src":"1703:47:20","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4598,"members":[{"constant":false,"id":4597,"mutability":"mutable","name":"value","nameLocation":"1789:5:20","nodeType":"VariableDeclaration","scope":4598,"src":"1783:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4596,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:20","nodeType":"StructDefinition","scope":4698,"src":"1756:45:20","visibility":"public"},{"body":{"id":4608,"nodeType":"Block","src":"1983:79:20","statements":[{"AST":{"nativeSrc":"2018:38:20","nodeType":"YulBlock","src":"2018:38:20","statements":[{"nativeSrc":"2032:14:20","nodeType":"YulAssignment","src":"2032:14:20","value":{"name":"slot","nativeSrc":"2042:4:20","nodeType":"YulIdentifier","src":"2042:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:20","nodeType":"YulIdentifier","src":"2032:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4605,"isOffset":false,"isSlot":true,"src":"2032:6:20","suffix":"slot","valueSize":1},{"declaration":4601,"isOffset":false,"isSlot":false,"src":"2042:4:20","valueSize":1}],"flags":["memory-safe"],"id":4607,"nodeType":"InlineAssembly","src":"1993:63:20"}]},"documentation":{"id":4599,"nodeType":"StructuredDocumentation","src":"1807:87:20","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4609,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:20","nodeType":"FunctionDefinition","parameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"slot","nameLocation":"1931:4:20","nodeType":"VariableDeclaration","scope":4609,"src":"1923:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:20"},"returnParameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"r","nameLocation":"1980:1:20","nodeType":"VariableDeclaration","scope":4609,"src":"1960:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4580_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4604,"nodeType":"UserDefinedTypeName","pathNode":{"id":4603,"name":"AddressSlot","nameLocations":["1960:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4580,"src":"1960:11:20"},"referencedDeclaration":4580,"src":"1960:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4580_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:20"},"scope":4698,"src":"1899:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4619,"nodeType":"Block","src":"2243:79:20","statements":[{"AST":{"nativeSrc":"2278:38:20","nodeType":"YulBlock","src":"2278:38:20","statements":[{"nativeSrc":"2292:14:20","nodeType":"YulAssignment","src":"2292:14:20","value":{"name":"slot","nativeSrc":"2302:4:20","nodeType":"YulIdentifier","src":"2302:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:20","nodeType":"YulIdentifier","src":"2292:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4616,"isOffset":false,"isSlot":true,"src":"2292:6:20","suffix":"slot","valueSize":1},{"declaration":4612,"isOffset":false,"isSlot":false,"src":"2302:4:20","valueSize":1}],"flags":["memory-safe"],"id":4618,"nodeType":"InlineAssembly","src":"2253:63:20"}]},"documentation":{"id":4610,"nodeType":"StructuredDocumentation","src":"2068:86:20","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4620,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:20","nodeType":"FunctionDefinition","parameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"slot","nameLocation":"2191:4:20","nodeType":"VariableDeclaration","scope":4620,"src":"2183:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:20"},"returnParameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"r","nameLocation":"2240:1:20","nodeType":"VariableDeclaration","scope":4620,"src":"2220:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4583_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4615,"nodeType":"UserDefinedTypeName","pathNode":{"id":4614,"name":"BooleanSlot","nameLocations":["2220:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4583,"src":"2220:11:20"},"referencedDeclaration":4583,"src":"2220:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4583_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:20"},"scope":4698,"src":"2159:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4630,"nodeType":"Block","src":"2503:79:20","statements":[{"AST":{"nativeSrc":"2538:38:20","nodeType":"YulBlock","src":"2538:38:20","statements":[{"nativeSrc":"2552:14:20","nodeType":"YulAssignment","src":"2552:14:20","value":{"name":"slot","nativeSrc":"2562:4:20","nodeType":"YulIdentifier","src":"2562:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:20","nodeType":"YulIdentifier","src":"2552:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4627,"isOffset":false,"isSlot":true,"src":"2552:6:20","suffix":"slot","valueSize":1},{"declaration":4623,"isOffset":false,"isSlot":false,"src":"2562:4:20","valueSize":1}],"flags":["memory-safe"],"id":4629,"nodeType":"InlineAssembly","src":"2513:63:20"}]},"documentation":{"id":4621,"nodeType":"StructuredDocumentation","src":"2328:86:20","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4631,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:20","nodeType":"FunctionDefinition","parameters":{"id":4624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4623,"mutability":"mutable","name":"slot","nameLocation":"2451:4:20","nodeType":"VariableDeclaration","scope":4631,"src":"2443:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:20"},"returnParameters":{"id":4628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"mutability":"mutable","name":"r","nameLocation":"2500:1:20","nodeType":"VariableDeclaration","scope":4631,"src":"2480:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4586_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4626,"nodeType":"UserDefinedTypeName","pathNode":{"id":4625,"name":"Bytes32Slot","nameLocations":["2480:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4586,"src":"2480:11:20"},"referencedDeclaration":4586,"src":"2480:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4586_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:20"},"scope":4698,"src":"2419:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4641,"nodeType":"Block","src":"2763:79:20","statements":[{"AST":{"nativeSrc":"2798:38:20","nodeType":"YulBlock","src":"2798:38:20","statements":[{"nativeSrc":"2812:14:20","nodeType":"YulAssignment","src":"2812:14:20","value":{"name":"slot","nativeSrc":"2822:4:20","nodeType":"YulIdentifier","src":"2822:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:20","nodeType":"YulIdentifier","src":"2812:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4638,"isOffset":false,"isSlot":true,"src":"2812:6:20","suffix":"slot","valueSize":1},{"declaration":4634,"isOffset":false,"isSlot":false,"src":"2822:4:20","valueSize":1}],"flags":["memory-safe"],"id":4640,"nodeType":"InlineAssembly","src":"2773:63:20"}]},"documentation":{"id":4632,"nodeType":"StructuredDocumentation","src":"2588:86:20","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4642,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:20","nodeType":"FunctionDefinition","parameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"mutability":"mutable","name":"slot","nameLocation":"2711:4:20","nodeType":"VariableDeclaration","scope":4642,"src":"2703:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:20"},"returnParameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4638,"mutability":"mutable","name":"r","nameLocation":"2760:1:20","nodeType":"VariableDeclaration","scope":4642,"src":"2740:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4589_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4637,"nodeType":"UserDefinedTypeName","pathNode":{"id":4636,"name":"Uint256Slot","nameLocations":["2740:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4589,"src":"2740:11:20"},"referencedDeclaration":4589,"src":"2740:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4589_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:20"},"scope":4698,"src":"2679:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4652,"nodeType":"Block","src":"3020:79:20","statements":[{"AST":{"nativeSrc":"3055:38:20","nodeType":"YulBlock","src":"3055:38:20","statements":[{"nativeSrc":"3069:14:20","nodeType":"YulAssignment","src":"3069:14:20","value":{"name":"slot","nativeSrc":"3079:4:20","nodeType":"YulIdentifier","src":"3079:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:20","nodeType":"YulIdentifier","src":"3069:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4649,"isOffset":false,"isSlot":true,"src":"3069:6:20","suffix":"slot","valueSize":1},{"declaration":4645,"isOffset":false,"isSlot":false,"src":"3079:4:20","valueSize":1}],"flags":["memory-safe"],"id":4651,"nodeType":"InlineAssembly","src":"3030:63:20"}]},"documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"2848:85:20","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4653,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:20","nodeType":"FunctionDefinition","parameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"slot","nameLocation":"2969:4:20","nodeType":"VariableDeclaration","scope":4653,"src":"2961:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:20"},"returnParameters":{"id":4650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"r","nameLocation":"3017:1:20","nodeType":"VariableDeclaration","scope":4653,"src":"2998:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4592_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4648,"nodeType":"UserDefinedTypeName","pathNode":{"id":4647,"name":"Int256Slot","nameLocations":["2998:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"2998:10:20"},"referencedDeclaration":4592,"src":"2998:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4592_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:20"},"scope":4698,"src":"2938:161:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4663,"nodeType":"Block","src":"3277:79:20","statements":[{"AST":{"nativeSrc":"3312:38:20","nodeType":"YulBlock","src":"3312:38:20","statements":[{"nativeSrc":"3326:14:20","nodeType":"YulAssignment","src":"3326:14:20","value":{"name":"slot","nativeSrc":"3336:4:20","nodeType":"YulIdentifier","src":"3336:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:20","nodeType":"YulIdentifier","src":"3326:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4660,"isOffset":false,"isSlot":true,"src":"3326:6:20","suffix":"slot","valueSize":1},{"declaration":4656,"isOffset":false,"isSlot":false,"src":"3336:4:20","valueSize":1}],"flags":["memory-safe"],"id":4662,"nodeType":"InlineAssembly","src":"3287:63:20"}]},"documentation":{"id":4654,"nodeType":"StructuredDocumentation","src":"3105:85:20","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4664,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:20","nodeType":"FunctionDefinition","parameters":{"id":4657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4656,"mutability":"mutable","name":"slot","nameLocation":"3226:4:20","nodeType":"VariableDeclaration","scope":4664,"src":"3218:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:20"},"returnParameters":{"id":4661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4660,"mutability":"mutable","name":"r","nameLocation":"3274:1:20","nodeType":"VariableDeclaration","scope":4664,"src":"3255:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4595_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4659,"nodeType":"UserDefinedTypeName","pathNode":{"id":4658,"name":"StringSlot","nameLocations":["3255:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":4595,"src":"3255:10:20"},"referencedDeclaration":4595,"src":"3255:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4595_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:20"},"scope":4698,"src":"3195:161:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4674,"nodeType":"Block","src":"3558:85:20","statements":[{"AST":{"nativeSrc":"3593:44:20","nodeType":"YulBlock","src":"3593:44:20","statements":[{"nativeSrc":"3607:20:20","nodeType":"YulAssignment","src":"3607:20:20","value":{"name":"store.slot","nativeSrc":"3617:10:20","nodeType":"YulIdentifier","src":"3617:10:20"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:20","nodeType":"YulIdentifier","src":"3607:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4671,"isOffset":false,"isSlot":true,"src":"3607:6:20","suffix":"slot","valueSize":1},{"declaration":4667,"isOffset":false,"isSlot":true,"src":"3617:10:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4673,"nodeType":"InlineAssembly","src":"3568:69:20"}]},"documentation":{"id":4665,"nodeType":"StructuredDocumentation","src":"3362:101:20","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4675,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:20","nodeType":"FunctionDefinition","parameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"store","nameLocation":"3506:5:20","nodeType":"VariableDeclaration","scope":4675,"src":"3491:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4666,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:20"},"returnParameters":{"id":4672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4671,"mutability":"mutable","name":"r","nameLocation":"3555:1:20","nodeType":"VariableDeclaration","scope":4675,"src":"3536:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4595_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4670,"nodeType":"UserDefinedTypeName","pathNode":{"id":4669,"name":"StringSlot","nameLocations":["3536:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":4595,"src":"3536:10:20"},"referencedDeclaration":4595,"src":"3536:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4595_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:20"},"scope":4698,"src":"3468:175:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4685,"nodeType":"Block","src":"3818:79:20","statements":[{"AST":{"nativeSrc":"3853:38:20","nodeType":"YulBlock","src":"3853:38:20","statements":[{"nativeSrc":"3867:14:20","nodeType":"YulAssignment","src":"3867:14:20","value":{"name":"slot","nativeSrc":"3877:4:20","nodeType":"YulIdentifier","src":"3877:4:20"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:20","nodeType":"YulIdentifier","src":"3867:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4682,"isOffset":false,"isSlot":true,"src":"3867:6:20","suffix":"slot","valueSize":1},{"declaration":4678,"isOffset":false,"isSlot":false,"src":"3877:4:20","valueSize":1}],"flags":["memory-safe"],"id":4684,"nodeType":"InlineAssembly","src":"3828:63:20"}]},"documentation":{"id":4676,"nodeType":"StructuredDocumentation","src":"3649:84:20","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4686,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:20","nodeType":"FunctionDefinition","parameters":{"id":4679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4678,"mutability":"mutable","name":"slot","nameLocation":"3768:4:20","nodeType":"VariableDeclaration","scope":4686,"src":"3760:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:20"},"returnParameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"r","nameLocation":"3815:1:20","nodeType":"VariableDeclaration","scope":4686,"src":"3797:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4598_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4681,"nodeType":"UserDefinedTypeName","pathNode":{"id":4680,"name":"BytesSlot","nameLocations":["3797:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"3797:9:20"},"referencedDeclaration":4598,"src":"3797:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4598_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:20"},"scope":4698,"src":"3738:159:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4696,"nodeType":"Block","src":"4094:85:20","statements":[{"AST":{"nativeSrc":"4129:44:20","nodeType":"YulBlock","src":"4129:44:20","statements":[{"nativeSrc":"4143:20:20","nodeType":"YulAssignment","src":"4143:20:20","value":{"name":"store.slot","nativeSrc":"4153:10:20","nodeType":"YulIdentifier","src":"4153:10:20"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:20","nodeType":"YulIdentifier","src":"4143:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4693,"isOffset":false,"isSlot":true,"src":"4143:6:20","suffix":"slot","valueSize":1},{"declaration":4689,"isOffset":false,"isSlot":true,"src":"4153:10:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4695,"nodeType":"InlineAssembly","src":"4104:69:20"}]},"documentation":{"id":4687,"nodeType":"StructuredDocumentation","src":"3903:99:20","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:20","nodeType":"FunctionDefinition","parameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"store","nameLocation":"4043:5:20","nodeType":"VariableDeclaration","scope":4697,"src":"4029:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4688,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:20"},"returnParameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"r","nameLocation":"4091:1:20","nodeType":"VariableDeclaration","scope":4697,"src":"4073:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4598_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4692,"nodeType":"UserDefinedTypeName","pathNode":{"id":4691,"name":"BytesSlot","nameLocations":["4073:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"4073:9:20"},"referencedDeclaration":4598,"src":"4073:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4598_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:20"},"scope":4698,"src":"4007:172:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4699,"src":"1407:2774:20","usedErrors":[],"usedEvents":[]}],"src":"193:3989:20"},"id":20},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7757],"SafeCast":[9522],"SignedMath":[9666],"Strings":[6100]},"id":6101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4700,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6101,"sourceUnit":7758,"src":"127:37:21","symbolAliases":[{"foreign":{"id":4701,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"135:4:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":4704,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6101,"sourceUnit":9523,"src":"165:45:21","symbolAliases":[{"foreign":{"id":4703,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"173:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":4706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6101,"sourceUnit":9667,"src":"211:49:21","symbolAliases":[{"foreign":{"id":4705,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"219:10:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4707,"nodeType":"StructuredDocumentation","src":"262:34:21","text":" @dev String operations."},"fullyImplemented":true,"id":6100,"linearizedBaseContracts":[6100],"name":"Strings","nameLocation":"305:7:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4709,"libraryName":{"id":4708,"name":"SafeCast","nameLocations":["325:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":9522,"src":"325:8:21"},"nodeType":"UsingForDirective","src":"319:21:21"},{"constant":true,"id":4712,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:21","nodeType":"VariableDeclaration","scope":6100,"src":"346:56:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4710,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4715,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:21","nodeType":"VariableDeclaration","scope":6100,"src":"408:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4713,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:21","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":4751,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:21","nodeType":"VariableDeclaration","scope":6100,"src":"456:302:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":4750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":4740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":4735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":4725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:21","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:21","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":4724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:21","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:21","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:21","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":4729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:21","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:21","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:21","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":4734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:21","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:21","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:21","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:21","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":4739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:21","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:21","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":4743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:21","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:21","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":4744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:21","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:21","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":4748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:21","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":4749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:21","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:21","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":4752,"nodeType":"StructuredDocumentation","src":"778:81:21","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4758,"name":"StringsInsufficientHexLength","nameLocation":"870:28:21","nodeType":"ErrorDefinition","parameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"value","nameLocation":"907:5:21","nodeType":"VariableDeclaration","scope":4758,"src":"899:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4753,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4756,"mutability":"mutable","name":"length","nameLocation":"922:6:21","nodeType":"VariableDeclaration","scope":4758,"src":"914:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:21"},"src":"864:66:21"},{"documentation":{"id":4759,"nodeType":"StructuredDocumentation","src":"936:108:21","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":4761,"name":"StringsInvalidChar","nameLocation":"1055:18:21","nodeType":"ErrorDefinition","parameters":{"id":4760,"nodeType":"ParameterList","parameters":[],"src":"1073:2:21"},"src":"1049:27:21"},{"documentation":{"id":4762,"nodeType":"StructuredDocumentation","src":"1082:84:21","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":4764,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:21","nodeType":"ErrorDefinition","parameters":{"id":4763,"nodeType":"ParameterList","parameters":[],"src":"1204:2:21"},"src":"1171:36:21"},{"body":{"id":4811,"nodeType":"Block","src":"1379:563:21","statements":[{"id":4810,"nodeType":"UncheckedBlock","src":"1389:547:21","statements":[{"assignments":[4773],"declarations":[{"constant":false,"id":4773,"mutability":"mutable","name":"length","nameLocation":"1421:6:21","nodeType":"VariableDeclaration","scope":4810,"src":"1413:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4780,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"1441:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4774,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"1430:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7757_$","typeString":"type(library Math)"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:21","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":7589,"src":"1430:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:21"},{"assignments":[4782],"declarations":[{"constant":false,"id":4782,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:21","nodeType":"VariableDeclaration","scope":4810,"src":"1465:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4781,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4787,"initialValue":{"arguments":[{"id":4785,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"1499:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4783,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:21"},{"assignments":[4789],"declarations":[{"constant":false,"id":4789,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:21","nodeType":"VariableDeclaration","scope":4810,"src":"1520:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4790,"nodeType":"VariableDeclarationStatement","src":"1520:11:21"},{"AST":{"nativeSrc":"1570:69:21","nodeType":"YulBlock","src":"1570:69:21","statements":[{"nativeSrc":"1588:37:21","nodeType":"YulAssignment","src":"1588:37:21","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:21","nodeType":"YulIdentifier","src":"1603:6:21"},{"kind":"number","nativeSrc":"1611:4:21","nodeType":"YulLiteral","src":"1611:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:21","nodeType":"YulIdentifier","src":"1599:3:21"},"nativeSrc":"1599:17:21","nodeType":"YulFunctionCall","src":"1599:17:21"},{"name":"length","nativeSrc":"1618:6:21","nodeType":"YulIdentifier","src":"1618:6:21"}],"functionName":{"name":"add","nativeSrc":"1595:3:21","nodeType":"YulIdentifier","src":"1595:3:21"},"nativeSrc":"1595:30:21","nodeType":"YulFunctionCall","src":"1595:30:21"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:21","nodeType":"YulIdentifier","src":"1588:3:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4782,"isOffset":false,"isSlot":false,"src":"1603:6:21","valueSize":1},{"declaration":4773,"isOffset":false,"isSlot":false,"src":"1618:6:21","valueSize":1},{"declaration":4789,"isOffset":false,"isSlot":false,"src":"1588:3:21","valueSize":1}],"flags":["memory-safe"],"id":4791,"nodeType":"InlineAssembly","src":"1545:94:21"},{"body":{"id":4806,"nodeType":"Block","src":"1665:234:21","statements":[{"expression":{"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:21","subExpression":{"id":4793,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"1683:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4795,"nodeType":"ExpressionStatement","src":"1683:5:21"},{"AST":{"nativeSrc":"1731:86:21","nodeType":"YulBlock","src":"1731:86:21","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:21","nodeType":"YulIdentifier","src":"1761:3:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:21","nodeType":"YulIdentifier","src":"1775:5:21"},{"kind":"number","nativeSrc":"1782:2:21","nodeType":"YulLiteral","src":"1782:2:21","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:21","nodeType":"YulIdentifier","src":"1771:3:21"},"nativeSrc":"1771:14:21","nodeType":"YulFunctionCall","src":"1771:14:21"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:21","nodeType":"YulIdentifier","src":"1787:10:21"}],"functionName":{"name":"byte","nativeSrc":"1766:4:21","nodeType":"YulIdentifier","src":"1766:4:21"},"nativeSrc":"1766:32:21","nodeType":"YulFunctionCall","src":"1766:32:21"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:21","nodeType":"YulIdentifier","src":"1753:7:21"},"nativeSrc":"1753:46:21","nodeType":"YulFunctionCall","src":"1753:46:21"},"nativeSrc":"1753:46:21","nodeType":"YulExpressionStatement","src":"1753:46:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":4712,"isOffset":false,"isSlot":false,"src":"1787:10:21","valueSize":1},{"declaration":4789,"isOffset":false,"isSlot":false,"src":"1761:3:21","valueSize":1},{"declaration":4767,"isOffset":false,"isSlot":false,"src":"1775:5:21","valueSize":1}],"flags":["memory-safe"],"id":4796,"nodeType":"InlineAssembly","src":"1706:111:21"},{"expression":{"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"1834:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4800,"nodeType":"ExpressionStatement","src":"1834:11:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"1867:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4805,"nodeType":"IfStatement","src":"1863:21:21","trueBody":{"id":4804,"nodeType":"Break","src":"1879:5:21"}}]},"condition":{"hexValue":"74727565","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4807,"nodeType":"WhileStatement","src":"1652:247:21"},{"expression":{"id":4808,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"1919:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4771,"id":4809,"nodeType":"Return","src":"1912:13:21"}]}]},"documentation":{"id":4765,"nodeType":"StructuredDocumentation","src":"1213:90:21","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4812,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:21","nodeType":"FunctionDefinition","parameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"value","nameLocation":"1334:5:21","nodeType":"VariableDeclaration","scope":4812,"src":"1326:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:21"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4812,"src":"1364:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4769,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:21"},"scope":6100,"src":"1308:634:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4837,"nodeType":"Block","src":"2118:92:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"2149:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:21","trueExpression":{"hexValue":"2d","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"2195:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4830,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"2180:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9666_$","typeString":"type(library SignedMath)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:21","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9665,"src":"2180:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4829,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"2171:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4820,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:21","typeDescriptions":{}}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:21","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:21","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4819,"id":4836,"nodeType":"Return","src":"2128:75:21"}]},"documentation":{"id":4813,"nodeType":"StructuredDocumentation","src":"1948:89:21","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4838,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:21","nodeType":"FunctionDefinition","parameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"value","nameLocation":"2073:5:21","nodeType":"VariableDeclaration","scope":4838,"src":"2066:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4814,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:21"},"returnParameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4838,"src":"2103:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4817,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:21"},"scope":6100,"src":"2042:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4857,"nodeType":"Block","src":"2389:100:21","statements":[{"id":4856,"nodeType":"UncheckedBlock","src":"2399:84:21","statements":[{"expression":{"arguments":[{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"2442:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"2461:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4848,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"2449:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7757_$","typeString":"type(library Math)"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:21","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":7700,"src":"2449:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4846,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4858,4941,4961],"referencedDeclaration":4941,"src":"2430:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4845,"id":4855,"nodeType":"Return","src":"2423:49:21"}]}]},"documentation":{"id":4839,"nodeType":"StructuredDocumentation","src":"2216:94:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4858,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:21","nodeType":"FunctionDefinition","parameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"value","nameLocation":"2344:5:21","nodeType":"VariableDeclaration","scope":4858,"src":"2336:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:21"},"returnParameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4858,"src":"2374:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4843,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:21"},"scope":6100,"src":"2315:174:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4940,"nodeType":"Block","src":"2702:435:21","statements":[{"assignments":[4869],"declarations":[{"constant":false,"id":4869,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:21","nodeType":"VariableDeclaration","scope":4940,"src":"2712:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4871,"initialValue":{"id":4870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"2733:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:21"},{"assignments":[4873],"declarations":[{"constant":false,"id":4873,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:21","nodeType":"VariableDeclaration","scope":4940,"src":"2748:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4872,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4882,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4877,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"2784:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4874,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:21"},{"expression":{"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4883,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"2805:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4885,"indexExpression":{"hexValue":"30","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4888,"nodeType":"ExpressionStatement","src":"2805:15:21"},{"expression":{"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4889,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"2830:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4891,"indexExpression":{"hexValue":"31","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4894,"nodeType":"ExpressionStatement","src":"2830:15:21"},{"body":{"id":4923,"nodeType":"Block","src":"2900:95:21","statements":[{"expression":{"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4909,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"2914:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4911,"indexExpression":{"id":4910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"2921:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4912,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"2926:10:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4916,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4913,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"2937:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4918,"nodeType":"ExpressionStatement","src":"2914:40:21"},{"expression":{"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4919,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"2968:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4922,"nodeType":"ExpressionStatement","src":"2968:16:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"2888:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4924,"initializationExpression":{"assignments":[4896],"declarations":[{"constant":false,"id":4896,"mutability":"mutable","name":"i","nameLocation":"2868:1:21","nodeType":"VariableDeclaration","scope":4924,"src":"2860:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4902,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4898,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"2876:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:21"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:21","subExpression":{"id":4906,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"2897:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4908,"nodeType":"ExpressionStatement","src":"2895:3:21"},"nodeType":"ForStatement","src":"2855:140:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"3008:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4934,"nodeType":"IfStatement","src":"3004:96:21","trueBody":{"id":4933,"nodeType":"Block","src":"3025:75:21","statements":[{"errorCall":{"arguments":[{"id":4929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"3075:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4930,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"3082:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4928,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"3046:28:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4932,"nodeType":"RevertStatement","src":"3039:50:21"}]}},{"expression":{"arguments":[{"id":4937,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"3123:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4935,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:21","typeDescriptions":{}}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4867,"id":4939,"nodeType":"Return","src":"3109:21:21"}]},"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"2495:112:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4941,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:21","nodeType":"FunctionDefinition","parameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"value","nameLocation":"2641:5:21","nodeType":"VariableDeclaration","scope":4941,"src":"2633:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4863,"mutability":"mutable","name":"length","nameLocation":"2656:6:21","nodeType":"VariableDeclaration","scope":4941,"src":"2648:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:21"},"returnParameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4941,"src":"2687:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4865,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:21"},"scope":6100,"src":"2612:525:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4960,"nodeType":"Block","src":"3369:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4954,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"3414:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4952,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:21","typeDescriptions":{}}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:21","typeDescriptions":{}}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4957,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"3422:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4949,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4858,4941,4961],"referencedDeclaration":4941,"src":"3386:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4948,"id":4959,"nodeType":"Return","src":"3379:58:21"}]},"documentation":{"id":4942,"nodeType":"StructuredDocumentation","src":"3143:148:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4961,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:21","nodeType":"FunctionDefinition","parameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"addr","nameLocation":"3325:4:21","nodeType":"VariableDeclaration","scope":4961,"src":"3317:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4943,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:21"},"returnParameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4961,"src":"3354:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4946,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:21"},"scope":6100,"src":"3296:148:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5025,"nodeType":"Block","src":"3701:642:21","statements":[{"assignments":[4970],"declarations":[{"constant":false,"id":4970,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:21","nodeType":"VariableDeclaration","scope":5025,"src":"3711:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4969,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4977,"initialValue":{"arguments":[{"arguments":[{"id":4974,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"3751:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4973,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4858,4941,4961],"referencedDeclaration":4961,"src":"3739:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4971,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:21","typeDescriptions":{}}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:21"},{"assignments":[4979],"declarations":[{"constant":false,"id":4979,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:21","nodeType":"VariableDeclaration","scope":5025,"src":"3842:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4980,"nodeType":"VariableDeclarationStatement","src":"3842:17:21"},{"AST":{"nativeSrc":"3894:78:21","nodeType":"YulBlock","src":"3894:78:21","statements":[{"nativeSrc":"3908:54:21","nodeType":"YulAssignment","src":"3908:54:21","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:21","nodeType":"YulLiteral","src":"3925:2:21","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:21","nodeType":"YulIdentifier","src":"3943:6:21"},{"kind":"number","nativeSrc":"3951:4:21","nodeType":"YulLiteral","src":"3951:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:21","nodeType":"YulIdentifier","src":"3939:3:21"},"nativeSrc":"3939:17:21","nodeType":"YulFunctionCall","src":"3939:17:21"},{"kind":"number","nativeSrc":"3958:2:21","nodeType":"YulLiteral","src":"3958:2:21","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:21","nodeType":"YulIdentifier","src":"3929:9:21"},"nativeSrc":"3929:32:21","nodeType":"YulFunctionCall","src":"3929:32:21"}],"functionName":{"name":"shr","nativeSrc":"3921:3:21","nodeType":"YulIdentifier","src":"3921:3:21"},"nativeSrc":"3921:41:21","nodeType":"YulFunctionCall","src":"3921:41:21"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:21","nodeType":"YulIdentifier","src":"3908:9:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4970,"isOffset":false,"isSlot":false,"src":"3943:6:21","valueSize":1},{"declaration":4979,"isOffset":false,"isSlot":false,"src":"3908:9:21","valueSize":1}],"flags":["memory-safe"],"id":4981,"nodeType":"InlineAssembly","src":"3869:103:21"},{"body":{"id":5018,"nodeType":"Block","src":"4015:291:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4992,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"4121:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4999,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"4150:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5001,"indexExpression":{"id":5000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"4157:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4997,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:21","typeDescriptions":{}}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"4117:150:21","trueBody":{"id":5012,"nodeType":"Block","src":"4167:100:21","statements":[{"expression":{"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5006,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"4235:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5008,"indexExpression":{"id":5007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"4242:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5011,"nodeType":"ExpressionStatement","src":"4235:17:21"}]}},{"expression":{"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5014,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"4280:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5017,"nodeType":"ExpressionStatement","src":"4280:15:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"4003:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5019,"initializationExpression":{"assignments":[4983],"declarations":[{"constant":false,"id":4983,"mutability":"mutable","name":"i","nameLocation":"3995:1:21","nodeType":"VariableDeclaration","scope":5019,"src":"3987:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4985,"initialValue":{"hexValue":"3431","id":4984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:21","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:21"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:21","subExpression":{"id":4989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"4012:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4991,"nodeType":"ExpressionStatement","src":"4010:3:21"},"nodeType":"ForStatement","src":"3982:324:21"},{"expression":{"arguments":[{"id":5022,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"4329:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5020,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:21","typeDescriptions":{}}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4968,"id":5024,"nodeType":"Return","src":"4315:21:21"}]},"documentation":{"id":4962,"nodeType":"StructuredDocumentation","src":"3450:165:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":5026,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:21","nodeType":"FunctionDefinition","parameters":{"id":4965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4964,"mutability":"mutable","name":"addr","nameLocation":"3657:4:21","nodeType":"VariableDeclaration","scope":5026,"src":"3649:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4963,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:21"},"returnParameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5026,"src":"3686:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4966,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:21"},"scope":6100,"src":"3620:723:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5062,"nodeType":"Block","src":"4498:104:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"4521:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5036,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:21","typeDescriptions":{}}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:21","memberName":"length","nodeType":"MemberAccess","src":"4515:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"4540:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5041,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:21","typeDescriptions":{}}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:21","memberName":"length","nodeType":"MemberAccess","src":"4534:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"4569:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5048,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:21","typeDescriptions":{}}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5047,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":5056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"4592:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5054,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:21","typeDescriptions":{}}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5053,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5035,"id":5061,"nodeType":"Return","src":"4508:87:21"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"4349:66:21","text":" @dev Returns true if the two strings are equal."},"id":5063,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:21","nodeType":"FunctionDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"a","nameLocation":"4449:1:21","nodeType":"VariableDeclaration","scope":5063,"src":"4435:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5028,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5031,"mutability":"mutable","name":"b","nameLocation":"4466:1:21","nodeType":"VariableDeclaration","scope":5063,"src":"4452:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5030,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:21"},"returnParameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5063,"src":"4492:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5033,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:21"},"scope":6100,"src":"4420:182:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5081,"nodeType":"Block","src":"4899:64:21","statements":[{"expression":{"arguments":[{"id":5072,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"4926:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5076,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"4942:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5074,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:21","typeDescriptions":{}}},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:21","memberName":"length","nodeType":"MemberAccess","src":"4936:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5071,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[5082,5113],"referencedDeclaration":5113,"src":"4916:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5070,"id":5080,"nodeType":"Return","src":"4909:47:21"}]},"documentation":{"id":5064,"nodeType":"StructuredDocumentation","src":"4608:214:21","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":5082,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:21","nodeType":"FunctionDefinition","parameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5066,"mutability":"mutable","name":"input","nameLocation":"4860:5:21","nodeType":"VariableDeclaration","scope":5082,"src":"4846:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5065,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:21"},"returnParameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5082,"src":"4890:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5068,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:21"},"scope":6100,"src":"4827:136:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5112,"nodeType":"Block","src":"5368:153:21","statements":[{"assignments":[5095,5097],"declarations":[{"constant":false,"id":5095,"mutability":"mutable","name":"success","nameLocation":"5384:7:21","nodeType":"VariableDeclaration","scope":5112,"src":"5379:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5094,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5097,"mutability":"mutable","name":"value","nameLocation":"5401:5:21","nodeType":"VariableDeclaration","scope":5112,"src":"5393:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5096,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5103,"initialValue":{"arguments":[{"id":5099,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"5423:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5100,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"5430:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5101,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"5437:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5098,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[5134,5171],"referencedDeclaration":5171,"src":"5410:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:21"},{"condition":{"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:21","subExpression":{"id":5104,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"5456:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5109,"nodeType":"IfStatement","src":"5451:41:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5106,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"5472:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5108,"nodeType":"RevertStatement","src":"5465:27:21"}},{"expression":{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"5509:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5093,"id":5111,"nodeType":"Return","src":"5502:12:21"}]},"documentation":{"id":5083,"nodeType":"StructuredDocumentation","src":"4969:294:21","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":5113,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:21","nodeType":"FunctionDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"input","nameLocation":"5301:5:21","nodeType":"VariableDeclaration","scope":5113,"src":"5287:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5084,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"begin","nameLocation":"5316:5:21","nodeType":"VariableDeclaration","scope":5113,"src":"5308:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5086,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5089,"mutability":"mutable","name":"end","nameLocation":"5331:3:21","nodeType":"VariableDeclaration","scope":5113,"src":"5323:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:21"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5113,"src":"5359:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:21"},"scope":6100,"src":"5268:253:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5133,"nodeType":"Block","src":"5842:83:21","statements":[{"expression":{"arguments":[{"id":5124,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"5888:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5128,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"5904:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5126,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:21","typeDescriptions":{}}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:21","memberName":"length","nodeType":"MemberAccess","src":"5898:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5123,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"5859:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5122,"id":5132,"nodeType":"Return","src":"5852:66:21"}]},"documentation":{"id":5114,"nodeType":"StructuredDocumentation","src":"5527:215:21","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5134,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:21","nodeType":"FunctionDefinition","parameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5116,"mutability":"mutable","name":"input","nameLocation":"5783:5:21","nodeType":"VariableDeclaration","scope":5134,"src":"5769:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5115,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:21"},"returnParameters":{"id":5122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5119,"mutability":"mutable","name":"success","nameLocation":"5818:7:21","nodeType":"VariableDeclaration","scope":5134,"src":"5813:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5118,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5121,"mutability":"mutable","name":"value","nameLocation":"5835:5:21","nodeType":"VariableDeclaration","scope":5134,"src":"5827:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5120,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:21"},"scope":6100,"src":"5747:178:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5170,"nodeType":"Block","src":"6327:144:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5148,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"6341:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5151,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"6353:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5149,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:21","typeDescriptions":{}}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:21","memberName":"length","nodeType":"MemberAccess","src":"6347:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"6370:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5156,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"6378:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5163,"nodeType":"IfStatement","src":"6337:63:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5147,"id":5162,"nodeType":"Return","src":"6383:17:21"}},{"expression":{"arguments":[{"id":5165,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"6446:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5166,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"6453:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5167,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"6460:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5164,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"6417:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5147,"id":5169,"nodeType":"Return","src":"6410:54:21"}]},"documentation":{"id":5135,"nodeType":"StructuredDocumentation","src":"5931:238:21","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5171,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:21","nodeType":"FunctionDefinition","parameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"input","nameLocation":"6219:5:21","nodeType":"VariableDeclaration","scope":5171,"src":"6205:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5136,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5139,"mutability":"mutable","name":"begin","nameLocation":"6242:5:21","nodeType":"VariableDeclaration","scope":5171,"src":"6234:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5138,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5141,"mutability":"mutable","name":"end","nameLocation":"6265:3:21","nodeType":"VariableDeclaration","scope":5171,"src":"6257:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:21"},"returnParameters":{"id":5147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"success","nameLocation":"6303:7:21","nodeType":"VariableDeclaration","scope":5171,"src":"6298:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5143,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5146,"mutability":"mutable","name":"value","nameLocation":"6320:5:21","nodeType":"VariableDeclaration","scope":5171,"src":"6312:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:21"},"scope":6100,"src":"6174:297:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5240,"nodeType":"Block","src":"6874:347:21","statements":[{"assignments":[5186],"declarations":[{"constant":false,"id":5186,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:21","nodeType":"VariableDeclaration","scope":5240,"src":"6884:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5185,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5191,"initialValue":{"arguments":[{"id":5189,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"6912:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5187,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:21","typeDescriptions":{}}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:21"},{"assignments":[5193],"declarations":[{"constant":false,"id":5193,"mutability":"mutable","name":"result","nameLocation":"6937:6:21","nodeType":"VariableDeclaration","scope":5240,"src":"6929:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5192,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5195,"initialValue":{"hexValue":"30","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:21"},{"body":{"id":5234,"nodeType":"Block","src":"6995:189:21","statements":[{"assignments":[5207],"declarations":[{"constant":false,"id":5207,"mutability":"mutable","name":"chr","nameLocation":"7015:3:21","nodeType":"VariableDeclaration","scope":5234,"src":"7009:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5206,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5217,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5212,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"7064:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5213,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"7072:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5211,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"7041:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5209,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:21","typeDescriptions":{}}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5208,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"7021:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5218,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"7094:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:21","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5225,"nodeType":"IfStatement","src":"7090:30:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5184,"id":5224,"nodeType":"Return","src":"7103:17:21"}},{"expression":{"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"7134:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5229,"nodeType":"ExpressionStatement","src":"7134:12:21"},{"expression":{"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"7160:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5231,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"7170:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5233,"nodeType":"ExpressionStatement","src":"7160:13:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5200,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"6981:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5201,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"6985:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5235,"initializationExpression":{"assignments":[5197],"declarations":[{"constant":false,"id":5197,"mutability":"mutable","name":"i","nameLocation":"6970:1:21","nodeType":"VariableDeclaration","scope":5235,"src":"6962:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5199,"initialValue":{"id":5198,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"6974:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:21","subExpression":{"id":5203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"6992:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5205,"nodeType":"ExpressionStatement","src":"6990:3:21"},"nodeType":"ForStatement","src":"6957:227:21"},{"expression":{"components":[{"hexValue":"74727565","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"7207:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5184,"id":5239,"nodeType":"Return","src":"7193:21:21"}]},"documentation":{"id":5172,"nodeType":"StructuredDocumentation","src":"6477:224:21","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5241,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:21","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5174,"mutability":"mutable","name":"input","nameLocation":"6767:5:21","nodeType":"VariableDeclaration","scope":5241,"src":"6753:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5173,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5176,"mutability":"mutable","name":"begin","nameLocation":"6790:5:21","nodeType":"VariableDeclaration","scope":5241,"src":"6782:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5178,"mutability":"mutable","name":"end","nameLocation":"6813:3:21","nodeType":"VariableDeclaration","scope":5241,"src":"6805:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5177,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:21"},"returnParameters":{"id":5184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"success","nameLocation":"6850:7:21","nodeType":"VariableDeclaration","scope":5241,"src":"6845:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5180,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5183,"mutability":"mutable","name":"value","nameLocation":"6867:5:21","nodeType":"VariableDeclaration","scope":5241,"src":"6859:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5182,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:21"},"scope":6100,"src":"6706:515:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5259,"nodeType":"Block","src":"7518:63:21","statements":[{"expression":{"arguments":[{"id":5250,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"7544:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5254,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"7560:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5252,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:21","typeDescriptions":{}}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:21","memberName":"length","nodeType":"MemberAccess","src":"7554:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5249,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[5260,5291],"referencedDeclaration":5291,"src":"7535:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5248,"id":5258,"nodeType":"Return","src":"7528:46:21"}]},"documentation":{"id":5242,"nodeType":"StructuredDocumentation","src":"7227:216:21","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5260,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:21","nodeType":"FunctionDefinition","parameters":{"id":5245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"input","nameLocation":"7480:5:21","nodeType":"VariableDeclaration","scope":5260,"src":"7466:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5243,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:21"},"returnParameters":{"id":5248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5260,"src":"7510:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5246,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:21"},"scope":6100,"src":"7448:133:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5290,"nodeType":"Block","src":"7986:151:21","statements":[{"assignments":[5273,5275],"declarations":[{"constant":false,"id":5273,"mutability":"mutable","name":"success","nameLocation":"8002:7:21","nodeType":"VariableDeclaration","scope":5290,"src":"7997:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5272,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5275,"mutability":"mutable","name":"value","nameLocation":"8018:5:21","nodeType":"VariableDeclaration","scope":5290,"src":"8011:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5274,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5281,"initialValue":{"arguments":[{"id":5277,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"8039:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5278,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"8046:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5279,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"8053:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5276,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[5312,5354],"referencedDeclaration":5354,"src":"8027:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:21"},{"condition":{"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:21","subExpression":{"id":5282,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"8072:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5287,"nodeType":"IfStatement","src":"8067:41:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5284,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"8088:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5286,"nodeType":"RevertStatement","src":"8081:27:21"}},{"expression":{"id":5288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"8125:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5271,"id":5289,"nodeType":"Return","src":"8118:12:21"}]},"documentation":{"id":5261,"nodeType":"StructuredDocumentation","src":"7587:296:21","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5291,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:21","nodeType":"FunctionDefinition","parameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"input","nameLocation":"7920:5:21","nodeType":"VariableDeclaration","scope":5291,"src":"7906:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5262,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5265,"mutability":"mutable","name":"begin","nameLocation":"7935:5:21","nodeType":"VariableDeclaration","scope":5291,"src":"7927:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5267,"mutability":"mutable","name":"end","nameLocation":"7950:3:21","nodeType":"VariableDeclaration","scope":5291,"src":"7942:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5266,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:21"},"returnParameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5291,"src":"7978:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5269,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:21"},"scope":6100,"src":"7888:249:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5311,"nodeType":"Block","src":"8528:82:21","statements":[{"expression":{"arguments":[{"id":5302,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"8573:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5306,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"8589:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5304,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:21","typeDescriptions":{}}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:21","memberName":"length","nodeType":"MemberAccess","src":"8583:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5301,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"8545:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5300,"id":5310,"nodeType":"Return","src":"8538:65:21"}]},"documentation":{"id":5292,"nodeType":"StructuredDocumentation","src":"8143:287:21","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5312,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:21","nodeType":"FunctionDefinition","parameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5294,"mutability":"mutable","name":"input","nameLocation":"8470:5:21","nodeType":"VariableDeclaration","scope":5312,"src":"8456:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5293,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:21"},"returnParameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5297,"mutability":"mutable","name":"success","nameLocation":"8505:7:21","nodeType":"VariableDeclaration","scope":5312,"src":"8500:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5296,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5299,"mutability":"mutable","name":"value","nameLocation":"8521:5:21","nodeType":"VariableDeclaration","scope":5312,"src":"8514:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5298,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:21"},"scope":6100,"src":"8435:175:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":5317,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:21","nodeType":"VariableDeclaration","scope":6100,"src":"8616:50:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5313,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":5353,"nodeType":"Block","src":"9132:143:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5331,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"9146:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5334,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"9158:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5332,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:21","typeDescriptions":{}}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:21","memberName":"length","nodeType":"MemberAccess","src":"9152:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"9175:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5339,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"9183:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5346,"nodeType":"IfStatement","src":"9142:63:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5330,"id":5345,"nodeType":"Return","src":"9188:17:21"}},{"expression":{"arguments":[{"id":5348,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"9250:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5349,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5322,"src":"9257:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5350,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"9264:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5347,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"9222:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5330,"id":5352,"nodeType":"Return","src":"9215:53:21"}]},"documentation":{"id":5318,"nodeType":"StructuredDocumentation","src":"8673:303:21","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5354,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:21","nodeType":"FunctionDefinition","parameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5320,"mutability":"mutable","name":"input","nameLocation":"9025:5:21","nodeType":"VariableDeclaration","scope":5354,"src":"9011:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5319,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5322,"mutability":"mutable","name":"begin","nameLocation":"9048:5:21","nodeType":"VariableDeclaration","scope":5354,"src":"9040:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5321,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5324,"mutability":"mutable","name":"end","nameLocation":"9071:3:21","nodeType":"VariableDeclaration","scope":5354,"src":"9063:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5323,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:21"},"returnParameters":{"id":5330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5327,"mutability":"mutable","name":"success","nameLocation":"9109:7:21","nodeType":"VariableDeclaration","scope":5354,"src":"9104:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5326,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5329,"mutability":"mutable","name":"value","nameLocation":"9125:5:21","nodeType":"VariableDeclaration","scope":5354,"src":"9118:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5328,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:21"},"scope":6100,"src":"8981:294:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5474,"nodeType":"Block","src":"9675:812:21","statements":[{"assignments":[5369],"declarations":[{"constant":false,"id":5369,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:21","nodeType":"VariableDeclaration","scope":5474,"src":"9685:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5368,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5374,"initialValue":{"arguments":[{"id":5372,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"9713:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5370,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:21","typeDescriptions":{}}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:21"},{"assignments":[5376],"declarations":[{"constant":false,"id":5376,"mutability":"mutable","name":"sign","nameLocation":"9783:4:21","nodeType":"VariableDeclaration","scope":5474,"src":"9776:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5375,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5392,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5377,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"9790:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5378,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"9799:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":5387,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"9847:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5388,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"9855:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5386,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"9824:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5384,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:21","typeDescriptions":{}}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:21","trueExpression":{"arguments":[{"hexValue":"30","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5380,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:21","typeDescriptions":{}}},"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:21"},{"assignments":[5394],"declarations":[{"constant":false,"id":5394,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:21","nodeType":"VariableDeclaration","scope":5474,"src":"9943:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5393,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5401,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"9963:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5396,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:21","typeDescriptions":{}}},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:21"},{"assignments":[5403],"declarations":[{"constant":false,"id":5403,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:21","nodeType":"VariableDeclaration","scope":5474,"src":"9992:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5402,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5410,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5404,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"10012:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5405,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:21","typeDescriptions":{}}},"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:21"},{"assignments":[5412],"declarations":[{"constant":false,"id":5412,"mutability":"mutable","name":"offset","nameLocation":"10049:6:21","nodeType":"VariableDeclaration","scope":5474,"src":"10041:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5411,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5419,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5413,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"10059:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":5414,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"10075:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"10058:37:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:21"},{"assignments":[5421,5423],"declarations":[{"constant":false,"id":5421,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:21","nodeType":"VariableDeclaration","scope":5474,"src":"10109:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5420,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5423,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:21","nodeType":"VariableDeclaration","scope":5474,"src":"10126:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5422,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5431,"initialValue":{"arguments":[{"id":5425,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"10159:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"10166:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5427,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"10174:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5429,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"10182:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5424,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[5134,5171],"referencedDeclaration":5171,"src":"10146:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5432,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"10201:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5433,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"10215:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5434,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"10226:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5452,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"10343:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5453,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"10357:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5455,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"10373:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5456,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"10385:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5367,"id":5471,"nodeType":"Return","src":"10463:17:21"},"id":5472,"nodeType":"IfStatement","src":"10339:141:21","trueBody":{"id":5467,"nodeType":"Block","src":"10401:56:21","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5461,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:21","memberName":"min","nodeType":"MemberAccess","src":"10429:16:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5367,"id":5466,"nodeType":"Return","src":"10415:31:21"}]}},"id":5473,"nodeType":"IfStatement","src":"10197:283:21","trueBody":{"id":5451,"nodeType":"Block","src":"10242:91:21","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":5438,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"10270:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5446,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"10312:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5444,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:21","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:21","trueExpression":{"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:21","subExpression":{"arguments":[{"id":5441,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"10293:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5439,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:21","typeDescriptions":{}}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5367,"id":5450,"nodeType":"Return","src":"10256:66:21"}]}}]},"documentation":{"id":5355,"nodeType":"StructuredDocumentation","src":"9281:223:21","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5475,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:21","nodeType":"FunctionDefinition","parameters":{"id":5362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5357,"mutability":"mutable","name":"input","nameLocation":"9569:5:21","nodeType":"VariableDeclaration","scope":5475,"src":"9555:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5356,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5359,"mutability":"mutable","name":"begin","nameLocation":"9592:5:21","nodeType":"VariableDeclaration","scope":5475,"src":"9584:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5361,"mutability":"mutable","name":"end","nameLocation":"9615:3:21","nodeType":"VariableDeclaration","scope":5475,"src":"9607:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5360,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:21"},"returnParameters":{"id":5367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"success","nameLocation":"9652:7:21","nodeType":"VariableDeclaration","scope":5475,"src":"9647:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5363,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5366,"mutability":"mutable","name":"value","nameLocation":"9668:5:21","nodeType":"VariableDeclaration","scope":5475,"src":"9661:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5365,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:21"},"scope":6100,"src":"9509:978:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5493,"nodeType":"Block","src":"10832:67:21","statements":[{"expression":{"arguments":[{"id":5484,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"10862:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5488,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"10878:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5486,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:21","typeDescriptions":{}}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:21","memberName":"length","nodeType":"MemberAccess","src":"10872:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5483,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[5494,5525],"referencedDeclaration":5525,"src":"10849:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5482,"id":5492,"nodeType":"Return","src":"10842:50:21"}]},"documentation":{"id":5476,"nodeType":"StructuredDocumentation","src":"10493:259:21","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5494,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:21","nodeType":"FunctionDefinition","parameters":{"id":5479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5478,"mutability":"mutable","name":"input","nameLocation":"10793:5:21","nodeType":"VariableDeclaration","scope":5494,"src":"10779:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5477,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:21"},"returnParameters":{"id":5482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5494,"src":"10823:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5480,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:21"},"scope":6100,"src":"10757:142:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5524,"nodeType":"Block","src":"11320:156:21","statements":[{"assignments":[5507,5509],"declarations":[{"constant":false,"id":5507,"mutability":"mutable","name":"success","nameLocation":"11336:7:21","nodeType":"VariableDeclaration","scope":5524,"src":"11331:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5506,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5509,"mutability":"mutable","name":"value","nameLocation":"11353:5:21","nodeType":"VariableDeclaration","scope":5524,"src":"11345:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5508,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5515,"initialValue":{"arguments":[{"id":5511,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"11378:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5512,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"11385:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5513,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"11392:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5510,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[5546,5583],"referencedDeclaration":5583,"src":"11362:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:21"},{"condition":{"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:21","subExpression":{"id":5516,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"11411:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5521,"nodeType":"IfStatement","src":"11406:41:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5518,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"11427:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5520,"nodeType":"RevertStatement","src":"11420:27:21"}},{"expression":{"id":5522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"11464:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5505,"id":5523,"nodeType":"Return","src":"11457:12:21"}]},"documentation":{"id":5495,"nodeType":"StructuredDocumentation","src":"10905:307:21","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5525,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:21","nodeType":"FunctionDefinition","parameters":{"id":5502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5497,"mutability":"mutable","name":"input","nameLocation":"11253:5:21","nodeType":"VariableDeclaration","scope":5525,"src":"11239:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5496,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5499,"mutability":"mutable","name":"begin","nameLocation":"11268:5:21","nodeType":"VariableDeclaration","scope":5525,"src":"11260:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5501,"mutability":"mutable","name":"end","nameLocation":"11283:3:21","nodeType":"VariableDeclaration","scope":5525,"src":"11275:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5500,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:21"},"returnParameters":{"id":5505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5525,"src":"11311:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:21"},"scope":6100,"src":"11217:259:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5545,"nodeType":"Block","src":"11803:86:21","statements":[{"expression":{"arguments":[{"id":5536,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"11852:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5540,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"11868:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5538,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:21","typeDescriptions":{}}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:21","memberName":"length","nodeType":"MemberAccess","src":"11862:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5535,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"11820:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5534,"id":5544,"nodeType":"Return","src":"11813:69:21"}]},"documentation":{"id":5526,"nodeType":"StructuredDocumentation","src":"11482:218:21","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5546,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:21","nodeType":"FunctionDefinition","parameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5528,"mutability":"mutable","name":"input","nameLocation":"11744:5:21","nodeType":"VariableDeclaration","scope":5546,"src":"11730:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5527,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:21"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"success","nameLocation":"11779:7:21","nodeType":"VariableDeclaration","scope":5546,"src":"11774:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5530,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5533,"mutability":"mutable","name":"value","nameLocation":"11796:5:21","nodeType":"VariableDeclaration","scope":5546,"src":"11788:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5532,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:21"},"scope":6100,"src":"11705:184:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5582,"nodeType":"Block","src":"12297:147:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5560,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"12311:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5563,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"12323:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5561,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:21","typeDescriptions":{}}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:21","memberName":"length","nodeType":"MemberAccess","src":"12317:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5567,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"12340:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5568,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"12348:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5575,"nodeType":"IfStatement","src":"12307:63:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5559,"id":5574,"nodeType":"Return","src":"12353:17:21"}},{"expression":{"arguments":[{"id":5577,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"12419:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5578,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"12426:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5579,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"12433:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5576,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"12387:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5559,"id":5581,"nodeType":"Return","src":"12380:57:21"}]},"documentation":{"id":5547,"nodeType":"StructuredDocumentation","src":"11895:241:21","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5583,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:21","nodeType":"FunctionDefinition","parameters":{"id":5554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"input","nameLocation":"12189:5:21","nodeType":"VariableDeclaration","scope":5583,"src":"12175:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5548,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5551,"mutability":"mutable","name":"begin","nameLocation":"12212:5:21","nodeType":"VariableDeclaration","scope":5583,"src":"12204:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5550,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5553,"mutability":"mutable","name":"end","nameLocation":"12235:3:21","nodeType":"VariableDeclaration","scope":5583,"src":"12227:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5552,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:21"},"returnParameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"success","nameLocation":"12273:7:21","nodeType":"VariableDeclaration","scope":5583,"src":"12268:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5555,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5558,"mutability":"mutable","name":"value","nameLocation":"12290:5:21","nodeType":"VariableDeclaration","scope":5583,"src":"12282:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:21"},"scope":6100,"src":"12141:303:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5685,"nodeType":"Block","src":"12853:881:21","statements":[{"assignments":[5598],"declarations":[{"constant":false,"id":5598,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:21","nodeType":"VariableDeclaration","scope":5685,"src":"12863:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5597,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5603,"initialValue":{"arguments":[{"id":5601,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"12891:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5599,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:21","typeDescriptions":{}}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:21"},{"assignments":[5605],"declarations":[{"constant":false,"id":5605,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:21","nodeType":"VariableDeclaration","scope":5685,"src":"12945:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5604,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5625,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"12963:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5607,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"12969:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5615,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"13013:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5616,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"13021:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5614,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"12990:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5612,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:21","typeDescriptions":{}}},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5619,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:21","typeDescriptions":{}}},"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:21"},{"assignments":[5627],"declarations":[{"constant":false,"id":5627,"mutability":"mutable","name":"offset","nameLocation":"13133:6:21","nodeType":"VariableDeclaration","scope":5685,"src":"13125:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5633,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5628,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"13142:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"13142:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:21"},{"assignments":[5635],"declarations":[{"constant":false,"id":5635,"mutability":"mutable","name":"result","nameLocation":"13183:6:21","nodeType":"VariableDeclaration","scope":5685,"src":"13175:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5634,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5637,"initialValue":{"hexValue":"30","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:21"},{"body":{"id":5679,"nodeType":"Block","src":"13250:447:21","statements":[{"assignments":[5651],"declarations":[{"constant":false,"id":5651,"mutability":"mutable","name":"chr","nameLocation":"13270:3:21","nodeType":"VariableDeclaration","scope":5679,"src":"13264:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5650,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5661,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5656,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"13319:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5657,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"13327:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5655,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"13296:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5653,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:21","typeDescriptions":{}}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5652,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"13276:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5662,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"13349:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5669,"nodeType":"IfStatement","src":"13345:31:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5596,"id":5668,"nodeType":"Return","src":"13359:17:21"}},{"expression":{"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"13390:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5673,"nodeType":"ExpressionStatement","src":"13390:12:21"},{"id":5678,"nodeType":"UncheckedBlock","src":"13416:271:21","statements":[{"expression":{"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"13659:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5675,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"13669:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5677,"nodeType":"ExpressionStatement","src":"13659:13:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5644,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"13236:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5645,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"13240:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5680,"initializationExpression":{"assignments":[5639],"declarations":[{"constant":false,"id":5639,"mutability":"mutable","name":"i","nameLocation":"13216:1:21","nodeType":"VariableDeclaration","scope":5680,"src":"13208:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5638,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5643,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5640,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"13220:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5641,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"13228:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:21","subExpression":{"id":5647,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"13247:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5649,"nodeType":"ExpressionStatement","src":"13245:3:21"},"nodeType":"ForStatement","src":"13203:494:21"},{"expression":{"components":[{"hexValue":"74727565","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"13720:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5596,"id":5684,"nodeType":"Return","src":"13706:21:21"}]},"documentation":{"id":5584,"nodeType":"StructuredDocumentation","src":"12450:227:21","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5686,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:21","nodeType":"FunctionDefinition","parameters":{"id":5591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5586,"mutability":"mutable","name":"input","nameLocation":"12746:5:21","nodeType":"VariableDeclaration","scope":5686,"src":"12732:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5585,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5588,"mutability":"mutable","name":"begin","nameLocation":"12769:5:21","nodeType":"VariableDeclaration","scope":5686,"src":"12761:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5587,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5590,"mutability":"mutable","name":"end","nameLocation":"12792:3:21","nodeType":"VariableDeclaration","scope":5686,"src":"12784:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5589,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:21"},"returnParameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5593,"mutability":"mutable","name":"success","nameLocation":"12829:7:21","nodeType":"VariableDeclaration","scope":5686,"src":"12824:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5592,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5595,"mutability":"mutable","name":"value","nameLocation":"12846:5:21","nodeType":"VariableDeclaration","scope":5686,"src":"12838:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5594,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:21"},"scope":6100,"src":"12682:1052:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5704,"nodeType":"Block","src":"14032:67:21","statements":[{"expression":{"arguments":[{"id":5695,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"14062:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5699,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"14078:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5697,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:21","typeDescriptions":{}}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:21","memberName":"length","nodeType":"MemberAccess","src":"14072:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5694,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[5705,5736],"referencedDeclaration":5736,"src":"14049:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5693,"id":5703,"nodeType":"Return","src":"14042:50:21"}]},"documentation":{"id":5687,"nodeType":"StructuredDocumentation","src":"13740:212:21","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5705,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:21","nodeType":"FunctionDefinition","parameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"input","nameLocation":"13993:5:21","nodeType":"VariableDeclaration","scope":5705,"src":"13979:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5688,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:21"},"returnParameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5705,"src":"14023:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5691,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:21"},"scope":6100,"src":"13957:142:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5735,"nodeType":"Block","src":"14472:165:21","statements":[{"assignments":[5718,5720],"declarations":[{"constant":false,"id":5718,"mutability":"mutable","name":"success","nameLocation":"14488:7:21","nodeType":"VariableDeclaration","scope":5735,"src":"14483:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5717,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5720,"mutability":"mutable","name":"value","nameLocation":"14505:5:21","nodeType":"VariableDeclaration","scope":5735,"src":"14497:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5719,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5726,"initialValue":{"arguments":[{"id":5722,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"14530:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5723,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"14537:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5724,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"14544:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5721,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5757,5861],"referencedDeclaration":5861,"src":"14514:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:21"},{"condition":{"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:21","subExpression":{"id":5727,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"14563:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5732,"nodeType":"IfStatement","src":"14558:50:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5729,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"14579:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5731,"nodeType":"RevertStatement","src":"14572:36:21"}},{"expression":{"id":5733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5720,"src":"14625:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5716,"id":5734,"nodeType":"Return","src":"14618:12:21"}]},"documentation":{"id":5706,"nodeType":"StructuredDocumentation","src":"14105:259:21","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5736,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:21","nodeType":"FunctionDefinition","parameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"input","nameLocation":"14405:5:21","nodeType":"VariableDeclaration","scope":5736,"src":"14391:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5707,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5710,"mutability":"mutable","name":"begin","nameLocation":"14420:5:21","nodeType":"VariableDeclaration","scope":5736,"src":"14412:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5712,"mutability":"mutable","name":"end","nameLocation":"14435:3:21","nodeType":"VariableDeclaration","scope":5736,"src":"14427:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5711,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:21"},"returnParameters":{"id":5716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5736,"src":"14463:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5714,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:21"},"scope":6100,"src":"14369:268:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5756,"nodeType":"Block","src":"14944:70:21","statements":[{"expression":{"arguments":[{"id":5747,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"14977:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"14993:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5749,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:21","typeDescriptions":{}}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:21","memberName":"length","nodeType":"MemberAccess","src":"14987:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5757,5861],"referencedDeclaration":5861,"src":"14961:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5745,"id":5755,"nodeType":"Return","src":"14954:53:21"}]},"documentation":{"id":5737,"nodeType":"StructuredDocumentation","src":"14643:198:21","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":5757,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:21","nodeType":"FunctionDefinition","parameters":{"id":5740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"input","nameLocation":"14885:5:21","nodeType":"VariableDeclaration","scope":5757,"src":"14871:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5738,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:21"},"returnParameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"success","nameLocation":"14920:7:21","nodeType":"VariableDeclaration","scope":5757,"src":"14915:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5741,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5744,"mutability":"mutable","name":"value","nameLocation":"14937:5:21","nodeType":"VariableDeclaration","scope":5757,"src":"14929:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5743,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:21"},"scope":6100,"src":"14846:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5860,"nodeType":"Block","src":"15407:733:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5771,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"15421:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5774,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"15433:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5772,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:21","typeDescriptions":{}}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:21","memberName":"length","nodeType":"MemberAccess","src":"15427:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5778,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"15450:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5779,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"15458:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5789,"nodeType":"IfStatement","src":"15417:72:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5783,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:21","typeDescriptions":{}}},"id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5770,"id":5788,"nodeType":"Return","src":"15463:26:21"}},{"assignments":[5791],"declarations":[{"constant":false,"id":5791,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:21","nodeType":"VariableDeclaration","scope":5860,"src":"15500:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5790,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5814,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5792,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"15518:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5793,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"15524:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":5803,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"15574:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5801,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:21","typeDescriptions":{}}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5805,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"15582:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5800,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"15545:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5798,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:21","typeDescriptions":{}}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5808,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:21","typeDescriptions":{}}},"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:21"},{"assignments":[5816],"declarations":[{"constant":false,"id":5816,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:21","nodeType":"VariableDeclaration","scope":5860,"src":"15686:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5824,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5818,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"15716:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"15716:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5825,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"15803:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5826,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"15809:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5828,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"15818:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5858,"nodeType":"Block","src":"16083:51:21","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5852,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:21","typeDescriptions":{}}},"id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5770,"id":5857,"nodeType":"Return","src":"16097:26:21"}]},"id":5859,"nodeType":"IfStatement","src":"15799:335:21","trueBody":{"id":5850,"nodeType":"Block","src":"15834:243:21","statements":[{"assignments":[5831,5833],"declarations":[{"constant":false,"id":5831,"mutability":"mutable","name":"s","nameLocation":"15955:1:21","nodeType":"VariableDeclaration","scope":5850,"src":"15950:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5830,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5833,"mutability":"mutable","name":"v","nameLocation":"15966:1:21","nodeType":"VariableDeclaration","scope":5850,"src":"15958:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5832,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5839,"initialValue":{"arguments":[{"id":5835,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"16003:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5836,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"16010:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5837,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"16017:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5834,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"15971:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:21"},{"expression":{"components":[{"id":5840,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"16043:1:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":5845,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"16062:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5843,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:21","typeDescriptions":{}}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5841,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:21","typeDescriptions":{}}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5770,"id":5849,"nodeType":"Return","src":"16035:31:21"}]}}]},"documentation":{"id":5758,"nodeType":"StructuredDocumentation","src":"15020:226:21","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":5861,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:21","nodeType":"FunctionDefinition","parameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"input","nameLocation":"15299:5:21","nodeType":"VariableDeclaration","scope":5861,"src":"15285:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5759,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5762,"mutability":"mutable","name":"begin","nameLocation":"15322:5:21","nodeType":"VariableDeclaration","scope":5861,"src":"15314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5761,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5764,"mutability":"mutable","name":"end","nameLocation":"15345:3:21","nodeType":"VariableDeclaration","scope":5861,"src":"15337:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5763,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:21"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"success","nameLocation":"15383:7:21","nodeType":"VariableDeclaration","scope":5861,"src":"15378:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5766,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5769,"mutability":"mutable","name":"value","nameLocation":"15400:5:21","nodeType":"VariableDeclaration","scope":5861,"src":"15392:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5768,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:21"},"scope":6100,"src":"15251:889:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5920,"nodeType":"Block","src":"16209:461:21","statements":[{"assignments":[5869],"declarations":[{"constant":false,"id":5869,"mutability":"mutable","name":"value","nameLocation":"16225:5:21","nodeType":"VariableDeclaration","scope":5920,"src":"16219:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5868,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5874,"initialValue":{"arguments":[{"id":5872,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"16239:3:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5870,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:21","typeDescriptions":{}}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:21"},{"id":5917,"nodeType":"UncheckedBlock","src":"16403:238:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16431:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":5876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:21","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16445:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:21","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16491:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16505:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:21","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16552:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":5898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16566:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:21","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":5910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5909,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5908,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:21","memberName":"max","nodeType":"MemberAccess","src":"16615:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5867,"id":5913,"nodeType":"Return","src":"16608:22:21"},"id":5914,"nodeType":"IfStatement","src":"16548:82:21","trueBody":{"expression":{"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16578:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":5905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:21","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5907,"nodeType":"ExpressionStatement","src":"16578:11:21"}},"id":5915,"nodeType":"IfStatement","src":"16487:143:21","trueBody":{"expression":{"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16518:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:21","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5896,"nodeType":"ExpressionStatement","src":"16518:11:21"}},"id":5916,"nodeType":"IfStatement","src":"16427:203:21","trueBody":{"expression":{"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16457:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5885,"nodeType":"ExpressionStatement","src":"16457:11:21"}}]},{"expression":{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"16658:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5867,"id":5919,"nodeType":"Return","src":"16651:12:21"}]},"id":5921,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:21","nodeType":"FunctionDefinition","parameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"chr","nameLocation":"16175:3:21","nodeType":"VariableDeclaration","scope":5921,"src":"16168:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5862,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:21"},"returnParameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5921,"src":"16202:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5865,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:21"},"scope":6100,"src":"16146:524:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6086,"nodeType":"Block","src":"17336:1331:21","statements":[{"assignments":[5930],"declarations":[{"constant":false,"id":5930,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:21","nodeType":"VariableDeclaration","scope":6086,"src":"17346:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5929,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5935,"initialValue":{"arguments":[{"id":5933,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"17374:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5931,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:21","typeDescriptions":{}}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:21"},{"assignments":[5937],"declarations":[{"constant":false,"id":5937,"mutability":"mutable","name":"output","nameLocation":"17403:6:21","nodeType":"VariableDeclaration","scope":6086,"src":"17390:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5936,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5945,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5941,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"17426:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:21","memberName":"length","nodeType":"MemberAccess","src":"17426:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5938,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:21"},{"assignments":[5947],"declarations":[{"constant":false,"id":5947,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:21","nodeType":"VariableDeclaration","scope":6086,"src":"17473:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5946,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5949,"initialValue":{"hexValue":"30","id":5948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:21"},{"body":{"id":6078,"nodeType":"Block","src":"17548:854:21","statements":[{"assignments":[5961],"declarations":[{"constant":false,"id":5961,"mutability":"mutable","name":"char","nameLocation":"17569:4:21","nodeType":"VariableDeclaration","scope":6078,"src":"17562:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5960,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5969,"initialValue":{"arguments":[{"arguments":[{"id":5965,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"17606:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"17614:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5964,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"17583:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5962,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:21","typeDescriptions":{}}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:21"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5970,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"17637:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":5974,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"17672:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5972,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:21","typeDescriptions":{}}},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6076,"nodeType":"Block","src":"18330:62:21","statements":[{"expression":{"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6069,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"18348:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6072,"indexExpression":{"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:21","subExpression":{"id":6070,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"18355:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6073,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"18373:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6075,"nodeType":"ExpressionStatement","src":"18348:29:21"}]},"id":6077,"nodeType":"IfStatement","src":"17631:761:21","trueBody":{"id":6068,"nodeType":"Block","src":"17687:637:21","statements":[{"expression":{"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5983,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"17705:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5986,"indexExpression":{"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:21","subExpression":{"id":5984,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"17712:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5989,"nodeType":"ExpressionStatement","src":"17705:29:21"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5990,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"17756:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6000,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"17825:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:21","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6010,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"17894:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6020,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"17963:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":6021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:21","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6030,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"18032:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:21","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6040,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"18101:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:21","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6050,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"18171:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":6051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:21","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6061,"nodeType":"IfStatement","src":"18167:143:21","trueBody":{"id":6060,"nodeType":"Block","src":"18185:125:21","statements":[{"expression":{"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6053,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"18263:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6056,"indexExpression":{"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:21","subExpression":{"id":6054,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"18270:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6059,"nodeType":"ExpressionStatement","src":"18263:28:21"}]}},"id":6062,"nodeType":"IfStatement","src":"18097:213:21","trueBody":{"expression":{"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6043,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"18115:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6046,"indexExpression":{"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:21","subExpression":{"id":6044,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"18122:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6049,"nodeType":"ExpressionStatement","src":"18115:29:21"}},"id":6063,"nodeType":"IfStatement","src":"18028:282:21","trueBody":{"expression":{"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6033,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"18046:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6036,"indexExpression":{"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:21","subExpression":{"id":6034,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"18053:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6039,"nodeType":"ExpressionStatement","src":"18046:28:21"}},"id":6064,"nodeType":"IfStatement","src":"17959:351:21","trueBody":{"expression":{"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6023,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"17977:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6026,"indexExpression":{"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:21","subExpression":{"id":6024,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"17984:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6029,"nodeType":"ExpressionStatement","src":"17977:28:21"}},"id":6065,"nodeType":"IfStatement","src":"17890:420:21","trueBody":{"expression":{"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6013,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"17908:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6016,"indexExpression":{"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:21","subExpression":{"id":6014,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"17915:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6019,"nodeType":"ExpressionStatement","src":"17908:28:21"}},"id":6066,"nodeType":"IfStatement","src":"17821:489:21","trueBody":{"expression":{"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6003,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"17839:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6006,"indexExpression":{"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:21","subExpression":{"id":6004,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"17846:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":6007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6009,"nodeType":"ExpressionStatement","src":"17839:28:21"}},"id":6067,"nodeType":"IfStatement","src":"17752:558:21","trueBody":{"expression":{"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5993,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"17770:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5996,"indexExpression":{"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:21","subExpression":{"id":5994,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"17777:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5999,"nodeType":"ExpressionStatement","src":"17770:28:21"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"17524:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5954,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"17528:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:21","memberName":"length","nodeType":"MemberAccess","src":"17528:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6079,"initializationExpression":{"assignments":[5951],"declarations":[{"constant":false,"id":5951,"mutability":"mutable","name":"i","nameLocation":"17521:1:21","nodeType":"VariableDeclaration","scope":6079,"src":"17513:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5952,"nodeType":"VariableDeclarationStatement","src":"17513:9:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:21","subExpression":{"id":5957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"17545:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5959,"nodeType":"ExpressionStatement","src":"17543:3:21"},"nodeType":"ForStatement","src":"17508:894:21"},{"AST":{"nativeSrc":"18500:129:21","nodeType":"YulBlock","src":"18500:129:21","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:21","nodeType":"YulIdentifier","src":"18521:6:21"},{"name":"outputLength","nativeSrc":"18529:12:21","nodeType":"YulIdentifier","src":"18529:12:21"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:21","nodeType":"YulIdentifier","src":"18514:6:21"},"nativeSrc":"18514:28:21","nodeType":"YulFunctionCall","src":"18514:28:21"},"nativeSrc":"18514:28:21","nodeType":"YulExpressionStatement","src":"18514:28:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:21","nodeType":"YulLiteral","src":"18562:4:21","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:21","nodeType":"YulIdentifier","src":"18572:6:21"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:21","nodeType":"YulLiteral","src":"18584:1:21","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:21","nodeType":"YulLiteral","src":"18591:1:21","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:21","nodeType":"YulIdentifier","src":"18598:12:21"},{"kind":"number","nativeSrc":"18612:2:21","nodeType":"YulLiteral","src":"18612:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:21","nodeType":"YulIdentifier","src":"18594:3:21"},"nativeSrc":"18594:21:21","nodeType":"YulFunctionCall","src":"18594:21:21"}],"functionName":{"name":"shr","nativeSrc":"18587:3:21","nodeType":"YulIdentifier","src":"18587:3:21"},"nativeSrc":"18587:29:21","nodeType":"YulFunctionCall","src":"18587:29:21"}],"functionName":{"name":"shl","nativeSrc":"18580:3:21","nodeType":"YulIdentifier","src":"18580:3:21"},"nativeSrc":"18580:37:21","nodeType":"YulFunctionCall","src":"18580:37:21"}],"functionName":{"name":"add","nativeSrc":"18568:3:21","nodeType":"YulIdentifier","src":"18568:3:21"},"nativeSrc":"18568:50:21","nodeType":"YulFunctionCall","src":"18568:50:21"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:21","nodeType":"YulIdentifier","src":"18555:6:21"},"nativeSrc":"18555:64:21","nodeType":"YulFunctionCall","src":"18555:64:21"},"nativeSrc":"18555:64:21","nodeType":"YulExpressionStatement","src":"18555:64:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":5937,"isOffset":false,"isSlot":false,"src":"18521:6:21","valueSize":1},{"declaration":5937,"isOffset":false,"isSlot":false,"src":"18572:6:21","valueSize":1},{"declaration":5947,"isOffset":false,"isSlot":false,"src":"18529:12:21","valueSize":1},{"declaration":5947,"isOffset":false,"isSlot":false,"src":"18598:12:21","valueSize":1}],"flags":["memory-safe"],"id":6080,"nodeType":"InlineAssembly","src":"18475:154:21"},{"expression":{"arguments":[{"id":6083,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"18653:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6081,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:21","typeDescriptions":{}}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5928,"id":6085,"nodeType":"Return","src":"18639:21:21"}]},"documentation":{"id":5922,"nodeType":"StructuredDocumentation","src":"16676:576:21","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":6087,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:21","nodeType":"FunctionDefinition","parameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5924,"mutability":"mutable","name":"input","nameLocation":"17291:5:21","nodeType":"VariableDeclaration","scope":6087,"src":"17277:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5923,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:21"},"returnParameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6087,"src":"17321:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5926,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:21"},"scope":6100,"src":"17257:1410:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6098,"nodeType":"Block","src":"19052:225:21","statements":[{"AST":{"nativeSrc":"19201:70:21","nodeType":"YulBlock","src":"19201:70:21","statements":[{"nativeSrc":"19215:46:21","nodeType":"YulAssignment","src":"19215:46:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:21","nodeType":"YulIdentifier","src":"19238:6:21"},{"kind":"number","nativeSrc":"19246:4:21","nodeType":"YulLiteral","src":"19246:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:21","nodeType":"YulIdentifier","src":"19234:3:21"},"nativeSrc":"19234:17:21","nodeType":"YulFunctionCall","src":"19234:17:21"},{"name":"offset","nativeSrc":"19253:6:21","nodeType":"YulIdentifier","src":"19253:6:21"}],"functionName":{"name":"add","nativeSrc":"19230:3:21","nodeType":"YulIdentifier","src":"19230:3:21"},"nativeSrc":"19230:30:21","nodeType":"YulFunctionCall","src":"19230:30:21"}],"functionName":{"name":"mload","nativeSrc":"19224:5:21","nodeType":"YulIdentifier","src":"19224:5:21"},"nativeSrc":"19224:37:21","nodeType":"YulFunctionCall","src":"19224:37:21"},"variableNames":[{"name":"value","nativeSrc":"19215:5:21","nodeType":"YulIdentifier","src":"19215:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6090,"isOffset":false,"isSlot":false,"src":"19238:6:21","valueSize":1},{"declaration":6092,"isOffset":false,"isSlot":false,"src":"19253:6:21","valueSize":1},{"declaration":6095,"isOffset":false,"isSlot":false,"src":"19215:5:21","valueSize":1}],"flags":["memory-safe"],"id":6097,"nodeType":"InlineAssembly","src":"19176:95:21"}]},"documentation":{"id":6088,"nodeType":"StructuredDocumentation","src":"18673:268:21","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":6099,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:21","nodeType":"FunctionDefinition","parameters":{"id":6093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:21","nodeType":"VariableDeclaration","scope":6099,"src":"18978:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6089,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6092,"mutability":"mutable","name":"offset","nameLocation":"19007:6:21","nodeType":"VariableDeclaration","scope":6099,"src":"18999:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6091,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:21"},"returnParameters":{"id":6096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6095,"mutability":"mutable","name":"value","nameLocation":"19045:5:21","nodeType":"VariableDeclaration","scope":6099,"src":"19037:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:21"},"scope":6100,"src":"18946:331:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":6101,"src":"297:18982:21","usedErrors":[4758,4761,4764],"usedEvents":[]}],"src":"101:19179:21"},"id":21},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[6124],"IERC165":[6136]},"id":6125,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6102,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":6104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6125,"sourceUnit":6137,"src":"140:38:22","symbolAliases":[{"foreign":{"id":6103,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"148:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6106,"name":"IERC165","nameLocations":["688:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":6136,"src":"688:7:22"},"id":6107,"nodeType":"InheritanceSpecifier","src":"688:7:22"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":6105,"nodeType":"StructuredDocumentation","src":"180:479:22","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":6124,"linearizedBaseContracts":[6124,6136],"name":"ERC165","nameLocation":"678:6:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[6135],"body":{"id":6122,"nodeType":"Block","src":"812:64:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6115,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"829:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":6117,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"849:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$6136_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$6136_$","typeString":"type(contract IERC165)"}],"id":6116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$6136","typeString":"type(contract IERC165)"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:22","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6114,"id":6121,"nodeType":"Return","src":"822:47:22"}]},"documentation":{"id":6108,"nodeType":"StructuredDocumentation","src":"702:23:22","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":6123,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:22","nodeType":"FunctionDefinition","parameters":{"id":6111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:22","nodeType":"VariableDeclaration","scope":6123,"src":"757:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6109,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:22"},"returnParameters":{"id":6114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6123,"src":"806:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6112,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:22"},"scope":6124,"src":"730:146:22","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":6125,"src":"660:218:22","usedErrors":[],"usedEvents":[]}],"src":"114:765:22"},"id":22},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[6136]},"id":6137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6126,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":6127,"nodeType":"StructuredDocumentation","src":"142:280:23","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":6136,"linearizedBaseContracts":[6136],"name":"IERC165","nameLocation":"433:7:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6128,"nodeType":"StructuredDocumentation","src":"447:340:23","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":6135,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:23","nodeType":"FunctionDefinition","parameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:23","nodeType":"VariableDeclaration","scope":6135,"src":"819:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6129,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:23"},"returnParameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6135,"src":"862:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6132,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:23"},"scope":6136,"src":"792:76:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6137,"src":"423:447:23","usedErrors":[],"usedEvents":[]}],"src":"115:756:23"},"id":23},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7757],"Panic":[4444],"SafeCast":[9522]},"id":7758,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":6140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7758,"sourceUnit":4445,"src":"129:35:24","symbolAliases":[{"foreign":{"id":6139,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"137:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7758,"sourceUnit":9523,"src":"165:40:24","symbolAliases":[{"foreign":{"id":6141,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"173:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":6143,"nodeType":"StructuredDocumentation","src":"207:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7757,"linearizedBaseContracts":[7757],"name":"Math","nameLocation":"289:4:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":6148,"members":[{"id":6144,"name":"Floor","nameLocation":"324:5:24","nodeType":"EnumValue","src":"324:5:24"},{"id":6145,"name":"Ceil","nameLocation":"367:4:24","nodeType":"EnumValue","src":"367:4:24"},{"id":6146,"name":"Trunc","nameLocation":"409:5:24","nodeType":"EnumValue","src":"409:5:24"},{"id":6147,"name":"Expand","nameLocation":"439:6:24","nodeType":"EnumValue","src":"439:6:24"}],"name":"Rounding","nameLocation":"305:8:24","nodeType":"EnumDefinition","src":"300:169:24"},{"body":{"id":6161,"nodeType":"Block","src":"731:112:24","statements":[{"AST":{"nativeSrc":"766:71:24","nodeType":"YulBlock","src":"766:71:24","statements":[{"nativeSrc":"780:16:24","nodeType":"YulAssignment","src":"780:16:24","value":{"arguments":[{"name":"a","nativeSrc":"791:1:24","nodeType":"YulIdentifier","src":"791:1:24"},{"name":"b","nativeSrc":"794:1:24","nodeType":"YulIdentifier","src":"794:1:24"}],"functionName":{"name":"add","nativeSrc":"787:3:24","nodeType":"YulIdentifier","src":"787:3:24"},"nativeSrc":"787:9:24","nodeType":"YulFunctionCall","src":"787:9:24"},"variableNames":[{"name":"low","nativeSrc":"780:3:24","nodeType":"YulIdentifier","src":"780:3:24"}]},{"nativeSrc":"809:18:24","nodeType":"YulAssignment","src":"809:18:24","value":{"arguments":[{"name":"low","nativeSrc":"820:3:24","nodeType":"YulIdentifier","src":"820:3:24"},{"name":"a","nativeSrc":"825:1:24","nodeType":"YulIdentifier","src":"825:1:24"}],"functionName":{"name":"lt","nativeSrc":"817:2:24","nodeType":"YulIdentifier","src":"817:2:24"},"nativeSrc":"817:10:24","nodeType":"YulFunctionCall","src":"817:10:24"},"variableNames":[{"name":"high","nativeSrc":"809:4:24","nodeType":"YulIdentifier","src":"809:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6151,"isOffset":false,"isSlot":false,"src":"791:1:24","valueSize":1},{"declaration":6151,"isOffset":false,"isSlot":false,"src":"825:1:24","valueSize":1},{"declaration":6153,"isOffset":false,"isSlot":false,"src":"794:1:24","valueSize":1},{"declaration":6156,"isOffset":false,"isSlot":false,"src":"809:4:24","valueSize":1},{"declaration":6158,"isOffset":false,"isSlot":false,"src":"780:3:24","valueSize":1},{"declaration":6158,"isOffset":false,"isSlot":false,"src":"820:3:24","valueSize":1}],"flags":["memory-safe"],"id":6160,"nodeType":"InlineAssembly","src":"741:96:24"}]},"documentation":{"id":6149,"nodeType":"StructuredDocumentation","src":"475:163:24","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":6162,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:24","nodeType":"FunctionDefinition","parameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6151,"mutability":"mutable","name":"a","nameLocation":"667:1:24","nodeType":"VariableDeclaration","scope":6162,"src":"659:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6150,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6153,"mutability":"mutable","name":"b","nameLocation":"678:1:24","nodeType":"VariableDeclaration","scope":6162,"src":"670:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6152,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:24"},"returnParameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6156,"mutability":"mutable","name":"high","nameLocation":"712:4:24","nodeType":"VariableDeclaration","scope":6162,"src":"704:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6155,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6158,"mutability":"mutable","name":"low","nameLocation":"726:3:24","nodeType":"VariableDeclaration","scope":6162,"src":"718:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:24"},"scope":7757,"src":"643:200:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6175,"nodeType":"Block","src":"1115:462:24","statements":[{"AST":{"nativeSrc":"1437:134:24","nodeType":"YulBlock","src":"1437:134:24","statements":[{"nativeSrc":"1451:30:24","nodeType":"YulVariableDeclaration","src":"1451:30:24","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:24","nodeType":"YulIdentifier","src":"1468:1:24"},{"name":"b","nativeSrc":"1471:1:24","nodeType":"YulIdentifier","src":"1471:1:24"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:24","nodeType":"YulLiteral","src":"1478:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:24","nodeType":"YulIdentifier","src":"1474:3:24"},"nativeSrc":"1474:6:24","nodeType":"YulFunctionCall","src":"1474:6:24"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:24","nodeType":"YulIdentifier","src":"1461:6:24"},"nativeSrc":"1461:20:24","nodeType":"YulFunctionCall","src":"1461:20:24"},"variables":[{"name":"mm","nativeSrc":"1455:2:24","nodeType":"YulTypedName","src":"1455:2:24","type":""}]},{"nativeSrc":"1494:16:24","nodeType":"YulAssignment","src":"1494:16:24","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:24","nodeType":"YulIdentifier","src":"1505:1:24"},{"name":"b","nativeSrc":"1508:1:24","nodeType":"YulIdentifier","src":"1508:1:24"}],"functionName":{"name":"mul","nativeSrc":"1501:3:24","nodeType":"YulIdentifier","src":"1501:3:24"},"nativeSrc":"1501:9:24","nodeType":"YulFunctionCall","src":"1501:9:24"},"variableNames":[{"name":"low","nativeSrc":"1494:3:24","nodeType":"YulIdentifier","src":"1494:3:24"}]},{"nativeSrc":"1523:38:24","nodeType":"YulAssignment","src":"1523:38:24","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:24","nodeType":"YulIdentifier","src":"1539:2:24"},{"name":"low","nativeSrc":"1543:3:24","nodeType":"YulIdentifier","src":"1543:3:24"}],"functionName":{"name":"sub","nativeSrc":"1535:3:24","nodeType":"YulIdentifier","src":"1535:3:24"},"nativeSrc":"1535:12:24","nodeType":"YulFunctionCall","src":"1535:12:24"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:24","nodeType":"YulIdentifier","src":"1552:2:24"},{"name":"low","nativeSrc":"1556:3:24","nodeType":"YulIdentifier","src":"1556:3:24"}],"functionName":{"name":"lt","nativeSrc":"1549:2:24","nodeType":"YulIdentifier","src":"1549:2:24"},"nativeSrc":"1549:11:24","nodeType":"YulFunctionCall","src":"1549:11:24"}],"functionName":{"name":"sub","nativeSrc":"1531:3:24","nodeType":"YulIdentifier","src":"1531:3:24"},"nativeSrc":"1531:30:24","nodeType":"YulFunctionCall","src":"1531:30:24"},"variableNames":[{"name":"high","nativeSrc":"1523:4:24","nodeType":"YulIdentifier","src":"1523:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6165,"isOffset":false,"isSlot":false,"src":"1468:1:24","valueSize":1},{"declaration":6165,"isOffset":false,"isSlot":false,"src":"1505:1:24","valueSize":1},{"declaration":6167,"isOffset":false,"isSlot":false,"src":"1471:1:24","valueSize":1},{"declaration":6167,"isOffset":false,"isSlot":false,"src":"1508:1:24","valueSize":1},{"declaration":6170,"isOffset":false,"isSlot":false,"src":"1523:4:24","valueSize":1},{"declaration":6172,"isOffset":false,"isSlot":false,"src":"1494:3:24","valueSize":1},{"declaration":6172,"isOffset":false,"isSlot":false,"src":"1543:3:24","valueSize":1},{"declaration":6172,"isOffset":false,"isSlot":false,"src":"1556:3:24","valueSize":1}],"flags":["memory-safe"],"id":6174,"nodeType":"InlineAssembly","src":"1412:159:24"}]},"documentation":{"id":6163,"nodeType":"StructuredDocumentation","src":"849:173:24","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":6176,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:24","nodeType":"FunctionDefinition","parameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"a","nameLocation":"1051:1:24","nodeType":"VariableDeclaration","scope":6176,"src":"1043:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6167,"mutability":"mutable","name":"b","nameLocation":"1062:1:24","nodeType":"VariableDeclaration","scope":6176,"src":"1054:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:24"},"returnParameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"high","nameLocation":"1096:4:24","nodeType":"VariableDeclaration","scope":6176,"src":"1088:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6172,"mutability":"mutable","name":"low","nameLocation":"1110:3:24","nodeType":"VariableDeclaration","scope":6176,"src":"1102:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:24"},"scope":7757,"src":"1027:550:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6210,"nodeType":"Block","src":"1784:149:24","statements":[{"id":6209,"nodeType":"UncheckedBlock","src":"1794:133:24","statements":[{"assignments":[6189],"declarations":[{"constant":false,"id":6189,"mutability":"mutable","name":"c","nameLocation":"1826:1:24","nodeType":"VariableDeclaration","scope":6209,"src":"1818:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6193,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"1830:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"1834:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:24"},{"expression":{"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6194,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"1849:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6195,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"1859:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"1864:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6199,"nodeType":"ExpressionStatement","src":"1849:16:24"},{"expression":{"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"1879:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6201,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"1888:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6204,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"1908:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6202,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"1892:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"1892:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6208,"nodeType":"ExpressionStatement","src":"1879:37:24"}]}]},"documentation":{"id":6177,"nodeType":"StructuredDocumentation","src":"1583:105:24","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":6211,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:24","nodeType":"FunctionDefinition","parameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"a","nameLocation":"1717:1:24","nodeType":"VariableDeclaration","scope":6211,"src":"1709:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6181,"mutability":"mutable","name":"b","nameLocation":"1728:1:24","nodeType":"VariableDeclaration","scope":6211,"src":"1720:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:24"},"returnParameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6184,"mutability":"mutable","name":"success","nameLocation":"1759:7:24","nodeType":"VariableDeclaration","scope":6211,"src":"1754:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6183,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6186,"mutability":"mutable","name":"result","nameLocation":"1776:6:24","nodeType":"VariableDeclaration","scope":6211,"src":"1768:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:24"},"scope":7757,"src":"1693:240:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6245,"nodeType":"Block","src":"2143:149:24","statements":[{"id":6244,"nodeType":"UncheckedBlock","src":"2153:133:24","statements":[{"assignments":[6224],"declarations":[{"constant":false,"id":6224,"mutability":"mutable","name":"c","nameLocation":"2185:1:24","nodeType":"VariableDeclaration","scope":6244,"src":"2177:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6228,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"2189:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6226,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"2193:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:24"},{"expression":{"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6229,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"2208:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6230,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"2218:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"2223:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6234,"nodeType":"ExpressionStatement","src":"2208:16:24"},{"expression":{"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"2238:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6236,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"2247:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6239,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"2267:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6237,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"2251:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"2251:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6243,"nodeType":"ExpressionStatement","src":"2238:37:24"}]}]},"documentation":{"id":6212,"nodeType":"StructuredDocumentation","src":"1939:108:24","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":6246,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:24","nodeType":"FunctionDefinition","parameters":{"id":6217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"a","nameLocation":"2076:1:24","nodeType":"VariableDeclaration","scope":6246,"src":"2068:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6213,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6216,"mutability":"mutable","name":"b","nameLocation":"2087:1:24","nodeType":"VariableDeclaration","scope":6246,"src":"2079:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:24"},"returnParameters":{"id":6222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"mutability":"mutable","name":"success","nameLocation":"2118:7:24","nodeType":"VariableDeclaration","scope":6246,"src":"2113:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6218,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6221,"mutability":"mutable","name":"result","nameLocation":"2135:6:24","nodeType":"VariableDeclaration","scope":6246,"src":"2127:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6220,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:24"},"scope":7757,"src":"2052:240:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6275,"nodeType":"Block","src":"2505:391:24","statements":[{"id":6274,"nodeType":"UncheckedBlock","src":"2515:375:24","statements":[{"assignments":[6259],"declarations":[{"constant":false,"id":6259,"mutability":"mutable","name":"c","nameLocation":"2547:1:24","nodeType":"VariableDeclaration","scope":6274,"src":"2539:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6258,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6263,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"2551:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6261,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"2555:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:24"},{"AST":{"nativeSrc":"2595:188:24","nodeType":"YulBlock","src":"2595:188:24","statements":[{"nativeSrc":"2727:42:24","nodeType":"YulAssignment","src":"2727:42:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:24","nodeType":"YulIdentifier","src":"2748:1:24"},{"name":"a","nativeSrc":"2751:1:24","nodeType":"YulIdentifier","src":"2751:1:24"}],"functionName":{"name":"div","nativeSrc":"2744:3:24","nodeType":"YulIdentifier","src":"2744:3:24"},"nativeSrc":"2744:9:24","nodeType":"YulFunctionCall","src":"2744:9:24"},{"name":"b","nativeSrc":"2755:1:24","nodeType":"YulIdentifier","src":"2755:1:24"}],"functionName":{"name":"eq","nativeSrc":"2741:2:24","nodeType":"YulIdentifier","src":"2741:2:24"},"nativeSrc":"2741:16:24","nodeType":"YulFunctionCall","src":"2741:16:24"},{"arguments":[{"name":"a","nativeSrc":"2766:1:24","nodeType":"YulIdentifier","src":"2766:1:24"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:24","nodeType":"YulIdentifier","src":"2759:6:24"},"nativeSrc":"2759:9:24","nodeType":"YulFunctionCall","src":"2759:9:24"}],"functionName":{"name":"or","nativeSrc":"2738:2:24","nodeType":"YulIdentifier","src":"2738:2:24"},"nativeSrc":"2738:31:24","nodeType":"YulFunctionCall","src":"2738:31:24"},"variableNames":[{"name":"success","nativeSrc":"2727:7:24","nodeType":"YulIdentifier","src":"2727:7:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6249,"isOffset":false,"isSlot":false,"src":"2751:1:24","valueSize":1},{"declaration":6249,"isOffset":false,"isSlot":false,"src":"2766:1:24","valueSize":1},{"declaration":6251,"isOffset":false,"isSlot":false,"src":"2755:1:24","valueSize":1},{"declaration":6259,"isOffset":false,"isSlot":false,"src":"2748:1:24","valueSize":1},{"declaration":6254,"isOffset":false,"isSlot":false,"src":"2727:7:24","valueSize":1}],"flags":["memory-safe"],"id":6264,"nodeType":"InlineAssembly","src":"2570:213:24"},{"expression":{"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"2842:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6266,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"2851:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6269,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"2871:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6267,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"2855:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"2855:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6273,"nodeType":"ExpressionStatement","src":"2842:37:24"}]}]},"documentation":{"id":6247,"nodeType":"StructuredDocumentation","src":"2298:111:24","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":6276,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:24","nodeType":"FunctionDefinition","parameters":{"id":6252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6249,"mutability":"mutable","name":"a","nameLocation":"2438:1:24","nodeType":"VariableDeclaration","scope":6276,"src":"2430:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6251,"mutability":"mutable","name":"b","nameLocation":"2449:1:24","nodeType":"VariableDeclaration","scope":6276,"src":"2441:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:24"},"returnParameters":{"id":6257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6254,"mutability":"mutable","name":"success","nameLocation":"2480:7:24","nodeType":"VariableDeclaration","scope":6276,"src":"2475:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6253,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6256,"mutability":"mutable","name":"result","nameLocation":"2497:6:24","nodeType":"VariableDeclaration","scope":6276,"src":"2489:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6255,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:24"},"scope":7757,"src":"2414:482:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6296,"nodeType":"Block","src":"3111:231:24","statements":[{"id":6295,"nodeType":"UncheckedBlock","src":"3121:215:24","statements":[{"expression":{"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6288,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"3145:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"3155:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6293,"nodeType":"ExpressionStatement","src":"3145:15:24"},{"AST":{"nativeSrc":"3199:127:24","nodeType":"YulBlock","src":"3199:127:24","statements":[{"nativeSrc":"3293:19:24","nodeType":"YulAssignment","src":"3293:19:24","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:24","nodeType":"YulIdentifier","src":"3307:1:24"},{"name":"b","nativeSrc":"3310:1:24","nodeType":"YulIdentifier","src":"3310:1:24"}],"functionName":{"name":"div","nativeSrc":"3303:3:24","nodeType":"YulIdentifier","src":"3303:3:24"},"nativeSrc":"3303:9:24","nodeType":"YulFunctionCall","src":"3303:9:24"},"variableNames":[{"name":"result","nativeSrc":"3293:6:24","nodeType":"YulIdentifier","src":"3293:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6279,"isOffset":false,"isSlot":false,"src":"3307:1:24","valueSize":1},{"declaration":6281,"isOffset":false,"isSlot":false,"src":"3310:1:24","valueSize":1},{"declaration":6286,"isOffset":false,"isSlot":false,"src":"3293:6:24","valueSize":1}],"flags":["memory-safe"],"id":6294,"nodeType":"InlineAssembly","src":"3174:152:24"}]}]},"documentation":{"id":6277,"nodeType":"StructuredDocumentation","src":"2902:113:24","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":6297,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:24","nodeType":"FunctionDefinition","parameters":{"id":6282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6279,"mutability":"mutable","name":"a","nameLocation":"3044:1:24","nodeType":"VariableDeclaration","scope":6297,"src":"3036:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6278,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6281,"mutability":"mutable","name":"b","nameLocation":"3055:1:24","nodeType":"VariableDeclaration","scope":6297,"src":"3047:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:24"},"returnParameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6284,"mutability":"mutable","name":"success","nameLocation":"3086:7:24","nodeType":"VariableDeclaration","scope":6297,"src":"3081:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6283,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6286,"mutability":"mutable","name":"result","nameLocation":"3103:6:24","nodeType":"VariableDeclaration","scope":6297,"src":"3095:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:24"},"scope":7757,"src":"3020:322:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6317,"nodeType":"Block","src":"3567:231:24","statements":[{"id":6316,"nodeType":"UncheckedBlock","src":"3577:215:24","statements":[{"expression":{"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6309,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"3601:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6310,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"3611:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6314,"nodeType":"ExpressionStatement","src":"3601:15:24"},{"AST":{"nativeSrc":"3655:127:24","nodeType":"YulBlock","src":"3655:127:24","statements":[{"nativeSrc":"3749:19:24","nodeType":"YulAssignment","src":"3749:19:24","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:24","nodeType":"YulIdentifier","src":"3763:1:24"},{"name":"b","nativeSrc":"3766:1:24","nodeType":"YulIdentifier","src":"3766:1:24"}],"functionName":{"name":"mod","nativeSrc":"3759:3:24","nodeType":"YulIdentifier","src":"3759:3:24"},"nativeSrc":"3759:9:24","nodeType":"YulFunctionCall","src":"3759:9:24"},"variableNames":[{"name":"result","nativeSrc":"3749:6:24","nodeType":"YulIdentifier","src":"3749:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6300,"isOffset":false,"isSlot":false,"src":"3763:1:24","valueSize":1},{"declaration":6302,"isOffset":false,"isSlot":false,"src":"3766:1:24","valueSize":1},{"declaration":6307,"isOffset":false,"isSlot":false,"src":"3749:6:24","valueSize":1}],"flags":["memory-safe"],"id":6315,"nodeType":"InlineAssembly","src":"3630:152:24"}]}]},"documentation":{"id":6298,"nodeType":"StructuredDocumentation","src":"3348:123:24","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":6318,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:24","nodeType":"FunctionDefinition","parameters":{"id":6303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6300,"mutability":"mutable","name":"a","nameLocation":"3500:1:24","nodeType":"VariableDeclaration","scope":6318,"src":"3492:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6302,"mutability":"mutable","name":"b","nameLocation":"3511:1:24","nodeType":"VariableDeclaration","scope":6318,"src":"3503:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:24"},"returnParameters":{"id":6308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6305,"mutability":"mutable","name":"success","nameLocation":"3542:7:24","nodeType":"VariableDeclaration","scope":6318,"src":"3537:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6304,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6307,"mutability":"mutable","name":"result","nameLocation":"3559:6:24","nodeType":"VariableDeclaration","scope":6318,"src":"3551:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6306,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:24"},"scope":7757,"src":"3476:322:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6347,"nodeType":"Block","src":"3989:122:24","statements":[{"assignments":[6329,6331],"declarations":[{"constant":false,"id":6329,"mutability":"mutable","name":"success","nameLocation":"4005:7:24","nodeType":"VariableDeclaration","scope":6347,"src":"4000:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6328,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6331,"mutability":"mutable","name":"result","nameLocation":"4022:6:24","nodeType":"VariableDeclaration","scope":6347,"src":"4014:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6330,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6336,"initialValue":{"arguments":[{"id":6333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"4039:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4042:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6332,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"4032:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:24"},{"expression":{"arguments":[{"id":6338,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"4069:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"4078:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6340,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:24","memberName":"max","nodeType":"MemberAccess","src":"4086:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6337,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"4061:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6327,"id":6346,"nodeType":"Return","src":"4054:50:24"}]},"documentation":{"id":6319,"nodeType":"StructuredDocumentation","src":"3804:103:24","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6348,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:24","nodeType":"FunctionDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6321,"mutability":"mutable","name":"a","nameLocation":"3943:1:24","nodeType":"VariableDeclaration","scope":6348,"src":"3935:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6320,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6323,"mutability":"mutable","name":"b","nameLocation":"3954:1:24","nodeType":"VariableDeclaration","scope":6348,"src":"3946:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6322,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:24"},"returnParameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6348,"src":"3980:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6325,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:24"},"scope":7757,"src":"3912:199:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6367,"nodeType":"Block","src":"4294:73:24","statements":[{"assignments":[null,6359],"declarations":[null,{"constant":false,"id":6359,"mutability":"mutable","name":"result","nameLocation":"4315:6:24","nodeType":"VariableDeclaration","scope":6367,"src":"4307:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6358,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6364,"initialValue":{"arguments":[{"id":6361,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"4332:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6362,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"4335:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6360,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"4325:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:24"},{"expression":{"id":6365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"4354:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6357,"id":6366,"nodeType":"Return","src":"4347:13:24"}]},"documentation":{"id":6349,"nodeType":"StructuredDocumentation","src":"4117:95:24","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":6368,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:24","nodeType":"FunctionDefinition","parameters":{"id":6354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6351,"mutability":"mutable","name":"a","nameLocation":"4248:1:24","nodeType":"VariableDeclaration","scope":6368,"src":"4240:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6350,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6353,"mutability":"mutable","name":"b","nameLocation":"4259:1:24","nodeType":"VariableDeclaration","scope":6368,"src":"4251:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6352,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:24"},"returnParameters":{"id":6357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6368,"src":"4285:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6355,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:24"},"scope":7757,"src":"4217:150:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6397,"nodeType":"Block","src":"4564:122:24","statements":[{"assignments":[6379,6381],"declarations":[{"constant":false,"id":6379,"mutability":"mutable","name":"success","nameLocation":"4580:7:24","nodeType":"VariableDeclaration","scope":6397,"src":"4575:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6378,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6381,"mutability":"mutable","name":"result","nameLocation":"4597:6:24","nodeType":"VariableDeclaration","scope":6397,"src":"4589:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6380,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6386,"initialValue":{"arguments":[{"id":6383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"4614:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6384,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"4617:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6382,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"4607:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:24"},{"expression":{"arguments":[{"id":6388,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"4644:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"4653:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6391,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6390,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:24","memberName":"max","nodeType":"MemberAccess","src":"4661:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6387,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"4636:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6377,"id":6396,"nodeType":"Return","src":"4629:50:24"}]},"documentation":{"id":6369,"nodeType":"StructuredDocumentation","src":"4373:109:24","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6398,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:24","nodeType":"FunctionDefinition","parameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6371,"mutability":"mutable","name":"a","nameLocation":"4518:1:24","nodeType":"VariableDeclaration","scope":6398,"src":"4510:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6370,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6373,"mutability":"mutable","name":"b","nameLocation":"4529:1:24","nodeType":"VariableDeclaration","scope":6398,"src":"4521:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6372,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:24"},"returnParameters":{"id":6377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6398,"src":"4555:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:24"},"scope":7757,"src":"4487:199:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6424,"nodeType":"Block","src":"5158:207:24","statements":[{"id":6423,"nodeType":"UncheckedBlock","src":"5168:191:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6410,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"5306:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"5312:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6412,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"5316:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6417,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"5337:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6415,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"5321:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"5321:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6409,"id":6422,"nodeType":"Return","src":"5299:49:24"}]}]},"documentation":{"id":6399,"nodeType":"StructuredDocumentation","src":"4692:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6425,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:24","nodeType":"FunctionDefinition","parameters":{"id":6406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"condition","nameLocation":"5093:9:24","nodeType":"VariableDeclaration","scope":6425,"src":"5088:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6400,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6403,"mutability":"mutable","name":"a","nameLocation":"5112:1:24","nodeType":"VariableDeclaration","scope":6425,"src":"5104:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6402,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6405,"mutability":"mutable","name":"b","nameLocation":"5123:1:24","nodeType":"VariableDeclaration","scope":6425,"src":"5115:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6404,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:24"},"returnParameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6425,"src":"5149:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6407,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:24"},"scope":7757,"src":"5071:294:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6443,"nodeType":"Block","src":"5502:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"5527:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6437,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"5531:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"5534:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6440,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"5537:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6435,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"5519:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6434,"id":6442,"nodeType":"Return","src":"5512:27:24"}]},"documentation":{"id":6426,"nodeType":"StructuredDocumentation","src":"5371:59:24","text":" @dev Returns the largest of two numbers."},"id":6444,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:24","nodeType":"FunctionDefinition","parameters":{"id":6431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6428,"mutability":"mutable","name":"a","nameLocation":"5456:1:24","nodeType":"VariableDeclaration","scope":6444,"src":"5448:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6427,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6430,"mutability":"mutable","name":"b","nameLocation":"5467:1:24","nodeType":"VariableDeclaration","scope":6444,"src":"5459:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6429,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:24"},"returnParameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6444,"src":"5493:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6432,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:24"},"scope":7757,"src":"5435:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6462,"nodeType":"Block","src":"5684:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"5709:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6456,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"5713:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"5716:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6459,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"5719:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6454,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"5701:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6453,"id":6461,"nodeType":"Return","src":"5694:27:24"}]},"documentation":{"id":6445,"nodeType":"StructuredDocumentation","src":"5552:60:24","text":" @dev Returns the smallest of two numbers."},"id":6463,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:24","nodeType":"FunctionDefinition","parameters":{"id":6450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"a","nameLocation":"5638:1:24","nodeType":"VariableDeclaration","scope":6463,"src":"5630:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6446,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6449,"mutability":"mutable","name":"b","nameLocation":"5649:1:24","nodeType":"VariableDeclaration","scope":6463,"src":"5641:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6448,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:24"},"returnParameters":{"id":6453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6463,"src":"5675:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6451,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:24"},"scope":7757,"src":"5617:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6485,"nodeType":"Block","src":"5912:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6473,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"5967:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6474,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"5971:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"5977:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6478,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"5981:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6472,"id":6484,"nodeType":"Return","src":"5959:28:24"}]},"documentation":{"id":6464,"nodeType":"StructuredDocumentation","src":"5734:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6486,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:24","nodeType":"FunctionDefinition","parameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6466,"mutability":"mutable","name":"a","nameLocation":"5866:1:24","nodeType":"VariableDeclaration","scope":6486,"src":"5858:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6465,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6468,"mutability":"mutable","name":"b","nameLocation":"5877:1:24","nodeType":"VariableDeclaration","scope":6486,"src":"5869:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6467,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:24"},"returnParameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6486,"src":"5903:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6470,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:24"},"scope":7757,"src":"5841:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6526,"nodeType":"Block","src":"6286:633:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6496,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"6300:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6507,"nodeType":"IfStatement","src":"6296:150:24","trueBody":{"id":6506,"nodeType":"Block","src":"6308:138:24","statements":[{"expression":{"arguments":[{"expression":{"id":6502,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"6412:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4411,"src":"6412:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6499,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"6400:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4443,"src":"6400:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6505,"nodeType":"ExpressionStatement","src":"6400:35:24"}]}},{"id":6525,"nodeType":"UncheckedBlock","src":"6829:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6510,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"6876:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6508,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"6860:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"6860:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"6887:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6518,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"6896:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6495,"id":6524,"nodeType":"Return","src":"6853:49:24"}]}]},"documentation":{"id":6487,"nodeType":"StructuredDocumentation","src":"6000:210:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":6527,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:24","nodeType":"FunctionDefinition","parameters":{"id":6492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"a","nameLocation":"6240:1:24","nodeType":"VariableDeclaration","scope":6527,"src":"6232:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6488,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6491,"mutability":"mutable","name":"b","nameLocation":"6251:1:24","nodeType":"VariableDeclaration","scope":6527,"src":"6243:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6490,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:24"},"returnParameters":{"id":6495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6527,"src":"6277:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6493,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:24"},"scope":7757,"src":"6215:704:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6662,"nodeType":"Block","src":"7340:3585:24","statements":[{"id":6661,"nodeType":"UncheckedBlock","src":"7350:3569:24","statements":[{"assignments":[6540,6542],"declarations":[{"constant":false,"id":6540,"mutability":"mutable","name":"high","nameLocation":"7383:4:24","nodeType":"VariableDeclaration","scope":6661,"src":"7375:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6539,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6542,"mutability":"mutable","name":"low","nameLocation":"7397:3:24","nodeType":"VariableDeclaration","scope":6661,"src":"7389:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6541,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6547,"initialValue":{"arguments":[{"id":6544,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"7411:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6545,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"7414:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6543,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"7404:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6548,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"7498:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6556,"nodeType":"IfStatement","src":"7494:365:24","trueBody":{"id":6555,"nodeType":"Block","src":"7509:350:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"7827:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6552,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"7833:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6538,"id":6554,"nodeType":"Return","src":"7820:24:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6557,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"7969:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6558,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"7984:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6575,"nodeType":"IfStatement","src":"7965:142:24","trueBody":{"id":6574,"nodeType":"Block","src":"7990:117:24","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6564,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"8028:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6567,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"8046:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4411,"src":"8046:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6569,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"8070:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:24","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4407,"src":"8070:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6563,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"8020:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6560,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"8008:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4443,"src":"8008:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6573,"nodeType":"ExpressionStatement","src":"8008:84:24"}]}},{"assignments":[6577],"declarations":[{"constant":false,"id":6577,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:24","nodeType":"VariableDeclaration","scope":6661,"src":"8359:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6576,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6578,"nodeType":"VariableDeclarationStatement","src":"8359:17:24"},{"AST":{"nativeSrc":"8415:283:24","nodeType":"YulBlock","src":"8415:283:24","statements":[{"nativeSrc":"8484:38:24","nodeType":"YulAssignment","src":"8484:38:24","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:24","nodeType":"YulIdentifier","src":"8504:1:24"},{"name":"y","nativeSrc":"8507:1:24","nodeType":"YulIdentifier","src":"8507:1:24"},{"name":"denominator","nativeSrc":"8510:11:24","nodeType":"YulIdentifier","src":"8510:11:24"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:24","nodeType":"YulIdentifier","src":"8497:6:24"},"nativeSrc":"8497:25:24","nodeType":"YulFunctionCall","src":"8497:25:24"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:24","nodeType":"YulIdentifier","src":"8484:9:24"}]},{"nativeSrc":"8604:37:24","nodeType":"YulAssignment","src":"8604:37:24","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:24","nodeType":"YulIdentifier","src":"8616:4:24"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:24","nodeType":"YulIdentifier","src":"8625:9:24"},{"name":"low","nativeSrc":"8636:3:24","nodeType":"YulIdentifier","src":"8636:3:24"}],"functionName":{"name":"gt","nativeSrc":"8622:2:24","nodeType":"YulIdentifier","src":"8622:2:24"},"nativeSrc":"8622:18:24","nodeType":"YulFunctionCall","src":"8622:18:24"}],"functionName":{"name":"sub","nativeSrc":"8612:3:24","nodeType":"YulIdentifier","src":"8612:3:24"},"nativeSrc":"8612:29:24","nodeType":"YulFunctionCall","src":"8612:29:24"},"variableNames":[{"name":"high","nativeSrc":"8604:4:24","nodeType":"YulIdentifier","src":"8604:4:24"}]},{"nativeSrc":"8658:26:24","nodeType":"YulAssignment","src":"8658:26:24","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:24","nodeType":"YulIdentifier","src":"8669:3:24"},{"name":"remainder","nativeSrc":"8674:9:24","nodeType":"YulIdentifier","src":"8674:9:24"}],"functionName":{"name":"sub","nativeSrc":"8665:3:24","nodeType":"YulIdentifier","src":"8665:3:24"},"nativeSrc":"8665:19:24","nodeType":"YulFunctionCall","src":"8665:19:24"},"variableNames":[{"name":"low","nativeSrc":"8658:3:24","nodeType":"YulIdentifier","src":"8658:3:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6534,"isOffset":false,"isSlot":false,"src":"8510:11:24","valueSize":1},{"declaration":6540,"isOffset":false,"isSlot":false,"src":"8604:4:24","valueSize":1},{"declaration":6540,"isOffset":false,"isSlot":false,"src":"8616:4:24","valueSize":1},{"declaration":6542,"isOffset":false,"isSlot":false,"src":"8636:3:24","valueSize":1},{"declaration":6542,"isOffset":false,"isSlot":false,"src":"8658:3:24","valueSize":1},{"declaration":6542,"isOffset":false,"isSlot":false,"src":"8669:3:24","valueSize":1},{"declaration":6577,"isOffset":false,"isSlot":false,"src":"8484:9:24","valueSize":1},{"declaration":6577,"isOffset":false,"isSlot":false,"src":"8625:9:24","valueSize":1},{"declaration":6577,"isOffset":false,"isSlot":false,"src":"8674:9:24","valueSize":1},{"declaration":6530,"isOffset":false,"isSlot":false,"src":"8504:1:24","valueSize":1},{"declaration":6532,"isOffset":false,"isSlot":false,"src":"8507:1:24","valueSize":1}],"flags":["memory-safe"],"id":6579,"nodeType":"InlineAssembly","src":"8390:308:24"},{"assignments":[6581],"declarations":[{"constant":false,"id":6581,"mutability":"mutable","name":"twos","nameLocation":"8910:4:24","nodeType":"VariableDeclaration","scope":6661,"src":"8902:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6580,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6588,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6582,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"8917:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6584,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"8936:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:24"},{"AST":{"nativeSrc":"8987:359:24","nodeType":"YulBlock","src":"8987:359:24","statements":[{"nativeSrc":"9052:37:24","nodeType":"YulAssignment","src":"9052:37:24","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:24","nodeType":"YulIdentifier","src":"9071:11:24"},{"name":"twos","nativeSrc":"9084:4:24","nodeType":"YulIdentifier","src":"9084:4:24"}],"functionName":{"name":"div","nativeSrc":"9067:3:24","nodeType":"YulIdentifier","src":"9067:3:24"},"nativeSrc":"9067:22:24","nodeType":"YulFunctionCall","src":"9067:22:24"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:24","nodeType":"YulIdentifier","src":"9052:11:24"}]},{"nativeSrc":"9153:21:24","nodeType":"YulAssignment","src":"9153:21:24","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:24","nodeType":"YulIdentifier","src":"9164:3:24"},{"name":"twos","nativeSrc":"9169:4:24","nodeType":"YulIdentifier","src":"9169:4:24"}],"functionName":{"name":"div","nativeSrc":"9160:3:24","nodeType":"YulIdentifier","src":"9160:3:24"},"nativeSrc":"9160:14:24","nodeType":"YulFunctionCall","src":"9160:14:24"},"variableNames":[{"name":"low","nativeSrc":"9153:3:24","nodeType":"YulIdentifier","src":"9153:3:24"}]},{"nativeSrc":"9293:39:24","nodeType":"YulAssignment","src":"9293:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:24","nodeType":"YulLiteral","src":"9313:1:24","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:24","nodeType":"YulIdentifier","src":"9316:4:24"}],"functionName":{"name":"sub","nativeSrc":"9309:3:24","nodeType":"YulIdentifier","src":"9309:3:24"},"nativeSrc":"9309:12:24","nodeType":"YulFunctionCall","src":"9309:12:24"},{"name":"twos","nativeSrc":"9323:4:24","nodeType":"YulIdentifier","src":"9323:4:24"}],"functionName":{"name":"div","nativeSrc":"9305:3:24","nodeType":"YulIdentifier","src":"9305:3:24"},"nativeSrc":"9305:23:24","nodeType":"YulFunctionCall","src":"9305:23:24"},{"kind":"number","nativeSrc":"9330:1:24","nodeType":"YulLiteral","src":"9330:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:24","nodeType":"YulIdentifier","src":"9301:3:24"},"nativeSrc":"9301:31:24","nodeType":"YulFunctionCall","src":"9301:31:24"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:24","nodeType":"YulIdentifier","src":"9293:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6534,"isOffset":false,"isSlot":false,"src":"9052:11:24","valueSize":1},{"declaration":6534,"isOffset":false,"isSlot":false,"src":"9071:11:24","valueSize":1},{"declaration":6542,"isOffset":false,"isSlot":false,"src":"9153:3:24","valueSize":1},{"declaration":6542,"isOffset":false,"isSlot":false,"src":"9164:3:24","valueSize":1},{"declaration":6581,"isOffset":false,"isSlot":false,"src":"9084:4:24","valueSize":1},{"declaration":6581,"isOffset":false,"isSlot":false,"src":"9169:4:24","valueSize":1},{"declaration":6581,"isOffset":false,"isSlot":false,"src":"9293:4:24","valueSize":1},{"declaration":6581,"isOffset":false,"isSlot":false,"src":"9316:4:24","valueSize":1},{"declaration":6581,"isOffset":false,"isSlot":false,"src":"9323:4:24","valueSize":1}],"flags":["memory-safe"],"id":6589,"nodeType":"InlineAssembly","src":"8962:384:24"},{"expression":{"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6590,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"9409:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6591,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"9416:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6592,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"9423:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6595,"nodeType":"ExpressionStatement","src":"9409:18:24"},{"assignments":[6597],"declarations":[{"constant":false,"id":6597,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:24","nodeType":"VariableDeclaration","scope":6661,"src":"9762:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6596,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6604,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6599,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"9785:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:24"},{"expression":{"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6605,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10018:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6607,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"10033:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6608,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10047:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6612,"nodeType":"ExpressionStatement","src":"10018:36:24"},{"expression":{"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6613,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10088:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6615,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"10103:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6616,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10117:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6620,"nodeType":"ExpressionStatement","src":"10088:36:24"},{"expression":{"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6621,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10160:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6623,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"10175:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6624,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10189:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6628,"nodeType":"ExpressionStatement","src":"10160:36:24"},{"expression":{"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6629,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10231:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6631,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"10246:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6632,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10260:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6636,"nodeType":"ExpressionStatement","src":"10231:36:24"},{"expression":{"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6637,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10304:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6639,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"10319:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6640,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10333:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6644,"nodeType":"ExpressionStatement","src":"10304:36:24"},{"expression":{"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6645,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6647,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"10393:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6648,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10407:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6652,"nodeType":"ExpressionStatement","src":"10378:36:24"},{"expression":{"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"10859:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6654,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"10868:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6655,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"10874:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6658,"nodeType":"ExpressionStatement","src":"10859:22:24"},{"expression":{"id":6659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"10902:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6538,"id":6660,"nodeType":"Return","src":"10895:13:24"}]}]},"documentation":{"id":6528,"nodeType":"StructuredDocumentation","src":"6925:312:24","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":6663,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:24","nodeType":"FunctionDefinition","parameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6530,"mutability":"mutable","name":"x","nameLocation":"7266:1:24","nodeType":"VariableDeclaration","scope":6663,"src":"7258:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6529,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6532,"mutability":"mutable","name":"y","nameLocation":"7277:1:24","nodeType":"VariableDeclaration","scope":6663,"src":"7269:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6531,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6534,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:24","nodeType":"VariableDeclaration","scope":6663,"src":"7280:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6533,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:24"},"returnParameters":{"id":6538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6537,"mutability":"mutable","name":"result","nameLocation":"7332:6:24","nodeType":"VariableDeclaration","scope":6663,"src":"7324:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6536,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:24"},"scope":7757,"src":"7242:3683:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6699,"nodeType":"Block","src":"11164:128:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6679,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"11188:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6680,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"11191:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6681,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"11194:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6678,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6663,6700],"referencedDeclaration":6663,"src":"11181:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6686,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"11242:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}],"id":6685,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"11225:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6148_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6689,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"11262:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6690,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"11265:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6691,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"11268:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6688,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6683,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"11209:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"11209:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6677,"id":6698,"nodeType":"Return","src":"11174:111:24"}]},"documentation":{"id":6664,"nodeType":"StructuredDocumentation","src":"10931:118:24","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6700,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:24","nodeType":"FunctionDefinition","parameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6666,"mutability":"mutable","name":"x","nameLocation":"11078:1:24","nodeType":"VariableDeclaration","scope":6700,"src":"11070:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6665,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6668,"mutability":"mutable","name":"y","nameLocation":"11089:1:24","nodeType":"VariableDeclaration","scope":6700,"src":"11081:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6667,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6670,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:24","nodeType":"VariableDeclaration","scope":6700,"src":"11092:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6669,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6673,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:24","nodeType":"VariableDeclaration","scope":6700,"src":"11113:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"},"typeName":{"id":6672,"nodeType":"UserDefinedTypeName","pathNode":{"id":6671,"name":"Rounding","nameLocations":["11113:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":6148,"src":"11113:8:24"},"referencedDeclaration":6148,"src":"11113:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:24"},"returnParameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6700,"src":"11155:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6675,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:24"},"scope":7757,"src":"11054:238:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6749,"nodeType":"Block","src":"11500:245:24","statements":[{"id":6748,"nodeType":"UncheckedBlock","src":"11510:229:24","statements":[{"assignments":[6713,6715],"declarations":[{"constant":false,"id":6713,"mutability":"mutable","name":"high","nameLocation":"11543:4:24","nodeType":"VariableDeclaration","scope":6748,"src":"11535:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6712,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6715,"mutability":"mutable","name":"low","nameLocation":"11557:3:24","nodeType":"VariableDeclaration","scope":6748,"src":"11549:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6714,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6720,"initialValue":{"arguments":[{"id":6717,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"11571:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6718,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"11574:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6716,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"11564:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"11594:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6723,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"11607:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6734,"nodeType":"IfStatement","src":"11590:86:24","trueBody":{"id":6733,"nodeType":"Block","src":"11610:66:24","statements":[{"expression":{"arguments":[{"expression":{"id":6729,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"11640:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:24","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4407,"src":"11640:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6726,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"11628:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4443,"src":"11628:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6732,"nodeType":"ExpressionStatement","src":"11628:33:24"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6735,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"11697:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":6736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6737,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"11712:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":6739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6742,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"11719:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6743,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"11726:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6711,"id":6747,"nodeType":"Return","src":"11689:39:24"}]}]},"documentation":{"id":6701,"nodeType":"StructuredDocumentation","src":"11298:111:24","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":6750,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:24","nodeType":"FunctionDefinition","parameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6703,"mutability":"mutable","name":"x","nameLocation":"11438:1:24","nodeType":"VariableDeclaration","scope":6750,"src":"11430:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6702,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6705,"mutability":"mutable","name":"y","nameLocation":"11449:1:24","nodeType":"VariableDeclaration","scope":6750,"src":"11441:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6704,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6707,"mutability":"mutable","name":"n","nameLocation":"11458:1:24","nodeType":"VariableDeclaration","scope":6750,"src":"11452:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6706,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:24"},"returnParameters":{"id":6711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"result","nameLocation":"11492:6:24","nodeType":"VariableDeclaration","scope":6750,"src":"11484:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6709,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:24"},"scope":7757,"src":"11414:331:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6788,"nodeType":"Block","src":"11963:113:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6766,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"11987:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6767,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"11990:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6768,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"11993:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6765,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[6750,6789],"referencedDeclaration":6750,"src":"11980:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6773,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"12031:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}],"id":6772,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"12014:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6148_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6776,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"12051:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6777,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"12054:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6779,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"12062:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6775,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6770,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"11998:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"11998:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6764,"id":6787,"nodeType":"Return","src":"11973:96:24"}]},"documentation":{"id":6751,"nodeType":"StructuredDocumentation","src":"11751:109:24","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":6789,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:24","nodeType":"FunctionDefinition","parameters":{"id":6761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"x","nameLocation":"11889:1:24","nodeType":"VariableDeclaration","scope":6789,"src":"11881:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6752,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6755,"mutability":"mutable","name":"y","nameLocation":"11900:1:24","nodeType":"VariableDeclaration","scope":6789,"src":"11892:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6754,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6757,"mutability":"mutable","name":"n","nameLocation":"11909:1:24","nodeType":"VariableDeclaration","scope":6789,"src":"11903:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6756,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6760,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:24","nodeType":"VariableDeclaration","scope":6789,"src":"11912:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"},"typeName":{"id":6759,"nodeType":"UserDefinedTypeName","pathNode":{"id":6758,"name":"Rounding","nameLocations":["11912:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":6148,"src":"11912:8:24"},"referencedDeclaration":6148,"src":"11912:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:24"},"returnParameters":{"id":6764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6789,"src":"11954:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6762,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:24"},"scope":7757,"src":"11865:211:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6885,"nodeType":"Block","src":"12710:1849:24","statements":[{"id":6884,"nodeType":"UncheckedBlock","src":"12720:1833:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6799,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"12748:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6804,"nodeType":"IfStatement","src":"12744:20:24","trueBody":{"expression":{"hexValue":"30","id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6798,"id":6803,"nodeType":"Return","src":"12756:8:24"}},{"assignments":[6806],"declarations":[{"constant":false,"id":6806,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:24","nodeType":"VariableDeclaration","scope":6884,"src":"13235:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6805,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6810,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"13255:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6808,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"13259:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:24"},{"assignments":[6812],"declarations":[{"constant":false,"id":6812,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:24","nodeType":"VariableDeclaration","scope":6884,"src":"13274:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6811,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6814,"initialValue":{"id":6813,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"13288:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:24"},{"assignments":[6816],"declarations":[{"constant":false,"id":6816,"mutability":"mutable","name":"x","nameLocation":"13432:1:24","nodeType":"VariableDeclaration","scope":6884,"src":"13425:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6815,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6818,"initialValue":{"hexValue":"30","id":6817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:24"},{"assignments":[6820],"declarations":[{"constant":false,"id":6820,"mutability":"mutable","name":"y","nameLocation":"13458:1:24","nodeType":"VariableDeclaration","scope":6884,"src":"13451:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6819,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6822,"initialValue":{"hexValue":"31","id":6821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:24"},{"body":{"id":6859,"nodeType":"Block","src":"13501:882:24","statements":[{"assignments":[6827],"declarations":[{"constant":false,"id":6827,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:24","nodeType":"VariableDeclaration","scope":6859,"src":"13519:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6826,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6831,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6828,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"13538:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6829,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"13544:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:24"},{"expression":{"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6832,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"13573:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6833,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"13578:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6834,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6835,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"13678:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6836,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"13923:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6837,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"13929:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6838,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"13941:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6843,"nodeType":"ExpressionStatement","src":"13572:395:24"},{"expression":{"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6844,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"13987:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6845,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"13990:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6846,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6847,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"14072:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6848,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"14326:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6849,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"14330:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6852,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"14341:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6850,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:24","typeDescriptions":{}}},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6858,"nodeType":"ExpressionStatement","src":"13986:382:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6823,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"13485:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6860,"nodeType":"WhileStatement","src":"13478:905:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6861,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"14401:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6866,"nodeType":"IfStatement","src":"14397:22:24","trueBody":{"expression":{"hexValue":"30","id":6864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6798,"id":6865,"nodeType":"Return","src":"14411:8:24"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6868,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"14470:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6871,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"14477:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:24","subExpression":{"id":6874,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"14490:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6872,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:24","typeDescriptions":{}}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"14502:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6878,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:24","typeDescriptions":{}}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6867,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"14462:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6798,"id":6883,"nodeType":"Return","src":"14455:50:24"}]}]},"documentation":{"id":6790,"nodeType":"StructuredDocumentation","src":"12082:553:24","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":6886,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:24","nodeType":"FunctionDefinition","parameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6792,"mutability":"mutable","name":"a","nameLocation":"12664:1:24","nodeType":"VariableDeclaration","scope":6886,"src":"12656:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6791,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6794,"mutability":"mutable","name":"n","nameLocation":"12675:1:24","nodeType":"VariableDeclaration","scope":6886,"src":"12667:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6793,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:24"},"returnParameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6886,"src":"12701:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6796,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:24"},"scope":7757,"src":"12640:1919:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6906,"nodeType":"Block","src":"15159:82:24","statements":[{"id":6905,"nodeType":"UncheckedBlock","src":"15169:66:24","statements":[{"expression":{"arguments":[{"id":6898,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"15212:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6899,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"15215:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":6900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6902,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"15222:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6896,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"15200:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7757_$","typeString":"type(library Math)"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:24","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6943,"src":"15200:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6895,"id":6904,"nodeType":"Return","src":"15193:31:24"}]}]},"documentation":{"id":6887,"nodeType":"StructuredDocumentation","src":"14565:514:24","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":6907,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:24","nodeType":"FunctionDefinition","parameters":{"id":6892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6889,"mutability":"mutable","name":"a","nameLocation":"15113:1:24","nodeType":"VariableDeclaration","scope":6907,"src":"15105:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6888,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6891,"mutability":"mutable","name":"p","nameLocation":"15124:1:24","nodeType":"VariableDeclaration","scope":6907,"src":"15116:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6890,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:24"},"returnParameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6907,"src":"15150:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6893,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:24"},"scope":7757,"src":"15084:157:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6942,"nodeType":"Block","src":"16011:174:24","statements":[{"assignments":[6920,6922],"declarations":[{"constant":false,"id":6920,"mutability":"mutable","name":"success","nameLocation":"16027:7:24","nodeType":"VariableDeclaration","scope":6942,"src":"16022:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6919,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6922,"mutability":"mutable","name":"result","nameLocation":"16044:6:24","nodeType":"VariableDeclaration","scope":6942,"src":"16036:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6921,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6928,"initialValue":{"arguments":[{"id":6924,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"16064:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6925,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"16067:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6926,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"16070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6923,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6967,7049],"referencedDeclaration":6967,"src":"16054:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:24"},{"condition":{"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:24","subExpression":{"id":6929,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"16087:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6939,"nodeType":"IfStatement","src":"16082:74:24","trueBody":{"id":6938,"nodeType":"Block","src":"16096:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":6934,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"16122:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4411,"src":"16122:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6931,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"16110:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4443,"src":"16110:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6937,"nodeType":"ExpressionStatement","src":"16110:35:24"}]}},{"expression":{"id":6940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"16172:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6918,"id":6941,"nodeType":"Return","src":"16165:13:24"}]},"documentation":{"id":6908,"nodeType":"StructuredDocumentation","src":"15247:678:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6943,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:24","nodeType":"FunctionDefinition","parameters":{"id":6915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"b","nameLocation":"15954:1:24","nodeType":"VariableDeclaration","scope":6943,"src":"15946:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6909,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6912,"mutability":"mutable","name":"e","nameLocation":"15965:1:24","nodeType":"VariableDeclaration","scope":6943,"src":"15957:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6911,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6914,"mutability":"mutable","name":"m","nameLocation":"15976:1:24","nodeType":"VariableDeclaration","scope":6943,"src":"15968:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6913,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:24"},"returnParameters":{"id":6918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6943,"src":"16002:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6916,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:24"},"scope":7757,"src":"15930:255:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6966,"nodeType":"Block","src":"17039:1493:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6957,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"17053:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6964,"nodeType":"IfStatement","src":"17049:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6956,"id":6963,"nodeType":"Return","src":"17061:17:24"}},{"AST":{"nativeSrc":"17113:1413:24","nodeType":"YulBlock","src":"17113:1413:24","statements":[{"nativeSrc":"17127:22:24","nodeType":"YulVariableDeclaration","src":"17127:22:24","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:24","nodeType":"YulLiteral","src":"17144:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:24","nodeType":"YulIdentifier","src":"17138:5:24"},"nativeSrc":"17138:11:24","nodeType":"YulFunctionCall","src":"17138:11:24"},"variables":[{"name":"ptr","nativeSrc":"17131:3:24","nodeType":"YulTypedName","src":"17131:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:24","nodeType":"YulIdentifier","src":"18057:3:24"},{"kind":"number","nativeSrc":"18062:4:24","nodeType":"YulLiteral","src":"18062:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:24","nodeType":"YulIdentifier","src":"18050:6:24"},"nativeSrc":"18050:17:24","nodeType":"YulFunctionCall","src":"18050:17:24"},"nativeSrc":"18050:17:24","nodeType":"YulExpressionStatement","src":"18050:17:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:24","nodeType":"YulIdentifier","src":"18091:3:24"},{"kind":"number","nativeSrc":"18096:4:24","nodeType":"YulLiteral","src":"18096:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:24","nodeType":"YulIdentifier","src":"18087:3:24"},"nativeSrc":"18087:14:24","nodeType":"YulFunctionCall","src":"18087:14:24"},{"kind":"number","nativeSrc":"18103:4:24","nodeType":"YulLiteral","src":"18103:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:24","nodeType":"YulIdentifier","src":"18080:6:24"},"nativeSrc":"18080:28:24","nodeType":"YulFunctionCall","src":"18080:28:24"},"nativeSrc":"18080:28:24","nodeType":"YulExpressionStatement","src":"18080:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:24","nodeType":"YulIdentifier","src":"18132:3:24"},{"kind":"number","nativeSrc":"18137:4:24","nodeType":"YulLiteral","src":"18137:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:24","nodeType":"YulIdentifier","src":"18128:3:24"},"nativeSrc":"18128:14:24","nodeType":"YulFunctionCall","src":"18128:14:24"},{"kind":"number","nativeSrc":"18144:4:24","nodeType":"YulLiteral","src":"18144:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:24","nodeType":"YulIdentifier","src":"18121:6:24"},"nativeSrc":"18121:28:24","nodeType":"YulFunctionCall","src":"18121:28:24"},"nativeSrc":"18121:28:24","nodeType":"YulExpressionStatement","src":"18121:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:24","nodeType":"YulIdentifier","src":"18173:3:24"},{"kind":"number","nativeSrc":"18178:4:24","nodeType":"YulLiteral","src":"18178:4:24","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:24","nodeType":"YulIdentifier","src":"18169:3:24"},"nativeSrc":"18169:14:24","nodeType":"YulFunctionCall","src":"18169:14:24"},{"name":"b","nativeSrc":"18185:1:24","nodeType":"YulIdentifier","src":"18185:1:24"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:24","nodeType":"YulIdentifier","src":"18162:6:24"},"nativeSrc":"18162:25:24","nodeType":"YulFunctionCall","src":"18162:25:24"},"nativeSrc":"18162:25:24","nodeType":"YulExpressionStatement","src":"18162:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:24","nodeType":"YulIdentifier","src":"18211:3:24"},{"kind":"number","nativeSrc":"18216:4:24","nodeType":"YulLiteral","src":"18216:4:24","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:24","nodeType":"YulIdentifier","src":"18207:3:24"},"nativeSrc":"18207:14:24","nodeType":"YulFunctionCall","src":"18207:14:24"},{"name":"e","nativeSrc":"18223:1:24","nodeType":"YulIdentifier","src":"18223:1:24"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:24","nodeType":"YulIdentifier","src":"18200:6:24"},"nativeSrc":"18200:25:24","nodeType":"YulFunctionCall","src":"18200:25:24"},"nativeSrc":"18200:25:24","nodeType":"YulExpressionStatement","src":"18200:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:24","nodeType":"YulIdentifier","src":"18249:3:24"},{"kind":"number","nativeSrc":"18254:4:24","nodeType":"YulLiteral","src":"18254:4:24","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:24","nodeType":"YulIdentifier","src":"18245:3:24"},"nativeSrc":"18245:14:24","nodeType":"YulFunctionCall","src":"18245:14:24"},{"name":"m","nativeSrc":"18261:1:24","nodeType":"YulIdentifier","src":"18261:1:24"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:24","nodeType":"YulIdentifier","src":"18238:6:24"},"nativeSrc":"18238:25:24","nodeType":"YulFunctionCall","src":"18238:25:24"},"nativeSrc":"18238:25:24","nodeType":"YulExpressionStatement","src":"18238:25:24"},{"nativeSrc":"18425:57:24","nodeType":"YulAssignment","src":"18425:57:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:24","nodeType":"YulIdentifier","src":"18447:3:24"},"nativeSrc":"18447:5:24","nodeType":"YulFunctionCall","src":"18447:5:24"},{"kind":"number","nativeSrc":"18454:4:24","nodeType":"YulLiteral","src":"18454:4:24","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:24","nodeType":"YulIdentifier","src":"18460:3:24"},{"kind":"number","nativeSrc":"18465:4:24","nodeType":"YulLiteral","src":"18465:4:24","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:24","nodeType":"YulLiteral","src":"18471:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:24","nodeType":"YulLiteral","src":"18477:4:24","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:24","nodeType":"YulIdentifier","src":"18436:10:24"},"nativeSrc":"18436:46:24","nodeType":"YulFunctionCall","src":"18436:46:24"},"variableNames":[{"name":"success","nativeSrc":"18425:7:24","nodeType":"YulIdentifier","src":"18425:7:24"}]},{"nativeSrc":"18495:21:24","nodeType":"YulAssignment","src":"18495:21:24","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:24","nodeType":"YulLiteral","src":"18511:4:24","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:24","nodeType":"YulIdentifier","src":"18505:5:24"},"nativeSrc":"18505:11:24","nodeType":"YulFunctionCall","src":"18505:11:24"},"variableNames":[{"name":"result","nativeSrc":"18495:6:24","nodeType":"YulIdentifier","src":"18495:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6946,"isOffset":false,"isSlot":false,"src":"18185:1:24","valueSize":1},{"declaration":6948,"isOffset":false,"isSlot":false,"src":"18223:1:24","valueSize":1},{"declaration":6950,"isOffset":false,"isSlot":false,"src":"18261:1:24","valueSize":1},{"declaration":6955,"isOffset":false,"isSlot":false,"src":"18495:6:24","valueSize":1},{"declaration":6953,"isOffset":false,"isSlot":false,"src":"18425:7:24","valueSize":1}],"flags":["memory-safe"],"id":6965,"nodeType":"InlineAssembly","src":"17088:1438:24"}]},"documentation":{"id":6944,"nodeType":"StructuredDocumentation","src":"16191:738:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6967,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:24","nodeType":"FunctionDefinition","parameters":{"id":6951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6946,"mutability":"mutable","name":"b","nameLocation":"16961:1:24","nodeType":"VariableDeclaration","scope":6967,"src":"16953:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6945,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6948,"mutability":"mutable","name":"e","nameLocation":"16972:1:24","nodeType":"VariableDeclaration","scope":6967,"src":"16964:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6947,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6950,"mutability":"mutable","name":"m","nameLocation":"16983:1:24","nodeType":"VariableDeclaration","scope":6967,"src":"16975:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6949,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:24"},"returnParameters":{"id":6956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"success","nameLocation":"17014:7:24","nodeType":"VariableDeclaration","scope":6967,"src":"17009:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6952,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6955,"mutability":"mutable","name":"result","nameLocation":"17031:6:24","nodeType":"VariableDeclaration","scope":6967,"src":"17023:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6954,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:24"},"scope":7757,"src":"16934:1598:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7002,"nodeType":"Block","src":"18729:179:24","statements":[{"assignments":[6980,6982],"declarations":[{"constant":false,"id":6980,"mutability":"mutable","name":"success","nameLocation":"18745:7:24","nodeType":"VariableDeclaration","scope":7002,"src":"18740:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6979,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6982,"mutability":"mutable","name":"result","nameLocation":"18767:6:24","nodeType":"VariableDeclaration","scope":7002,"src":"18754:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6981,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6988,"initialValue":{"arguments":[{"id":6984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"18787:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6985,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"18790:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6986,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"18793:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6983,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6967,7049],"referencedDeclaration":7049,"src":"18777:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:24"},{"condition":{"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:24","subExpression":{"id":6989,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"18810:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6999,"nodeType":"IfStatement","src":"18805:74:24","trueBody":{"id":6998,"nodeType":"Block","src":"18819:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":6994,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"18845:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4411,"src":"18845:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6991,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"18833:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4444_$","typeString":"type(library Panic)"}},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4443,"src":"18833:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6997,"nodeType":"ExpressionStatement","src":"18833:35:24"}]}},{"expression":{"id":7000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"18895:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6978,"id":7001,"nodeType":"Return","src":"18888:13:24"}]},"documentation":{"id":6968,"nodeType":"StructuredDocumentation","src":"18538:85:24","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":7003,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:24","nodeType":"FunctionDefinition","parameters":{"id":6975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6970,"mutability":"mutable","name":"b","nameLocation":"18657:1:24","nodeType":"VariableDeclaration","scope":7003,"src":"18644:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6969,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6972,"mutability":"mutable","name":"e","nameLocation":"18673:1:24","nodeType":"VariableDeclaration","scope":7003,"src":"18660:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6971,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6974,"mutability":"mutable","name":"m","nameLocation":"18689:1:24","nodeType":"VariableDeclaration","scope":7003,"src":"18676:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6973,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:24"},"returnParameters":{"id":6978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7003,"src":"18715:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6976,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:24"},"scope":7757,"src":"18628:280:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7048,"nodeType":"Block","src":"19162:771:24","statements":[{"condition":{"arguments":[{"id":7018,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"19187:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7017,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"19176:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7027,"nodeType":"IfStatement","src":"19172:47:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":7023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":7021,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":7025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":7016,"id":7026,"nodeType":"Return","src":"19191:28:24"}},{"assignments":[7029],"declarations":[{"constant":false,"id":7029,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:24","nodeType":"VariableDeclaration","scope":7048,"src":"19230:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7028,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7032,"initialValue":{"expression":{"id":7030,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"19245:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:24","memberName":"length","nodeType":"MemberAccess","src":"19245:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:24"},{"expression":{"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"19335:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7036,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"19361:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:24","memberName":"length","nodeType":"MemberAccess","src":"19361:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7038,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"19371:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:24","memberName":"length","nodeType":"MemberAccess","src":"19371:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7040,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"19381:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7041,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"19387:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7042,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"19390:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7043,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"19393:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7034,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7046,"nodeType":"ExpressionStatement","src":"19335:60:24"},{"AST":{"nativeSrc":"19431:496:24","nodeType":"YulBlock","src":"19431:496:24","statements":[{"nativeSrc":"19445:32:24","nodeType":"YulVariableDeclaration","src":"19445:32:24","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:24","nodeType":"YulIdentifier","src":"19464:6:24"},{"kind":"number","nativeSrc":"19472:4:24","nodeType":"YulLiteral","src":"19472:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:24","nodeType":"YulIdentifier","src":"19460:3:24"},"nativeSrc":"19460:17:24","nodeType":"YulFunctionCall","src":"19460:17:24"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:24","nodeType":"YulTypedName","src":"19449:7:24","type":""}]},{"nativeSrc":"19567:73:24","nodeType":"YulAssignment","src":"19567:73:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:24","nodeType":"YulIdentifier","src":"19589:3:24"},"nativeSrc":"19589:5:24","nodeType":"YulFunctionCall","src":"19589:5:24"},{"kind":"number","nativeSrc":"19596:4:24","nodeType":"YulLiteral","src":"19596:4:24","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:24","nodeType":"YulIdentifier","src":"19602:7:24"},{"arguments":[{"name":"result","nativeSrc":"19617:6:24","nodeType":"YulIdentifier","src":"19617:6:24"}],"functionName":{"name":"mload","nativeSrc":"19611:5:24","nodeType":"YulIdentifier","src":"19611:5:24"},"nativeSrc":"19611:13:24","nodeType":"YulFunctionCall","src":"19611:13:24"},{"name":"dataPtr","nativeSrc":"19626:7:24","nodeType":"YulIdentifier","src":"19626:7:24"},{"name":"mLen","nativeSrc":"19635:4:24","nodeType":"YulIdentifier","src":"19635:4:24"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:24","nodeType":"YulIdentifier","src":"19578:10:24"},"nativeSrc":"19578:62:24","nodeType":"YulFunctionCall","src":"19578:62:24"},"variableNames":[{"name":"success","nativeSrc":"19567:7:24","nodeType":"YulIdentifier","src":"19567:7:24"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:24","nodeType":"YulIdentifier","src":"19796:6:24"},{"name":"mLen","nativeSrc":"19804:4:24","nodeType":"YulIdentifier","src":"19804:4:24"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:24","nodeType":"YulIdentifier","src":"19789:6:24"},"nativeSrc":"19789:20:24","nodeType":"YulFunctionCall","src":"19789:20:24"},"nativeSrc":"19789:20:24","nodeType":"YulExpressionStatement","src":"19789:20:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:24","nodeType":"YulLiteral","src":"19892:4:24","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:24","nodeType":"YulIdentifier","src":"19902:7:24"},{"name":"mLen","nativeSrc":"19911:4:24","nodeType":"YulIdentifier","src":"19911:4:24"}],"functionName":{"name":"add","nativeSrc":"19898:3:24","nodeType":"YulIdentifier","src":"19898:3:24"},"nativeSrc":"19898:18:24","nodeType":"YulFunctionCall","src":"19898:18:24"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:24","nodeType":"YulIdentifier","src":"19885:6:24"},"nativeSrc":"19885:32:24","nodeType":"YulFunctionCall","src":"19885:32:24"},"nativeSrc":"19885:32:24","nodeType":"YulExpressionStatement","src":"19885:32:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":7029,"isOffset":false,"isSlot":false,"src":"19635:4:24","valueSize":1},{"declaration":7029,"isOffset":false,"isSlot":false,"src":"19804:4:24","valueSize":1},{"declaration":7029,"isOffset":false,"isSlot":false,"src":"19911:4:24","valueSize":1},{"declaration":7015,"isOffset":false,"isSlot":false,"src":"19464:6:24","valueSize":1},{"declaration":7015,"isOffset":false,"isSlot":false,"src":"19617:6:24","valueSize":1},{"declaration":7015,"isOffset":false,"isSlot":false,"src":"19796:6:24","valueSize":1},{"declaration":7013,"isOffset":false,"isSlot":false,"src":"19567:7:24","valueSize":1}],"flags":["memory-safe"],"id":7047,"nodeType":"InlineAssembly","src":"19406:521:24"}]},"documentation":{"id":7004,"nodeType":"StructuredDocumentation","src":"18914:88:24","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":7049,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:24","nodeType":"FunctionDefinition","parameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7006,"mutability":"mutable","name":"b","nameLocation":"19048:1:24","nodeType":"VariableDeclaration","scope":7049,"src":"19035:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7005,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7008,"mutability":"mutable","name":"e","nameLocation":"19072:1:24","nodeType":"VariableDeclaration","scope":7049,"src":"19059:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7007,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7010,"mutability":"mutable","name":"m","nameLocation":"19096:1:24","nodeType":"VariableDeclaration","scope":7049,"src":"19083:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7009,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:24"},"returnParameters":{"id":7016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7013,"mutability":"mutable","name":"success","nameLocation":"19132:7:24","nodeType":"VariableDeclaration","scope":7049,"src":"19127:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7012,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7015,"mutability":"mutable","name":"result","nameLocation":"19154:6:24","nodeType":"VariableDeclaration","scope":7049,"src":"19141:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7014,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:24"},"scope":7757,"src":"19007:926:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7081,"nodeType":"Block","src":"20088:176:24","statements":[{"body":{"id":7077,"nodeType":"Block","src":"20145:92:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7068,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"20163:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7070,"indexExpression":{"id":7069,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"20173:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7076,"nodeType":"IfStatement","src":"20159:68:24","trueBody":{"id":7075,"nodeType":"Block","src":"20182:45:24","statements":[{"expression":{"hexValue":"66616c7365","id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7056,"id":7074,"nodeType":"Return","src":"20200:12:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7061,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"20118:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7062,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"20122:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:24","memberName":"length","nodeType":"MemberAccess","src":"20122:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7078,"initializationExpression":{"assignments":[7058],"declarations":[{"constant":false,"id":7058,"mutability":"mutable","name":"i","nameLocation":"20111:1:24","nodeType":"VariableDeclaration","scope":7078,"src":"20103:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7057,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7060,"initialValue":{"hexValue":"30","id":7059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:24","subExpression":{"id":7065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"20142:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7067,"nodeType":"ExpressionStatement","src":"20140:3:24"},"nodeType":"ForStatement","src":"20098:139:24"},{"expression":{"hexValue":"74727565","id":7079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7056,"id":7080,"nodeType":"Return","src":"20246:11:24"}]},"documentation":{"id":7050,"nodeType":"StructuredDocumentation","src":"19939:72:24","text":" @dev Returns whether the provided byte array is zero."},"id":7082,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:24","nodeType":"FunctionDefinition","parameters":{"id":7053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:24","nodeType":"VariableDeclaration","scope":7082,"src":"20036:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7051,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:24"},"returnParameters":{"id":7056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7082,"src":"20082:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7054,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:24"},"scope":7757,"src":"20016:248:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7300,"nodeType":"Block","src":"20624:5124:24","statements":[{"id":7299,"nodeType":"UncheckedBlock","src":"20634:5108:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7090,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"20728:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":7091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7096,"nodeType":"IfStatement","src":"20724:53:24","trueBody":{"id":7095,"nodeType":"Block","src":"20736:41:24","statements":[{"expression":{"id":7093,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"20761:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7089,"id":7094,"nodeType":"Return","src":"20754:8:24"}]}},{"assignments":[7098],"declarations":[{"constant":false,"id":7098,"mutability":"mutable","name":"aa","nameLocation":"21712:2:24","nodeType":"VariableDeclaration","scope":7299,"src":"21704:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7097,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7100,"initialValue":{"id":7099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"21717:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:24"},{"assignments":[7102],"declarations":[{"constant":false,"id":7102,"mutability":"mutable","name":"xn","nameLocation":"21740:2:24","nodeType":"VariableDeclaration","scope":7299,"src":"21732:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7101,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7104,"initialValue":{"hexValue":"31","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7105,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"21765:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":7108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":7107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":7109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7120,"nodeType":"IfStatement","src":"21761:92:24","trueBody":{"id":7119,"nodeType":"Block","src":"21783:70:24","statements":[{"expression":{"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7111,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"21801:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":7112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7114,"nodeType":"ExpressionStatement","src":"21801:10:24"},{"expression":{"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7115,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"21829:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":7116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7118,"nodeType":"ExpressionStatement","src":"21829:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7121,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"21870:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":7124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":7123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":7125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7136,"nodeType":"IfStatement","src":"21866:90:24","trueBody":{"id":7135,"nodeType":"Block","src":"21887:69:24","statements":[{"expression":{"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7127,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"21905:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":7128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7130,"nodeType":"ExpressionStatement","src":"21905:9:24"},{"expression":{"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7131,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"21932:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":7132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7134,"nodeType":"ExpressionStatement","src":"21932:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7137,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"21973:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":7140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":7139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":7141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7152,"nodeType":"IfStatement","src":"21969:90:24","trueBody":{"id":7151,"nodeType":"Block","src":"21990:69:24","statements":[{"expression":{"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7143,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"22008:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":7144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7146,"nodeType":"ExpressionStatement","src":"22008:9:24"},{"expression":{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7147,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"22035:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":7148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7150,"nodeType":"ExpressionStatement","src":"22035:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7153,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"22076:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":7156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":7155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":7157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7168,"nodeType":"IfStatement","src":"22072:89:24","trueBody":{"id":7167,"nodeType":"Block","src":"22093:68:24","statements":[{"expression":{"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7159,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"22111:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":7160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7162,"nodeType":"ExpressionStatement","src":"22111:9:24"},{"expression":{"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7163,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"22138:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":7164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7166,"nodeType":"ExpressionStatement","src":"22138:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7169,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"22178:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":7171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":7173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7184,"nodeType":"IfStatement","src":"22174:87:24","trueBody":{"id":7183,"nodeType":"Block","src":"22194:67:24","statements":[{"expression":{"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7175,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"22212:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":7176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7178,"nodeType":"ExpressionStatement","src":"22212:8:24"},{"expression":{"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7179,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"22238:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7182,"nodeType":"ExpressionStatement","src":"22238:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7185,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"22278:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":7188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":7189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7200,"nodeType":"IfStatement","src":"22274:87:24","trueBody":{"id":7199,"nodeType":"Block","src":"22294:67:24","statements":[{"expression":{"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7191,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"22312:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":7192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7194,"nodeType":"ExpressionStatement","src":"22312:8:24"},{"expression":{"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7195,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"22338:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":7196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7198,"nodeType":"ExpressionStatement","src":"22338:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7201,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"22378:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":7204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":7205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7212,"nodeType":"IfStatement","src":"22374:61:24","trueBody":{"id":7211,"nodeType":"Block","src":"22394:41:24","statements":[{"expression":{"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7207,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"22412:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":7208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7210,"nodeType":"ExpressionStatement","src":"22412:8:24"}]}},{"expression":{"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7213,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"22855:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7215,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"22865:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7221,"nodeType":"ExpressionStatement","src":"22855:18:24"},{"expression":{"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7222,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"24760:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7223,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"24766:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7224,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"24771:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7225,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"24775:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7232,"nodeType":"ExpressionStatement","src":"24760:23:24"},{"expression":{"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7233,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"24869:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7234,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"24875:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"24880:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7236,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"24884:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7243,"nodeType":"ExpressionStatement","src":"24869:23:24"},{"expression":{"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7244,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"24980:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7245,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"24986:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"24991:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7247,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"24995:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7254,"nodeType":"ExpressionStatement","src":"24980:23:24"},{"expression":{"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7255,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25089:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7256,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25095:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7257,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"25100:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7258,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25104:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7265,"nodeType":"ExpressionStatement","src":"25089:23:24"},{"expression":{"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7266,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25199:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7267,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25205:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7268,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"25210:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7269,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25214:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7276,"nodeType":"ExpressionStatement","src":"25199:23:24"},{"expression":{"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7277,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25309:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7278,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25315:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"25320:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7280,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25324:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7287,"nodeType":"ExpressionStatement","src":"25309:23:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7288,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25698:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7291,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25719:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7292,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"25724:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7293,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"25728:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7289,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"25703:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"25703:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7089,"id":7298,"nodeType":"Return","src":"25691:40:24"}]}]},"documentation":{"id":7083,"nodeType":"StructuredDocumentation","src":"20270:292:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":7301,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:24","nodeType":"FunctionDefinition","parameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"a","nameLocation":"20589:1:24","nodeType":"VariableDeclaration","scope":7301,"src":"20581:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7084,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:24"},"returnParameters":{"id":7089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7301,"src":"20615:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7087,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:24"},"scope":7757,"src":"20567:5181:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7334,"nodeType":"Block","src":"25921:171:24","statements":[{"id":7333,"nodeType":"UncheckedBlock","src":"25931:155:24","statements":[{"assignments":[7313],"declarations":[{"constant":false,"id":7313,"mutability":"mutable","name":"result","nameLocation":"25963:6:24","nodeType":"VariableDeclaration","scope":7333,"src":"25955:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7312,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7317,"initialValue":{"arguments":[{"id":7315,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"25977:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7314,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[7301,7335],"referencedDeclaration":7301,"src":"25972:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"26000:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7322,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"26042:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}],"id":7321,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"26025:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6148_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"26055:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7325,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"26064:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"26073:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7319,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"26009:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"26009:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7311,"id":7332,"nodeType":"Return","src":"25993:82:24"}]}]},"documentation":{"id":7302,"nodeType":"StructuredDocumentation","src":"25754:86:24","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":7335,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:24","nodeType":"FunctionDefinition","parameters":{"id":7308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7304,"mutability":"mutable","name":"a","nameLocation":"25867:1:24","nodeType":"VariableDeclaration","scope":7335,"src":"25859:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7303,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7307,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:24","nodeType":"VariableDeclaration","scope":7335,"src":"25870:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"},"typeName":{"id":7306,"nodeType":"UserDefinedTypeName","pathNode":{"id":7305,"name":"Rounding","nameLocations":["25870:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":6148,"src":"25870:8:24"},"referencedDeclaration":6148,"src":"25870:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:24"},"returnParameters":{"id":7311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7335,"src":"25912:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7309,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:24"},"scope":7757,"src":"25845:247:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7425,"nodeType":"Block","src":"26281:2334:24","statements":[{"expression":{"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7343,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"26363:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7346,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"26383:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7344,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"26367:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"26367:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7353,"nodeType":"ExpressionStatement","src":"26363:64:24"},{"expression":{"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7354,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"26503:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7357,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"26525:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7358,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"26530:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7355,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"26508:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"26508:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7367,"nodeType":"ExpressionStatement","src":"26503:56:24"},{"expression":{"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7368,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"26634:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7371,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"26656:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7372,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"26661:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7369,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"26639:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"26639:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:24","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7381,"nodeType":"ExpressionStatement","src":"26634:48:24"},{"expression":{"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7382,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"26757:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7385,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"26779:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7386,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"26784:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7383,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"26762:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"26762:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7395,"nodeType":"ExpressionStatement","src":"26757:44:24"},{"expression":{"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7396,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"26874:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7399,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"26896:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7400,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"26901:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7397,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"26879:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"26879:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7409,"nodeType":"ExpressionStatement","src":"26874:42:24"},{"expression":{"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7410,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"26988:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7413,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"27010:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7414,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"27015:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":7417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7411,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"26993:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"26993:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7423,"nodeType":"ExpressionStatement","src":"26988:41:24"},{"AST":{"nativeSrc":"28490:119:24","nodeType":"YulBlock","src":"28490:119:24","statements":[{"nativeSrc":"28504:95:24","nodeType":"YulAssignment","src":"28504:95:24","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:24","nodeType":"YulIdentifier","src":"28512:1:24"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:24","nodeType":"YulIdentifier","src":"28524:1:24"},{"name":"x","nativeSrc":"28527:1:24","nodeType":"YulIdentifier","src":"28527:1:24"}],"functionName":{"name":"shr","nativeSrc":"28520:3:24","nodeType":"YulIdentifier","src":"28520:3:24"},"nativeSrc":"28520:9:24","nodeType":"YulFunctionCall","src":"28520:9:24"},{"kind":"number","nativeSrc":"28531:66:24","nodeType":"YulLiteral","src":"28531:66:24","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:24","nodeType":"YulIdentifier","src":"28515:4:24"},"nativeSrc":"28515:83:24","nodeType":"YulFunctionCall","src":"28515:83:24"}],"functionName":{"name":"or","nativeSrc":"28509:2:24","nodeType":"YulIdentifier","src":"28509:2:24"},"nativeSrc":"28509:90:24","nodeType":"YulFunctionCall","src":"28509:90:24"},"variableNames":[{"name":"r","nativeSrc":"28504:1:24","nodeType":"YulIdentifier","src":"28504:1:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7341,"isOffset":false,"isSlot":false,"src":"28504:1:24","valueSize":1},{"declaration":7341,"isOffset":false,"isSlot":false,"src":"28512:1:24","valueSize":1},{"declaration":7341,"isOffset":false,"isSlot":false,"src":"28524:1:24","valueSize":1},{"declaration":7338,"isOffset":false,"isSlot":false,"src":"28527:1:24","valueSize":1}],"flags":["memory-safe"],"id":7424,"nodeType":"InlineAssembly","src":"28465:144:24"}]},"documentation":{"id":7336,"nodeType":"StructuredDocumentation","src":"26098:119:24","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7426,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:24","nodeType":"FunctionDefinition","parameters":{"id":7339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7338,"mutability":"mutable","name":"x","nameLocation":"26244:1:24","nodeType":"VariableDeclaration","scope":7426,"src":"26236:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7337,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:24"},"returnParameters":{"id":7342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7341,"mutability":"mutable","name":"r","nameLocation":"26278:1:24","nodeType":"VariableDeclaration","scope":7426,"src":"26270:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7340,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:24"},"scope":7757,"src":"26222:2393:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7459,"nodeType":"Block","src":"28848:175:24","statements":[{"id":7458,"nodeType":"UncheckedBlock","src":"28858:159:24","statements":[{"assignments":[7438],"declarations":[{"constant":false,"id":7438,"mutability":"mutable","name":"result","nameLocation":"28890:6:24","nodeType":"VariableDeclaration","scope":7458,"src":"28882:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7437,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7442,"initialValue":{"arguments":[{"id":7440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"28904:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7439,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7426,7460],"referencedDeclaration":7426,"src":"28899:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"28931:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7447,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"28973:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}],"id":7446,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"28956:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6148_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"28991:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"29000:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7444,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"28940:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"28940:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7436,"id":7457,"nodeType":"Return","src":"28924:82:24"}]}]},"documentation":{"id":7427,"nodeType":"StructuredDocumentation","src":"28621:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7460,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:24","nodeType":"FunctionDefinition","parameters":{"id":7433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7429,"mutability":"mutable","name":"value","nameLocation":"28790:5:24","nodeType":"VariableDeclaration","scope":7460,"src":"28782:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7428,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7432,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:24","nodeType":"VariableDeclaration","scope":7460,"src":"28797:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"},"typeName":{"id":7431,"nodeType":"UserDefinedTypeName","pathNode":{"id":7430,"name":"Rounding","nameLocations":["28797:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":6148,"src":"28797:8:24"},"referencedDeclaration":6148,"src":"28797:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:24"},"returnParameters":{"id":7436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7460,"src":"28839:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7434,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:24"},"scope":7757,"src":"28768:255:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7588,"nodeType":"Block","src":"29216:854:24","statements":[{"assignments":[7469],"declarations":[{"constant":false,"id":7469,"mutability":"mutable","name":"result","nameLocation":"29234:6:24","nodeType":"VariableDeclaration","scope":7588,"src":"29226:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7468,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7471,"initialValue":{"hexValue":"30","id":7470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:24"},{"id":7585,"nodeType":"UncheckedBlock","src":"29254:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29282:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7488,"nodeType":"IfStatement","src":"29278:103:24","trueBody":{"id":7487,"nodeType":"Block","src":"29301:80:24","statements":[{"expression":{"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29319:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7482,"nodeType":"ExpressionStatement","src":"29319:17:24"},{"expression":{"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"29354:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7486,"nodeType":"ExpressionStatement","src":"29354:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29398:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7505,"nodeType":"IfStatement","src":"29394:103:24","trueBody":{"id":7504,"nodeType":"Block","src":"29417:80:24","statements":[{"expression":{"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29435:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7499,"nodeType":"ExpressionStatement","src":"29435:17:24"},{"expression":{"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"29470:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7503,"nodeType":"ExpressionStatement","src":"29470:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29514:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7522,"nodeType":"IfStatement","src":"29510:103:24","trueBody":{"id":7521,"nodeType":"Block","src":"29533:80:24","statements":[{"expression":{"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29551:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7516,"nodeType":"ExpressionStatement","src":"29551:17:24"},{"expression":{"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7517,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"29586:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":7518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7520,"nodeType":"ExpressionStatement","src":"29586:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29630:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7539,"nodeType":"IfStatement","src":"29626:100:24","trueBody":{"id":7538,"nodeType":"Block","src":"29648:78:24","statements":[{"expression":{"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29666:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7533,"nodeType":"ExpressionStatement","src":"29666:16:24"},{"expression":{"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"29700:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7537,"nodeType":"ExpressionStatement","src":"29700:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29743:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7556,"nodeType":"IfStatement","src":"29739:100:24","trueBody":{"id":7555,"nodeType":"Block","src":"29761:78:24","statements":[{"expression":{"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29779:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7550,"nodeType":"ExpressionStatement","src":"29779:16:24"},{"expression":{"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"29813:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7554,"nodeType":"ExpressionStatement","src":"29813:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29856:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7573,"nodeType":"IfStatement","src":"29852:100:24","trueBody":{"id":7572,"nodeType":"Block","src":"29874:78:24","statements":[{"expression":{"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29892:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7567,"nodeType":"ExpressionStatement","src":"29892:16:24"},{"expression":{"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"29926:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7571,"nodeType":"ExpressionStatement","src":"29926:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"29969:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":7577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":7576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7584,"nodeType":"IfStatement","src":"29965:66:24","trueBody":{"id":7583,"nodeType":"Block","src":"29987:44:24","statements":[{"expression":{"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"30005:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7582,"nodeType":"ExpressionStatement","src":"30005:11:24"}]}}]},{"expression":{"id":7586,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"30057:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7467,"id":7587,"nodeType":"Return","src":"30050:13:24"}]},"documentation":{"id":7461,"nodeType":"StructuredDocumentation","src":"29029:120:24","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7589,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:24","nodeType":"FunctionDefinition","parameters":{"id":7464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7463,"mutability":"mutable","name":"value","nameLocation":"29177:5:24","nodeType":"VariableDeclaration","scope":7589,"src":"29169:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7462,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:24"},"returnParameters":{"id":7467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7589,"src":"29207:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7465,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:24"},"scope":7757,"src":"29154:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7622,"nodeType":"Block","src":"30305:177:24","statements":[{"id":7621,"nodeType":"UncheckedBlock","src":"30315:161:24","statements":[{"assignments":[7601],"declarations":[{"constant":false,"id":7601,"mutability":"mutable","name":"result","nameLocation":"30347:6:24","nodeType":"VariableDeclaration","scope":7621,"src":"30339:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7600,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7605,"initialValue":{"arguments":[{"id":7603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"30362:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7602,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[7589,7623],"referencedDeclaration":7589,"src":"30356:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"30389:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7610,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"30431:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}],"id":7609,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"30414:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6148_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":7613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"30450:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7592,"src":"30459:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7607,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"30398:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"30398:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7599,"id":7620,"nodeType":"Return","src":"30382:83:24"}]}]},"documentation":{"id":7590,"nodeType":"StructuredDocumentation","src":"30076:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7623,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:24","nodeType":"FunctionDefinition","parameters":{"id":7596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7592,"mutability":"mutable","name":"value","nameLocation":"30247:5:24","nodeType":"VariableDeclaration","scope":7623,"src":"30239:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7591,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7595,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:24","nodeType":"VariableDeclaration","scope":7623,"src":"30254:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"},"typeName":{"id":7594,"nodeType":"UserDefinedTypeName","pathNode":{"id":7593,"name":"Rounding","nameLocations":["30254:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":6148,"src":"30254:8:24"},"referencedDeclaration":6148,"src":"30254:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:24"},"returnParameters":{"id":7599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7623,"src":"30296:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7597,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:24"},"scope":7757,"src":"30224:258:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7699,"nodeType":"Block","src":"30800:675:24","statements":[{"expression":{"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7631,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"30882:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7634,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"30902:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7632,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"30886:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"30886:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7641,"nodeType":"ExpressionStatement","src":"30882:64:24"},{"expression":{"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7642,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31022:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7645,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"31044:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7646,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31049:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7648,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7643,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"31027:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"31027:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7655,"nodeType":"ExpressionStatement","src":"31022:56:24"},{"expression":{"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7656,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31153:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7659,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"31175:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7660,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31180:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7657,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"31158:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"31158:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:24","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7669,"nodeType":"ExpressionStatement","src":"31153:48:24"},{"expression":{"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7670,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31276:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7673,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"31298:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7674,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31303:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7676,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7671,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"31281:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"31281:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7683,"nodeType":"ExpressionStatement","src":"31276:44:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7684,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31426:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7690,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"31453:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7691,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"31458:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7688,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"31436:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"31436:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7630,"id":7698,"nodeType":"Return","src":"31418:50:24"}]},"documentation":{"id":7624,"nodeType":"StructuredDocumentation","src":"30488:246:24","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":7700,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:24","nodeType":"FunctionDefinition","parameters":{"id":7627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7626,"mutability":"mutable","name":"x","nameLocation":"30763:1:24","nodeType":"VariableDeclaration","scope":7700,"src":"30755:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7625,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:24"},"returnParameters":{"id":7630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7629,"mutability":"mutable","name":"r","nameLocation":"30797:1:24","nodeType":"VariableDeclaration","scope":7700,"src":"30789:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7628,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:24"},"scope":7757,"src":"30739:736:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7736,"nodeType":"Block","src":"31712:184:24","statements":[{"id":7735,"nodeType":"UncheckedBlock","src":"31722:168:24","statements":[{"assignments":[7712],"declarations":[{"constant":false,"id":7712,"mutability":"mutable","name":"result","nameLocation":"31754:6:24","nodeType":"VariableDeclaration","scope":7735,"src":"31746:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7711,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7716,"initialValue":{"arguments":[{"id":7714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"31770:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7713,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[7700,7737],"referencedDeclaration":7700,"src":"31763:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"31797:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7721,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"31839:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}],"id":7720,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"31822:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6148_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"31858:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"31873:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7718,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"31806:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"31806:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7710,"id":7734,"nodeType":"Return","src":"31790:89:24"}]}]},"documentation":{"id":7701,"nodeType":"StructuredDocumentation","src":"31481:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7737,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:24","nodeType":"FunctionDefinition","parameters":{"id":7707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7703,"mutability":"mutable","name":"value","nameLocation":"31654:5:24","nodeType":"VariableDeclaration","scope":7737,"src":"31646:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7702,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7706,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:24","nodeType":"VariableDeclaration","scope":7737,"src":"31661:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"},"typeName":{"id":7705,"nodeType":"UserDefinedTypeName","pathNode":{"id":7704,"name":"Rounding","nameLocations":["31661:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":6148,"src":"31661:8:24"},"referencedDeclaration":6148,"src":"31661:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:24"},"returnParameters":{"id":7710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7737,"src":"31703:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7708,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:24"},"scope":7757,"src":"31630:266:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7755,"nodeType":"Block","src":"32094:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7748,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7741,"src":"32117:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}],"id":7747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7746,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:24","typeDescriptions":{}}},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":7750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7745,"id":7754,"nodeType":"Return","src":"32104:31:24"}]},"documentation":{"id":7738,"nodeType":"StructuredDocumentation","src":"31902:113:24","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":7756,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:24","nodeType":"FunctionDefinition","parameters":{"id":7742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7741,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:24","nodeType":"VariableDeclaration","scope":7756,"src":"32046:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"},"typeName":{"id":7740,"nodeType":"UserDefinedTypeName","pathNode":{"id":7739,"name":"Rounding","nameLocations":["32046:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":6148,"src":"32046:8:24"},"referencedDeclaration":6148,"src":"32046:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6148","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:24"},"returnParameters":{"id":7745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7756,"src":"32088:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7743,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:24"},"scope":7757,"src":"32020:122:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7758,"src":"281:31863:24","usedErrors":[],"usedEvents":[]}],"src":"103:32042:24"},"id":24},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[9522]},"id":9523,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7759,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7760,"nodeType":"StructuredDocumentation","src":"218:550:25","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":9522,"linearizedBaseContracts":[9522],"name":"SafeCast","nameLocation":"777:8:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7761,"nodeType":"StructuredDocumentation","src":"792:68:25","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":7767,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:25","nodeType":"ErrorDefinition","parameters":{"id":7766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7763,"mutability":"mutable","name":"bits","nameLocation":"908:4:25","nodeType":"VariableDeclaration","scope":7767,"src":"902:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7762,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7765,"mutability":"mutable","name":"value","nameLocation":"922:5:25","nodeType":"VariableDeclaration","scope":7767,"src":"914:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7764,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:25"},"src":"865:64:25"},{"documentation":{"id":7768,"nodeType":"StructuredDocumentation","src":"935:75:25","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":7772,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:25","nodeType":"ErrorDefinition","parameters":{"id":7771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7770,"mutability":"mutable","name":"value","nameLocation":"1056:5:25","nodeType":"VariableDeclaration","scope":7772,"src":"1049:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7769,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:25"},"src":"1015:48:25"},{"documentation":{"id":7773,"nodeType":"StructuredDocumentation","src":"1069:67:25","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7779,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:25","nodeType":"ErrorDefinition","parameters":{"id":7778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"bits","nameLocation":"1183:4:25","nodeType":"VariableDeclaration","scope":7779,"src":"1177:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7774,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7777,"mutability":"mutable","name":"value","nameLocation":"1196:5:25","nodeType":"VariableDeclaration","scope":7779,"src":"1189:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7776,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:25"},"src":"1141:62:25"},{"documentation":{"id":7780,"nodeType":"StructuredDocumentation","src":"1209:75:25","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7784,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:25","nodeType":"ErrorDefinition","parameters":{"id":7783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7782,"mutability":"mutable","name":"value","nameLocation":"1331:5:25","nodeType":"VariableDeclaration","scope":7784,"src":"1323:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:25"},"src":"1289:49:25"},{"body":{"id":7811,"nodeType":"Block","src":"1695:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"1709:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7794,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:25","memberName":"max","nodeType":"MemberAccess","src":"1717:17:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7805,"nodeType":"IfStatement","src":"1705:105:25","trueBody":{"id":7804,"nodeType":"Block","src":"1736:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"1793:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7799,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"1757:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7803,"nodeType":"RevertStatement","src":"1750:49:25"}]}},{"expression":{"arguments":[{"id":7808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"1834:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7806,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:25","typeDescriptions":{}}},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7791,"id":7810,"nodeType":"Return","src":"1819:21:25"}]},"documentation":{"id":7785,"nodeType":"StructuredDocumentation","src":"1344:280:25","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7812,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:25","nodeType":"FunctionDefinition","parameters":{"id":7788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"value","nameLocation":"1656:5:25","nodeType":"VariableDeclaration","scope":7812,"src":"1648:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:25"},"returnParameters":{"id":7791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7812,"src":"1686:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7789,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:25"},"scope":9522,"src":"1629:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7839,"nodeType":"Block","src":"2204:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"2218:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7822,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7821,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:25","memberName":"max","nodeType":"MemberAccess","src":"2226:17:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7833,"nodeType":"IfStatement","src":"2214:105:25","trueBody":{"id":7832,"nodeType":"Block","src":"2245:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"2302:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7827,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"2266:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7831,"nodeType":"RevertStatement","src":"2259:49:25"}]}},{"expression":{"arguments":[{"id":7836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"2343:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7834,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:25","typeDescriptions":{}}},"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7819,"id":7838,"nodeType":"Return","src":"2328:21:25"}]},"documentation":{"id":7813,"nodeType":"StructuredDocumentation","src":"1853:280:25","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7840,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:25","nodeType":"FunctionDefinition","parameters":{"id":7816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7815,"mutability":"mutable","name":"value","nameLocation":"2165:5:25","nodeType":"VariableDeclaration","scope":7840,"src":"2157:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7814,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:25"},"returnParameters":{"id":7819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7840,"src":"2195:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7817,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:25"},"scope":9522,"src":"2138:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7867,"nodeType":"Block","src":"2713:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"2727:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7850,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7849,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:25","memberName":"max","nodeType":"MemberAccess","src":"2735:17:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7861,"nodeType":"IfStatement","src":"2723:105:25","trueBody":{"id":7860,"nodeType":"Block","src":"2754:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"2811:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7855,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"2775:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7859,"nodeType":"RevertStatement","src":"2768:49:25"}]}},{"expression":{"arguments":[{"id":7864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"2852:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7862,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:25","typeDescriptions":{}}},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7847,"id":7866,"nodeType":"Return","src":"2837:21:25"}]},"documentation":{"id":7841,"nodeType":"StructuredDocumentation","src":"2362:280:25","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7868,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:25","nodeType":"FunctionDefinition","parameters":{"id":7844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7843,"mutability":"mutable","name":"value","nameLocation":"2674:5:25","nodeType":"VariableDeclaration","scope":7868,"src":"2666:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7842,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:25"},"returnParameters":{"id":7847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7868,"src":"2704:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7845,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:25"},"scope":9522,"src":"2647:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7895,"nodeType":"Block","src":"3222:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"3236:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7878,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7877,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:25","memberName":"max","nodeType":"MemberAccess","src":"3244:17:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7889,"nodeType":"IfStatement","src":"3232:105:25","trueBody":{"id":7888,"nodeType":"Block","src":"3263:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"3320:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7883,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"3284:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7887,"nodeType":"RevertStatement","src":"3277:49:25"}]}},{"expression":{"arguments":[{"id":7892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"3361:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7890,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:25","typeDescriptions":{}}},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7875,"id":7894,"nodeType":"Return","src":"3346:21:25"}]},"documentation":{"id":7869,"nodeType":"StructuredDocumentation","src":"2871:280:25","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7896,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:25","nodeType":"FunctionDefinition","parameters":{"id":7872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7871,"mutability":"mutable","name":"value","nameLocation":"3183:5:25","nodeType":"VariableDeclaration","scope":7896,"src":"3175:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7870,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:25"},"returnParameters":{"id":7875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7896,"src":"3213:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7873,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:25"},"scope":9522,"src":"3156:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7923,"nodeType":"Block","src":"3731:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"3745:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7906,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7905,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:25","memberName":"max","nodeType":"MemberAccess","src":"3753:17:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7917,"nodeType":"IfStatement","src":"3741:105:25","trueBody":{"id":7916,"nodeType":"Block","src":"3772:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"3829:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7911,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"3793:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7915,"nodeType":"RevertStatement","src":"3786:49:25"}]}},{"expression":{"arguments":[{"id":7920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"3870:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7918,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:25","typeDescriptions":{}}},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7903,"id":7922,"nodeType":"Return","src":"3855:21:25"}]},"documentation":{"id":7897,"nodeType":"StructuredDocumentation","src":"3380:280:25","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7924,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:25","nodeType":"FunctionDefinition","parameters":{"id":7900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7899,"mutability":"mutable","name":"value","nameLocation":"3692:5:25","nodeType":"VariableDeclaration","scope":7924,"src":"3684:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7898,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:25"},"returnParameters":{"id":7903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7924,"src":"3722:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7901,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:25"},"scope":9522,"src":"3665:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7951,"nodeType":"Block","src":"4240:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"4254:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7934,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7933,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:25","memberName":"max","nodeType":"MemberAccess","src":"4262:17:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7945,"nodeType":"IfStatement","src":"4250:105:25","trueBody":{"id":7944,"nodeType":"Block","src":"4281:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"4338:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7939,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"4302:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7943,"nodeType":"RevertStatement","src":"4295:49:25"}]}},{"expression":{"arguments":[{"id":7948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"4379:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7946,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:25","typeDescriptions":{}}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7931,"id":7950,"nodeType":"Return","src":"4364:21:25"}]},"documentation":{"id":7925,"nodeType":"StructuredDocumentation","src":"3889:280:25","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7952,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:25","nodeType":"FunctionDefinition","parameters":{"id":7928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7927,"mutability":"mutable","name":"value","nameLocation":"4201:5:25","nodeType":"VariableDeclaration","scope":7952,"src":"4193:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7926,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:25"},"returnParameters":{"id":7931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7952,"src":"4231:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7929,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:25"},"scope":9522,"src":"4174:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7979,"nodeType":"Block","src":"4749:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"4763:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7962,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7961,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:25","memberName":"max","nodeType":"MemberAccess","src":"4771:17:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7973,"nodeType":"IfStatement","src":"4759:105:25","trueBody":{"id":7972,"nodeType":"Block","src":"4790:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"4847:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7967,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"4811:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7971,"nodeType":"RevertStatement","src":"4804:49:25"}]}},{"expression":{"arguments":[{"id":7976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"4888:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7974,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:25","typeDescriptions":{}}},"id":7977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7959,"id":7978,"nodeType":"Return","src":"4873:21:25"}]},"documentation":{"id":7953,"nodeType":"StructuredDocumentation","src":"4398:280:25","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7980,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:25","nodeType":"FunctionDefinition","parameters":{"id":7956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7955,"mutability":"mutable","name":"value","nameLocation":"4710:5:25","nodeType":"VariableDeclaration","scope":7980,"src":"4702:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7954,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:25"},"returnParameters":{"id":7959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7980,"src":"4740:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7957,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:25"},"scope":9522,"src":"4683:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8007,"nodeType":"Block","src":"5258:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"5272:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7990,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7989,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:25","memberName":"max","nodeType":"MemberAccess","src":"5280:17:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8001,"nodeType":"IfStatement","src":"5268:105:25","trueBody":{"id":8000,"nodeType":"Block","src":"5299:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"5356:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7995,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"5320:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7999,"nodeType":"RevertStatement","src":"5313:49:25"}]}},{"expression":{"arguments":[{"id":8004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"5397:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8002,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:25","typeDescriptions":{}}},"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7987,"id":8006,"nodeType":"Return","src":"5382:21:25"}]},"documentation":{"id":7981,"nodeType":"StructuredDocumentation","src":"4907:280:25","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8008,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:25","nodeType":"FunctionDefinition","parameters":{"id":7984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7983,"mutability":"mutable","name":"value","nameLocation":"5219:5:25","nodeType":"VariableDeclaration","scope":8008,"src":"5211:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7982,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:25"},"returnParameters":{"id":7987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8008,"src":"5249:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7985,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:25"},"scope":9522,"src":"5192:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8035,"nodeType":"Block","src":"5767:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8011,"src":"5781:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8018,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":8017,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":8021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:25","memberName":"max","nodeType":"MemberAccess","src":"5789:17:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8029,"nodeType":"IfStatement","src":"5777:105:25","trueBody":{"id":8028,"nodeType":"Block","src":"5808:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8011,"src":"5865:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8023,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"5829:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8027,"nodeType":"RevertStatement","src":"5822:49:25"}]}},{"expression":{"arguments":[{"id":8032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8011,"src":"5906:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8030,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:25","typeDescriptions":{}}},"id":8033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":8015,"id":8034,"nodeType":"Return","src":"5891:21:25"}]},"documentation":{"id":8009,"nodeType":"StructuredDocumentation","src":"5416:280:25","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8036,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:25","nodeType":"FunctionDefinition","parameters":{"id":8012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8011,"mutability":"mutable","name":"value","nameLocation":"5728:5:25","nodeType":"VariableDeclaration","scope":8036,"src":"5720:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:25"},"returnParameters":{"id":8015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8036,"src":"5758:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":8013,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:25"},"scope":9522,"src":"5701:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8063,"nodeType":"Block","src":"6276:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"6290:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8046,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":8045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":8049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:25","memberName":"max","nodeType":"MemberAccess","src":"6298:17:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8057,"nodeType":"IfStatement","src":"6286:105:25","trueBody":{"id":8056,"nodeType":"Block","src":"6317:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"6374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8051,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"6338:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8055,"nodeType":"RevertStatement","src":"6331:49:25"}]}},{"expression":{"arguments":[{"id":8060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"6415:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8058,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:25","typeDescriptions":{}}},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":8043,"id":8062,"nodeType":"Return","src":"6400:21:25"}]},"documentation":{"id":8037,"nodeType":"StructuredDocumentation","src":"5925:280:25","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8064,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:25","nodeType":"FunctionDefinition","parameters":{"id":8040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8039,"mutability":"mutable","name":"value","nameLocation":"6237:5:25","nodeType":"VariableDeclaration","scope":8064,"src":"6229:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8038,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:25"},"returnParameters":{"id":8043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8064,"src":"6267:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":8041,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:25"},"scope":9522,"src":"6210:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8091,"nodeType":"Block","src":"6785:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"6799:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8074,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":8073,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":8077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:25","memberName":"max","nodeType":"MemberAccess","src":"6807:17:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8085,"nodeType":"IfStatement","src":"6795:105:25","trueBody":{"id":8084,"nodeType":"Block","src":"6826:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"6883:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8079,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"6847:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8083,"nodeType":"RevertStatement","src":"6840:49:25"}]}},{"expression":{"arguments":[{"id":8088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"6924:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8086,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:25","typeDescriptions":{}}},"id":8089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":8071,"id":8090,"nodeType":"Return","src":"6909:21:25"}]},"documentation":{"id":8065,"nodeType":"StructuredDocumentation","src":"6434:280:25","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8092,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:25","nodeType":"FunctionDefinition","parameters":{"id":8068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8067,"mutability":"mutable","name":"value","nameLocation":"6746:5:25","nodeType":"VariableDeclaration","scope":8092,"src":"6738:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8066,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:25"},"returnParameters":{"id":8071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8092,"src":"6776:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":8069,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:25"},"scope":9522,"src":"6719:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8119,"nodeType":"Block","src":"7294:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"7308:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8102,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":8101,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:25","memberName":"max","nodeType":"MemberAccess","src":"7316:17:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8113,"nodeType":"IfStatement","src":"7304:105:25","trueBody":{"id":8112,"nodeType":"Block","src":"7335:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"7392:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8107,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"7356:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8111,"nodeType":"RevertStatement","src":"7349:49:25"}]}},{"expression":{"arguments":[{"id":8116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"7433:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8114,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:25","typeDescriptions":{}}},"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8099,"id":8118,"nodeType":"Return","src":"7418:21:25"}]},"documentation":{"id":8093,"nodeType":"StructuredDocumentation","src":"6943:280:25","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8120,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:25","nodeType":"FunctionDefinition","parameters":{"id":8096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8095,"mutability":"mutable","name":"value","nameLocation":"7255:5:25","nodeType":"VariableDeclaration","scope":8120,"src":"7247:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8094,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:25"},"returnParameters":{"id":8099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8120,"src":"7285:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8097,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:25"},"scope":9522,"src":"7228:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8147,"nodeType":"Block","src":"7803:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"7817:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8130,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":8129,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":8133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:25","memberName":"max","nodeType":"MemberAccess","src":"7825:17:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8141,"nodeType":"IfStatement","src":"7813:105:25","trueBody":{"id":8140,"nodeType":"Block","src":"7844:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"7901:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8135,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"7865:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8139,"nodeType":"RevertStatement","src":"7858:49:25"}]}},{"expression":{"arguments":[{"id":8144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"7942:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8142,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:25","typeDescriptions":{}}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":8127,"id":8146,"nodeType":"Return","src":"7927:21:25"}]},"documentation":{"id":8121,"nodeType":"StructuredDocumentation","src":"7452:280:25","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8148,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:25","nodeType":"FunctionDefinition","parameters":{"id":8124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8123,"mutability":"mutable","name":"value","nameLocation":"7764:5:25","nodeType":"VariableDeclaration","scope":8148,"src":"7756:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8122,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:25"},"returnParameters":{"id":8127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8148,"src":"7794:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":8125,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:25"},"scope":9522,"src":"7737:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8175,"nodeType":"Block","src":"8312:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"8326:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8158,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":8157,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":8161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:25","memberName":"max","nodeType":"MemberAccess","src":"8334:17:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8169,"nodeType":"IfStatement","src":"8322:105:25","trueBody":{"id":8168,"nodeType":"Block","src":"8353:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"8410:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8163,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"8374:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8167,"nodeType":"RevertStatement","src":"8367:49:25"}]}},{"expression":{"arguments":[{"id":8172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8151,"src":"8451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8170,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:25","typeDescriptions":{}}},"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":8155,"id":8174,"nodeType":"Return","src":"8436:21:25"}]},"documentation":{"id":8149,"nodeType":"StructuredDocumentation","src":"7961:280:25","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8176,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:25","nodeType":"FunctionDefinition","parameters":{"id":8152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8151,"mutability":"mutable","name":"value","nameLocation":"8273:5:25","nodeType":"VariableDeclaration","scope":8176,"src":"8265:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8150,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:25"},"returnParameters":{"id":8155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8176,"src":"8303:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":8153,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:25"},"scope":9522,"src":"8246:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8203,"nodeType":"Block","src":"8821:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"8835:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8186,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":8185,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":8189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:25","memberName":"max","nodeType":"MemberAccess","src":"8843:17:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8197,"nodeType":"IfStatement","src":"8831:105:25","trueBody":{"id":8196,"nodeType":"Block","src":"8862:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"8919:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8191,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"8883:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8195,"nodeType":"RevertStatement","src":"8876:49:25"}]}},{"expression":{"arguments":[{"id":8200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"8960:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8198,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:25","typeDescriptions":{}}},"id":8201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":8183,"id":8202,"nodeType":"Return","src":"8945:21:25"}]},"documentation":{"id":8177,"nodeType":"StructuredDocumentation","src":"8470:280:25","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8204,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:25","nodeType":"FunctionDefinition","parameters":{"id":8180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8179,"mutability":"mutable","name":"value","nameLocation":"8782:5:25","nodeType":"VariableDeclaration","scope":8204,"src":"8774:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8178,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:25"},"returnParameters":{"id":8183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8204,"src":"8812:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":8181,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:25"},"scope":9522,"src":"8755:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8231,"nodeType":"Block","src":"9330:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"9344:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8214,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":8213,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":8217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:25","memberName":"max","nodeType":"MemberAccess","src":"9352:17:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8225,"nodeType":"IfStatement","src":"9340:105:25","trueBody":{"id":8224,"nodeType":"Block","src":"9371:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"9428:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8219,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"9392:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8223,"nodeType":"RevertStatement","src":"9385:49:25"}]}},{"expression":{"arguments":[{"id":8228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"9469:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8226,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:25","typeDescriptions":{}}},"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":8211,"id":8230,"nodeType":"Return","src":"9454:21:25"}]},"documentation":{"id":8205,"nodeType":"StructuredDocumentation","src":"8979:280:25","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8232,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:25","nodeType":"FunctionDefinition","parameters":{"id":8208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8207,"mutability":"mutable","name":"value","nameLocation":"9291:5:25","nodeType":"VariableDeclaration","scope":8232,"src":"9283:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8206,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:25"},"returnParameters":{"id":8211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8232,"src":"9321:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8209,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:25"},"scope":9522,"src":"9264:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8259,"nodeType":"Block","src":"9839:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"9853:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8242,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":8241,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":8245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:25","memberName":"max","nodeType":"MemberAccess","src":"9861:17:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8253,"nodeType":"IfStatement","src":"9849:105:25","trueBody":{"id":8252,"nodeType":"Block","src":"9880:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"9937:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8247,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"9901:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8251,"nodeType":"RevertStatement","src":"9894:49:25"}]}},{"expression":{"arguments":[{"id":8256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"9978:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8254,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:25","typeDescriptions":{}}},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":8239,"id":8258,"nodeType":"Return","src":"9963:21:25"}]},"documentation":{"id":8233,"nodeType":"StructuredDocumentation","src":"9488:280:25","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8260,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:25","nodeType":"FunctionDefinition","parameters":{"id":8236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8235,"mutability":"mutable","name":"value","nameLocation":"9800:5:25","nodeType":"VariableDeclaration","scope":8260,"src":"9792:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8234,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:25"},"returnParameters":{"id":8239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8260,"src":"9830:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":8237,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:25"},"scope":9522,"src":"9773:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8287,"nodeType":"Block","src":"10348:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"10362:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8270,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8269,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:25","memberName":"max","nodeType":"MemberAccess","src":"10370:17:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8281,"nodeType":"IfStatement","src":"10358:105:25","trueBody":{"id":8280,"nodeType":"Block","src":"10389:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"10446:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8275,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"10410:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8279,"nodeType":"RevertStatement","src":"10403:49:25"}]}},{"expression":{"arguments":[{"id":8284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"10487:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8282,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:25","typeDescriptions":{}}},"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":8267,"id":8286,"nodeType":"Return","src":"10472:21:25"}]},"documentation":{"id":8261,"nodeType":"StructuredDocumentation","src":"9997:280:25","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8288,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:25","nodeType":"FunctionDefinition","parameters":{"id":8264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8263,"mutability":"mutable","name":"value","nameLocation":"10309:5:25","nodeType":"VariableDeclaration","scope":8288,"src":"10301:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8262,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:25"},"returnParameters":{"id":8267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8288,"src":"10339:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8265,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:25"},"scope":9522,"src":"10282:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8315,"nodeType":"Block","src":"10857:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"10871:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8298,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":8297,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":8301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:25","memberName":"max","nodeType":"MemberAccess","src":"10879:17:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8309,"nodeType":"IfStatement","src":"10867:105:25","trueBody":{"id":8308,"nodeType":"Block","src":"10898:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"10955:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8303,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"10919:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8307,"nodeType":"RevertStatement","src":"10912:49:25"}]}},{"expression":{"arguments":[{"id":8312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"10996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8310,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:25","typeDescriptions":{}}},"id":8313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":8295,"id":8314,"nodeType":"Return","src":"10981:21:25"}]},"documentation":{"id":8289,"nodeType":"StructuredDocumentation","src":"10506:280:25","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8316,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:25","nodeType":"FunctionDefinition","parameters":{"id":8292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8291,"mutability":"mutable","name":"value","nameLocation":"10818:5:25","nodeType":"VariableDeclaration","scope":8316,"src":"10810:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8290,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:25"},"returnParameters":{"id":8295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8316,"src":"10848:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":8293,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:25"},"scope":9522,"src":"10791:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8343,"nodeType":"Block","src":"11360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"11374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8326,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":8325,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":8329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:25","memberName":"max","nodeType":"MemberAccess","src":"11382:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8337,"nodeType":"IfStatement","src":"11370:103:25","trueBody":{"id":8336,"nodeType":"Block","src":"11400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"11456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8331,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"11421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8335,"nodeType":"RevertStatement","src":"11414:48:25"}]}},{"expression":{"arguments":[{"id":8340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"11496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8338,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:25","typeDescriptions":{}}},"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8323,"id":8342,"nodeType":"Return","src":"11482:20:25"}]},"documentation":{"id":8317,"nodeType":"StructuredDocumentation","src":"11015:276:25","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8344,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8319,"mutability":"mutable","name":"value","nameLocation":"11322:5:25","nodeType":"VariableDeclaration","scope":8344,"src":"11314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8318,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:25"},"returnParameters":{"id":8323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8344,"src":"11352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8321,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:25"},"scope":9522,"src":"11296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8371,"nodeType":"Block","src":"11860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8347,"src":"11874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8354,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":8353,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":8357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:25","memberName":"max","nodeType":"MemberAccess","src":"11882:16:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8365,"nodeType":"IfStatement","src":"11870:103:25","trueBody":{"id":8364,"nodeType":"Block","src":"11900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8347,"src":"11956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8359,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"11921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8363,"nodeType":"RevertStatement","src":"11914:48:25"}]}},{"expression":{"arguments":[{"id":8368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8347,"src":"11996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8366,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:25","typeDescriptions":{}}},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":8351,"id":8370,"nodeType":"Return","src":"11982:20:25"}]},"documentation":{"id":8345,"nodeType":"StructuredDocumentation","src":"11515:276:25","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8372,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:25","nodeType":"FunctionDefinition","parameters":{"id":8348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8347,"mutability":"mutable","name":"value","nameLocation":"11822:5:25","nodeType":"VariableDeclaration","scope":8372,"src":"11814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8346,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:25"},"returnParameters":{"id":8351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8372,"src":"11852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":8349,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:25"},"scope":9522,"src":"11796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8399,"nodeType":"Block","src":"12360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"12374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8382,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":8381,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":8385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:25","memberName":"max","nodeType":"MemberAccess","src":"12382:16:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8393,"nodeType":"IfStatement","src":"12370:103:25","trueBody":{"id":8392,"nodeType":"Block","src":"12400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"12456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8387,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"12421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8391,"nodeType":"RevertStatement","src":"12414:48:25"}]}},{"expression":{"arguments":[{"id":8396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"12496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8394,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:25","typeDescriptions":{}}},"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":8379,"id":8398,"nodeType":"Return","src":"12482:20:25"}]},"documentation":{"id":8373,"nodeType":"StructuredDocumentation","src":"12015:276:25","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8400,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8375,"mutability":"mutable","name":"value","nameLocation":"12322:5:25","nodeType":"VariableDeclaration","scope":8400,"src":"12314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8374,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:25"},"returnParameters":{"id":8379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8400,"src":"12352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8377,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:25"},"scope":9522,"src":"12296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8427,"nodeType":"Block","src":"12860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"12874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8410,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":8409,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":8413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:25","memberName":"max","nodeType":"MemberAccess","src":"12882:16:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8421,"nodeType":"IfStatement","src":"12870:103:25","trueBody":{"id":8420,"nodeType":"Block","src":"12900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"12956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8415,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"12921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8419,"nodeType":"RevertStatement","src":"12914:48:25"}]}},{"expression":{"arguments":[{"id":8424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"12996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8422,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:25","typeDescriptions":{}}},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":8407,"id":8426,"nodeType":"Return","src":"12982:20:25"}]},"documentation":{"id":8401,"nodeType":"StructuredDocumentation","src":"12515:276:25","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8428,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:25","nodeType":"FunctionDefinition","parameters":{"id":8404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8403,"mutability":"mutable","name":"value","nameLocation":"12822:5:25","nodeType":"VariableDeclaration","scope":8428,"src":"12814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8402,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:25"},"returnParameters":{"id":8407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8428,"src":"12852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":8405,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:25"},"scope":9522,"src":"12796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8455,"nodeType":"Block","src":"13360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"13374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8438,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8437,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:25","memberName":"max","nodeType":"MemberAccess","src":"13382:16:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8449,"nodeType":"IfStatement","src":"13370:103:25","trueBody":{"id":8448,"nodeType":"Block","src":"13400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"13456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8443,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"13421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8447,"nodeType":"RevertStatement","src":"13414:48:25"}]}},{"expression":{"arguments":[{"id":8452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"13496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8450,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:25","typeDescriptions":{}}},"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8435,"id":8454,"nodeType":"Return","src":"13482:20:25"}]},"documentation":{"id":8429,"nodeType":"StructuredDocumentation","src":"13015:276:25","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8456,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8431,"mutability":"mutable","name":"value","nameLocation":"13322:5:25","nodeType":"VariableDeclaration","scope":8456,"src":"13314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8430,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:25"},"returnParameters":{"id":8435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8456,"src":"13352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8433,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:25"},"scope":9522,"src":"13296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8483,"nodeType":"Block","src":"13860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8459,"src":"13874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8466,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":8465,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":8469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:25","memberName":"max","nodeType":"MemberAccess","src":"13882:16:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8477,"nodeType":"IfStatement","src":"13870:103:25","trueBody":{"id":8476,"nodeType":"Block","src":"13900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8459,"src":"13956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8471,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"13921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8475,"nodeType":"RevertStatement","src":"13914:48:25"}]}},{"expression":{"arguments":[{"id":8480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8459,"src":"13996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8478,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:25","typeDescriptions":{}}},"id":8481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":8463,"id":8482,"nodeType":"Return","src":"13982:20:25"}]},"documentation":{"id":8457,"nodeType":"StructuredDocumentation","src":"13515:276:25","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8484,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:25","nodeType":"FunctionDefinition","parameters":{"id":8460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8459,"mutability":"mutable","name":"value","nameLocation":"13822:5:25","nodeType":"VariableDeclaration","scope":8484,"src":"13814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8458,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:25"},"returnParameters":{"id":8463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8484,"src":"13852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":8461,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:25"},"scope":9522,"src":"13796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8511,"nodeType":"Block","src":"14360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8487,"src":"14374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8494,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":8493,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":8497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:25","memberName":"max","nodeType":"MemberAccess","src":"14382:16:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8505,"nodeType":"IfStatement","src":"14370:103:25","trueBody":{"id":8504,"nodeType":"Block","src":"14400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8487,"src":"14456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8499,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"14421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8503,"nodeType":"RevertStatement","src":"14414:48:25"}]}},{"expression":{"arguments":[{"id":8508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8487,"src":"14496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8506,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:25","typeDescriptions":{}}},"id":8509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8491,"id":8510,"nodeType":"Return","src":"14482:20:25"}]},"documentation":{"id":8485,"nodeType":"StructuredDocumentation","src":"14015:276:25","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8512,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8487,"mutability":"mutable","name":"value","nameLocation":"14322:5:25","nodeType":"VariableDeclaration","scope":8512,"src":"14314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8486,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:25"},"returnParameters":{"id":8491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8512,"src":"14352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8489,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:25"},"scope":9522,"src":"14296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8539,"nodeType":"Block","src":"14860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"14874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8522,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":8521,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":8525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:25","memberName":"max","nodeType":"MemberAccess","src":"14882:16:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8533,"nodeType":"IfStatement","src":"14870:103:25","trueBody":{"id":8532,"nodeType":"Block","src":"14900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"14956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8527,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"14921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8531,"nodeType":"RevertStatement","src":"14914:48:25"}]}},{"expression":{"arguments":[{"id":8536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"14996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8534,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:25","typeDescriptions":{}}},"id":8537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":8519,"id":8538,"nodeType":"Return","src":"14982:20:25"}]},"documentation":{"id":8513,"nodeType":"StructuredDocumentation","src":"14515:276:25","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8540,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:25","nodeType":"FunctionDefinition","parameters":{"id":8516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8515,"mutability":"mutable","name":"value","nameLocation":"14822:5:25","nodeType":"VariableDeclaration","scope":8540,"src":"14814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8514,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:25"},"returnParameters":{"id":8519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8540,"src":"14852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8517,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:25"},"scope":9522,"src":"14796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8567,"nodeType":"Block","src":"15360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"15374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8550,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":8549,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":8553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:25","memberName":"max","nodeType":"MemberAccess","src":"15382:16:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8561,"nodeType":"IfStatement","src":"15370:103:25","trueBody":{"id":8560,"nodeType":"Block","src":"15400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"15456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8555,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"15421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8559,"nodeType":"RevertStatement","src":"15414:48:25"}]}},{"expression":{"arguments":[{"id":8564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"15496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8562,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:25","typeDescriptions":{}}},"id":8565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8547,"id":8566,"nodeType":"Return","src":"15482:20:25"}]},"documentation":{"id":8541,"nodeType":"StructuredDocumentation","src":"15015:276:25","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8568,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8543,"mutability":"mutable","name":"value","nameLocation":"15322:5:25","nodeType":"VariableDeclaration","scope":8568,"src":"15314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8542,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:25"},"returnParameters":{"id":8547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8568,"src":"15352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8545,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:25"},"scope":9522,"src":"15296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8595,"nodeType":"Block","src":"15860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"15874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8578,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":8577,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":8581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:25","memberName":"max","nodeType":"MemberAccess","src":"15882:16:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8589,"nodeType":"IfStatement","src":"15870:103:25","trueBody":{"id":8588,"nodeType":"Block","src":"15900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"15956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8583,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"15921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8587,"nodeType":"RevertStatement","src":"15914:48:25"}]}},{"expression":{"arguments":[{"id":8592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"15996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8590,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:25","typeDescriptions":{}}},"id":8593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":8575,"id":8594,"nodeType":"Return","src":"15982:20:25"}]},"documentation":{"id":8569,"nodeType":"StructuredDocumentation","src":"15515:276:25","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8596,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:25","nodeType":"FunctionDefinition","parameters":{"id":8572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8571,"mutability":"mutable","name":"value","nameLocation":"15822:5:25","nodeType":"VariableDeclaration","scope":8596,"src":"15814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8570,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:25"},"returnParameters":{"id":8575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8596,"src":"15852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8573,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:25"},"scope":9522,"src":"15796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8623,"nodeType":"Block","src":"16360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8599,"src":"16374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8606,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":8605,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":8609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:25","memberName":"max","nodeType":"MemberAccess","src":"16382:16:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8617,"nodeType":"IfStatement","src":"16370:103:25","trueBody":{"id":8616,"nodeType":"Block","src":"16400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8599,"src":"16456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8611,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"16421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8615,"nodeType":"RevertStatement","src":"16414:48:25"}]}},{"expression":{"arguments":[{"id":8620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8599,"src":"16496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8618,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:25","typeDescriptions":{}}},"id":8621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8603,"id":8622,"nodeType":"Return","src":"16482:20:25"}]},"documentation":{"id":8597,"nodeType":"StructuredDocumentation","src":"16015:276:25","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8624,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:25","nodeType":"FunctionDefinition","parameters":{"id":8600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8599,"mutability":"mutable","name":"value","nameLocation":"16322:5:25","nodeType":"VariableDeclaration","scope":8624,"src":"16314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8598,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:25"},"returnParameters":{"id":8603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8624,"src":"16352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8601,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:25"},"scope":9522,"src":"16296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8651,"nodeType":"Block","src":"16854:146:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8627,"src":"16868:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8634,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8633,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:25","memberName":"max","nodeType":"MemberAccess","src":"16876:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8645,"nodeType":"IfStatement","src":"16864:101:25","trueBody":{"id":8644,"nodeType":"Block","src":"16893:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8627,"src":"16948:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8639,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"16914:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8643,"nodeType":"RevertStatement","src":"16907:47:25"}]}},{"expression":{"arguments":[{"id":8648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8627,"src":"16987:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8646,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:25","typeDescriptions":{}}},"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8631,"id":8650,"nodeType":"Return","src":"16974:19:25"}]},"documentation":{"id":8625,"nodeType":"StructuredDocumentation","src":"16515:272:25","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8652,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:25","nodeType":"FunctionDefinition","parameters":{"id":8628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8627,"mutability":"mutable","name":"value","nameLocation":"16817:5:25","nodeType":"VariableDeclaration","scope":8652,"src":"16809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8626,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:25"},"returnParameters":{"id":8631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8652,"src":"16847:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8629,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:25"},"scope":9522,"src":"16792:208:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8674,"nodeType":"Block","src":"17236:128:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"17250:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8668,"nodeType":"IfStatement","src":"17246:81:25","trueBody":{"id":8667,"nodeType":"Block","src":"17261:66:25","statements":[{"errorCall":{"arguments":[{"id":8664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"17310:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8663,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"17282:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":8665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8666,"nodeType":"RevertStatement","src":"17275:41:25"}]}},{"expression":{"arguments":[{"id":8671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"17351:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8669,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:25","typeDescriptions":{}}},"id":8672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8659,"id":8673,"nodeType":"Return","src":"17336:21:25"}]},"documentation":{"id":8653,"nodeType":"StructuredDocumentation","src":"17006:160:25","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":8675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:25","nodeType":"FunctionDefinition","parameters":{"id":8656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8655,"mutability":"mutable","name":"value","nameLocation":"17197:5:25","nodeType":"VariableDeclaration","scope":8675,"src":"17190:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8654,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:25"},"returnParameters":{"id":8659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8675,"src":"17227:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8657,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:25"},"scope":9522,"src":"17171:193:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8700,"nodeType":"Block","src":"17761:150:25","statements":[{"expression":{"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"17771:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"17791:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":8684,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:25","typeDescriptions":{}}},"id":8687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":8689,"nodeType":"ExpressionStatement","src":"17771:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"17811:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"17825:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8699,"nodeType":"IfStatement","src":"17807:98:25","trueBody":{"id":8698,"nodeType":"Block","src":"17832:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"17888:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8693,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"17853:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8697,"nodeType":"RevertStatement","src":"17846:48:25"}]}}]},"documentation":{"id":8676,"nodeType":"StructuredDocumentation","src":"17370:312:25","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8701,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:25","nodeType":"FunctionDefinition","parameters":{"id":8679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8678,"mutability":"mutable","name":"value","nameLocation":"17712:5:25","nodeType":"VariableDeclaration","scope":8701,"src":"17705:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8677,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:25"},"returnParameters":{"id":8682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8681,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:25","nodeType":"VariableDeclaration","scope":8701,"src":"17742:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":8680,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:25"},"scope":9522,"src":"17687:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8726,"nodeType":"Block","src":"18308:150:25","statements":[{"expression":{"id":8714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"18318:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8704,"src":"18338:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":8710,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:25","typeDescriptions":{}}},"id":8713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":8715,"nodeType":"ExpressionStatement","src":"18318:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"18358:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8704,"src":"18372:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8725,"nodeType":"IfStatement","src":"18354:98:25","trueBody":{"id":8724,"nodeType":"Block","src":"18379:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8704,"src":"18435:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8719,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"18400:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8723,"nodeType":"RevertStatement","src":"18393:48:25"}]}}]},"documentation":{"id":8702,"nodeType":"StructuredDocumentation","src":"17917:312:25","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8727,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:25","nodeType":"FunctionDefinition","parameters":{"id":8705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8704,"mutability":"mutable","name":"value","nameLocation":"18259:5:25","nodeType":"VariableDeclaration","scope":8727,"src":"18252:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8703,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:25"},"returnParameters":{"id":8708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8707,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:25","nodeType":"VariableDeclaration","scope":8727,"src":"18289:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":8706,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:25"},"scope":9522,"src":"18234:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8752,"nodeType":"Block","src":"18855:150:25","statements":[{"expression":{"id":8740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8733,"src":"18865:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8730,"src":"18885:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":8736,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:25","typeDescriptions":{}}},"id":8739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":8741,"nodeType":"ExpressionStatement","src":"18865:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8733,"src":"18905:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8730,"src":"18919:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8751,"nodeType":"IfStatement","src":"18901:98:25","trueBody":{"id":8750,"nodeType":"Block","src":"18926:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8730,"src":"18982:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8745,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"18947:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8749,"nodeType":"RevertStatement","src":"18940:48:25"}]}}]},"documentation":{"id":8728,"nodeType":"StructuredDocumentation","src":"18464:312:25","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8753,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:25","nodeType":"FunctionDefinition","parameters":{"id":8731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8730,"mutability":"mutable","name":"value","nameLocation":"18806:5:25","nodeType":"VariableDeclaration","scope":8753,"src":"18799:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8729,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:25"},"returnParameters":{"id":8734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8733,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:25","nodeType":"VariableDeclaration","scope":8753,"src":"18836:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":8732,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:25"},"scope":9522,"src":"18781:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8778,"nodeType":"Block","src":"19402:150:25","statements":[{"expression":{"id":8766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8759,"src":"19412:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8756,"src":"19432:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":8762,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:25","typeDescriptions":{}}},"id":8765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":8767,"nodeType":"ExpressionStatement","src":"19412:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8759,"src":"19452:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8756,"src":"19466:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8777,"nodeType":"IfStatement","src":"19448:98:25","trueBody":{"id":8776,"nodeType":"Block","src":"19473:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8756,"src":"19529:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8771,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"19494:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8775,"nodeType":"RevertStatement","src":"19487:48:25"}]}}]},"documentation":{"id":8754,"nodeType":"StructuredDocumentation","src":"19011:312:25","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8779,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:25","nodeType":"FunctionDefinition","parameters":{"id":8757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8756,"mutability":"mutable","name":"value","nameLocation":"19353:5:25","nodeType":"VariableDeclaration","scope":8779,"src":"19346:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8755,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:25"},"returnParameters":{"id":8760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8759,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:25","nodeType":"VariableDeclaration","scope":8779,"src":"19383:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":8758,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:25"},"scope":9522,"src":"19328:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8804,"nodeType":"Block","src":"19949:150:25","statements":[{"expression":{"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"19959:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"19979:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8788,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:25","typeDescriptions":{}}},"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8793,"nodeType":"ExpressionStatement","src":"19959:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"19999:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"20013:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8803,"nodeType":"IfStatement","src":"19995:98:25","trueBody":{"id":8802,"nodeType":"Block","src":"20020:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"20076:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8797,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"20041:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8801,"nodeType":"RevertStatement","src":"20034:48:25"}]}}]},"documentation":{"id":8780,"nodeType":"StructuredDocumentation","src":"19558:312:25","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8805,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:25","nodeType":"FunctionDefinition","parameters":{"id":8783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8782,"mutability":"mutable","name":"value","nameLocation":"19900:5:25","nodeType":"VariableDeclaration","scope":8805,"src":"19893:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8781,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:25"},"returnParameters":{"id":8786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8785,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:25","nodeType":"VariableDeclaration","scope":8805,"src":"19930:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8784,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:25"},"scope":9522,"src":"19875:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8830,"nodeType":"Block","src":"20496:150:25","statements":[{"expression":{"id":8818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8811,"src":"20506:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"20526:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8814,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:25","typeDescriptions":{}}},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8819,"nodeType":"ExpressionStatement","src":"20506:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8811,"src":"20546:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"20560:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8829,"nodeType":"IfStatement","src":"20542:98:25","trueBody":{"id":8828,"nodeType":"Block","src":"20567:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"20623:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8823,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"20588:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8827,"nodeType":"RevertStatement","src":"20581:48:25"}]}}]},"documentation":{"id":8806,"nodeType":"StructuredDocumentation","src":"20105:312:25","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8831,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:25","nodeType":"FunctionDefinition","parameters":{"id":8809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8808,"mutability":"mutable","name":"value","nameLocation":"20447:5:25","nodeType":"VariableDeclaration","scope":8831,"src":"20440:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8807,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:25"},"returnParameters":{"id":8812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8811,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:25","nodeType":"VariableDeclaration","scope":8831,"src":"20477:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8810,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:25"},"scope":9522,"src":"20422:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8856,"nodeType":"Block","src":"21043:150:25","statements":[{"expression":{"id":8844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8837,"src":"21053:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"21073:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8840,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:25","typeDescriptions":{}}},"id":8843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8845,"nodeType":"ExpressionStatement","src":"21053:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8837,"src":"21093:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"21107:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8855,"nodeType":"IfStatement","src":"21089:98:25","trueBody":{"id":8854,"nodeType":"Block","src":"21114:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8834,"src":"21170:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8849,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"21135:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8853,"nodeType":"RevertStatement","src":"21128:48:25"}]}}]},"documentation":{"id":8832,"nodeType":"StructuredDocumentation","src":"20652:312:25","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8857,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:25","nodeType":"FunctionDefinition","parameters":{"id":8835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8834,"mutability":"mutable","name":"value","nameLocation":"20994:5:25","nodeType":"VariableDeclaration","scope":8857,"src":"20987:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8833,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:25"},"returnParameters":{"id":8838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8837,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:25","nodeType":"VariableDeclaration","scope":8857,"src":"21024:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8836,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:25"},"scope":9522,"src":"20969:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8882,"nodeType":"Block","src":"21590:150:25","statements":[{"expression":{"id":8870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8863,"src":"21600:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8860,"src":"21620:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8866,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:25","typeDescriptions":{}}},"id":8869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8871,"nodeType":"ExpressionStatement","src":"21600:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8863,"src":"21640:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8860,"src":"21654:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8881,"nodeType":"IfStatement","src":"21636:98:25","trueBody":{"id":8880,"nodeType":"Block","src":"21661:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8860,"src":"21717:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8875,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"21682:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8879,"nodeType":"RevertStatement","src":"21675:48:25"}]}}]},"documentation":{"id":8858,"nodeType":"StructuredDocumentation","src":"21199:312:25","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8883,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:25","nodeType":"FunctionDefinition","parameters":{"id":8861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8860,"mutability":"mutable","name":"value","nameLocation":"21541:5:25","nodeType":"VariableDeclaration","scope":8883,"src":"21534:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8859,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:25"},"returnParameters":{"id":8864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8863,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:25","nodeType":"VariableDeclaration","scope":8883,"src":"21571:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8862,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:25"},"scope":9522,"src":"21516:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8908,"nodeType":"Block","src":"22137:150:25","statements":[{"expression":{"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8889,"src":"22147:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8886,"src":"22167:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8892,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:25","typeDescriptions":{}}},"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8897,"nodeType":"ExpressionStatement","src":"22147:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8889,"src":"22187:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8886,"src":"22201:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8907,"nodeType":"IfStatement","src":"22183:98:25","trueBody":{"id":8906,"nodeType":"Block","src":"22208:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8886,"src":"22264:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8901,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"22229:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8905,"nodeType":"RevertStatement","src":"22222:48:25"}]}}]},"documentation":{"id":8884,"nodeType":"StructuredDocumentation","src":"21746:312:25","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8909,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:25","nodeType":"FunctionDefinition","parameters":{"id":8887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8886,"mutability":"mutable","name":"value","nameLocation":"22088:5:25","nodeType":"VariableDeclaration","scope":8909,"src":"22081:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8885,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:25"},"returnParameters":{"id":8890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8889,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:25","nodeType":"VariableDeclaration","scope":8909,"src":"22118:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8888,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:25"},"scope":9522,"src":"22063:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8934,"nodeType":"Block","src":"22684:150:25","statements":[{"expression":{"id":8922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"22694:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"22714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8918,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:25","typeDescriptions":{}}},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8923,"nodeType":"ExpressionStatement","src":"22694:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"22734:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"22748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8933,"nodeType":"IfStatement","src":"22730:98:25","trueBody":{"id":8932,"nodeType":"Block","src":"22755:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8912,"src":"22811:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8927,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"22776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8931,"nodeType":"RevertStatement","src":"22769:48:25"}]}}]},"documentation":{"id":8910,"nodeType":"StructuredDocumentation","src":"22293:312:25","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8935,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:25","nodeType":"FunctionDefinition","parameters":{"id":8913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8912,"mutability":"mutable","name":"value","nameLocation":"22635:5:25","nodeType":"VariableDeclaration","scope":8935,"src":"22628:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8911,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:25"},"returnParameters":{"id":8916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8915,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:25","nodeType":"VariableDeclaration","scope":8935,"src":"22665:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8914,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:25"},"scope":9522,"src":"22610:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8960,"nodeType":"Block","src":"23231:150:25","statements":[{"expression":{"id":8948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8943,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"23241:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"23261:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8944,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:25","typeDescriptions":{}}},"id":8947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8949,"nodeType":"ExpressionStatement","src":"23241:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"23281:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"23295:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8959,"nodeType":"IfStatement","src":"23277:98:25","trueBody":{"id":8958,"nodeType":"Block","src":"23302:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"23358:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8953,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"23323:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8957,"nodeType":"RevertStatement","src":"23316:48:25"}]}}]},"documentation":{"id":8936,"nodeType":"StructuredDocumentation","src":"22840:312:25","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8961,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:25","nodeType":"FunctionDefinition","parameters":{"id":8939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8938,"mutability":"mutable","name":"value","nameLocation":"23182:5:25","nodeType":"VariableDeclaration","scope":8961,"src":"23175:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8937,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:25"},"returnParameters":{"id":8942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8941,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:25","nodeType":"VariableDeclaration","scope":8961,"src":"23212:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8940,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:25"},"scope":9522,"src":"23157:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8986,"nodeType":"Block","src":"23778:150:25","statements":[{"expression":{"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8967,"src":"23788:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8964,"src":"23808:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8970,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:25","typeDescriptions":{}}},"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8975,"nodeType":"ExpressionStatement","src":"23788:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8967,"src":"23828:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8964,"src":"23842:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8985,"nodeType":"IfStatement","src":"23824:98:25","trueBody":{"id":8984,"nodeType":"Block","src":"23849:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8964,"src":"23905:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8979,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"23870:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8983,"nodeType":"RevertStatement","src":"23863:48:25"}]}}]},"documentation":{"id":8962,"nodeType":"StructuredDocumentation","src":"23387:312:25","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8987,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:25","nodeType":"FunctionDefinition","parameters":{"id":8965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8964,"mutability":"mutable","name":"value","nameLocation":"23729:5:25","nodeType":"VariableDeclaration","scope":8987,"src":"23722:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8963,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:25"},"returnParameters":{"id":8968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8967,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:25","nodeType":"VariableDeclaration","scope":8987,"src":"23759:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8966,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:25"},"scope":9522,"src":"23704:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9012,"nodeType":"Block","src":"24325:150:25","statements":[{"expression":{"id":9000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"24335:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8990,"src":"24355:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8996,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:25","typeDescriptions":{}}},"id":8999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":9001,"nodeType":"ExpressionStatement","src":"24335:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"24375:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8990,"src":"24389:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9011,"nodeType":"IfStatement","src":"24371:98:25","trueBody":{"id":9010,"nodeType":"Block","src":"24396:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":9006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":9007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8990,"src":"24452:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9005,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"24417:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9009,"nodeType":"RevertStatement","src":"24410:48:25"}]}}]},"documentation":{"id":8988,"nodeType":"StructuredDocumentation","src":"23934:312:25","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":9013,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:25","nodeType":"FunctionDefinition","parameters":{"id":8991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8990,"mutability":"mutable","name":"value","nameLocation":"24276:5:25","nodeType":"VariableDeclaration","scope":9013,"src":"24269:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8989,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:25"},"returnParameters":{"id":8994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8993,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:25","nodeType":"VariableDeclaration","scope":9013,"src":"24306:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8992,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:25"},"scope":9522,"src":"24251:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9038,"nodeType":"Block","src":"24872:150:25","statements":[{"expression":{"id":9026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9019,"src":"24882:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"24902:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":9022,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:25","typeDescriptions":{}}},"id":9025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":9027,"nodeType":"ExpressionStatement","src":"24882:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9019,"src":"24922:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"24936:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9037,"nodeType":"IfStatement","src":"24918:98:25","trueBody":{"id":9036,"nodeType":"Block","src":"24943:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":9032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":9033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9016,"src":"24999:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9031,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"24964:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9035,"nodeType":"RevertStatement","src":"24957:48:25"}]}}]},"documentation":{"id":9014,"nodeType":"StructuredDocumentation","src":"24481:312:25","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":9039,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:25","nodeType":"FunctionDefinition","parameters":{"id":9017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9016,"mutability":"mutable","name":"value","nameLocation":"24823:5:25","nodeType":"VariableDeclaration","scope":9039,"src":"24816:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9015,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:25"},"returnParameters":{"id":9020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9019,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:25","nodeType":"VariableDeclaration","scope":9039,"src":"24853:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":9018,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:25"},"scope":9522,"src":"24798:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9064,"nodeType":"Block","src":"25419:150:25","statements":[{"expression":{"id":9052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9045,"src":"25429:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9042,"src":"25449:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":9048,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:25","typeDescriptions":{}}},"id":9051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":9053,"nodeType":"ExpressionStatement","src":"25429:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9045,"src":"25469:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9042,"src":"25483:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9063,"nodeType":"IfStatement","src":"25465:98:25","trueBody":{"id":9062,"nodeType":"Block","src":"25490:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":9058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":9059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9042,"src":"25546:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9057,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"25511:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9061,"nodeType":"RevertStatement","src":"25504:48:25"}]}}]},"documentation":{"id":9040,"nodeType":"StructuredDocumentation","src":"25028:312:25","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":9065,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:25","nodeType":"FunctionDefinition","parameters":{"id":9043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9042,"mutability":"mutable","name":"value","nameLocation":"25370:5:25","nodeType":"VariableDeclaration","scope":9065,"src":"25363:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9041,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:25"},"returnParameters":{"id":9046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9045,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:25","nodeType":"VariableDeclaration","scope":9065,"src":"25400:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":9044,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:25"},"scope":9522,"src":"25345:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9090,"nodeType":"Block","src":"25966:150:25","statements":[{"expression":{"id":9078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"25976:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"25996:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":9074,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:25","typeDescriptions":{}}},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":9079,"nodeType":"ExpressionStatement","src":"25976:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9071,"src":"26016:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"26030:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9089,"nodeType":"IfStatement","src":"26012:98:25","trueBody":{"id":9088,"nodeType":"Block","src":"26037:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":9084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":9085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"26093:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9083,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"26058:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9087,"nodeType":"RevertStatement","src":"26051:48:25"}]}}]},"documentation":{"id":9066,"nodeType":"StructuredDocumentation","src":"25575:312:25","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":9091,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:25","nodeType":"FunctionDefinition","parameters":{"id":9069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9068,"mutability":"mutable","name":"value","nameLocation":"25917:5:25","nodeType":"VariableDeclaration","scope":9091,"src":"25910:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9067,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:25"},"returnParameters":{"id":9072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9071,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:25","nodeType":"VariableDeclaration","scope":9091,"src":"25947:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9070,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:25"},"scope":9522,"src":"25892:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9116,"nodeType":"Block","src":"26513:150:25","statements":[{"expression":{"id":9104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9097,"src":"26523:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9094,"src":"26543:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":9100,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:25","typeDescriptions":{}}},"id":9103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":9105,"nodeType":"ExpressionStatement","src":"26523:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9097,"src":"26563:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9094,"src":"26577:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9115,"nodeType":"IfStatement","src":"26559:98:25","trueBody":{"id":9114,"nodeType":"Block","src":"26584:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":9110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":9111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9094,"src":"26640:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9109,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"26605:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9113,"nodeType":"RevertStatement","src":"26598:48:25"}]}}]},"documentation":{"id":9092,"nodeType":"StructuredDocumentation","src":"26122:312:25","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":9117,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:25","nodeType":"FunctionDefinition","parameters":{"id":9095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9094,"mutability":"mutable","name":"value","nameLocation":"26464:5:25","nodeType":"VariableDeclaration","scope":9117,"src":"26457:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9093,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:25"},"returnParameters":{"id":9098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9097,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:25","nodeType":"VariableDeclaration","scope":9117,"src":"26494:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":9096,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:25"},"scope":9522,"src":"26439:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9142,"nodeType":"Block","src":"27060:150:25","statements":[{"expression":{"id":9130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9123,"src":"27070:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9120,"src":"27090:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":9126,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:25","typeDescriptions":{}}},"id":9129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":9131,"nodeType":"ExpressionStatement","src":"27070:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9123,"src":"27110:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9120,"src":"27124:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9141,"nodeType":"IfStatement","src":"27106:98:25","trueBody":{"id":9140,"nodeType":"Block","src":"27131:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":9136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":9137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9120,"src":"27187:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9135,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"27152:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9139,"nodeType":"RevertStatement","src":"27145:48:25"}]}}]},"documentation":{"id":9118,"nodeType":"StructuredDocumentation","src":"26669:312:25","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":9143,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:25","nodeType":"FunctionDefinition","parameters":{"id":9121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9120,"mutability":"mutable","name":"value","nameLocation":"27011:5:25","nodeType":"VariableDeclaration","scope":9143,"src":"27004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9119,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:25"},"returnParameters":{"id":9124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9123,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:25","nodeType":"VariableDeclaration","scope":9143,"src":"27041:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":9122,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:25"},"scope":9522,"src":"26986:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9168,"nodeType":"Block","src":"27607:150:25","statements":[{"expression":{"id":9156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9149,"src":"27617:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"27637:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":9152,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:25","typeDescriptions":{}}},"id":9155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":9157,"nodeType":"ExpressionStatement","src":"27617:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9149,"src":"27657:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"27671:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9167,"nodeType":"IfStatement","src":"27653:98:25","trueBody":{"id":9166,"nodeType":"Block","src":"27678:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":9162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":9163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"27734:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9161,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"27699:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9165,"nodeType":"RevertStatement","src":"27692:48:25"}]}}]},"documentation":{"id":9144,"nodeType":"StructuredDocumentation","src":"27216:312:25","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":9169,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:25","nodeType":"FunctionDefinition","parameters":{"id":9147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9146,"mutability":"mutable","name":"value","nameLocation":"27558:5:25","nodeType":"VariableDeclaration","scope":9169,"src":"27551:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9145,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:25"},"returnParameters":{"id":9150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9149,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:25","nodeType":"VariableDeclaration","scope":9169,"src":"27588:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":9148,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:25"},"scope":9522,"src":"27533:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9194,"nodeType":"Block","src":"28147:148:25","statements":[{"expression":{"id":9182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"28157:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9172,"src":"28176:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":9178,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:25","typeDescriptions":{}}},"id":9181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":9183,"nodeType":"ExpressionStatement","src":"28157:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9175,"src":"28196:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9172,"src":"28210:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9193,"nodeType":"IfStatement","src":"28192:97:25","trueBody":{"id":9192,"nodeType":"Block","src":"28217:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":9188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":9189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9172,"src":"28272:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9187,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"28238:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9191,"nodeType":"RevertStatement","src":"28231:47:25"}]}}]},"documentation":{"id":9170,"nodeType":"StructuredDocumentation","src":"27763:307:25","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":9195,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:25","nodeType":"FunctionDefinition","parameters":{"id":9173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9172,"mutability":"mutable","name":"value","nameLocation":"28099:5:25","nodeType":"VariableDeclaration","scope":9195,"src":"28092:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9171,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:25"},"returnParameters":{"id":9176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9175,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:25","nodeType":"VariableDeclaration","scope":9195,"src":"28129:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":9174,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:25"},"scope":9522,"src":"28075:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9220,"nodeType":"Block","src":"28685:148:25","statements":[{"expression":{"id":9208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9201,"src":"28695:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"28714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":9204,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:25","typeDescriptions":{}}},"id":9207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":9209,"nodeType":"ExpressionStatement","src":"28695:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9201,"src":"28734:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"28748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9219,"nodeType":"IfStatement","src":"28730:97:25","trueBody":{"id":9218,"nodeType":"Block","src":"28755:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":9214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":9215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9198,"src":"28810:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9213,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"28776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9217,"nodeType":"RevertStatement","src":"28769:47:25"}]}}]},"documentation":{"id":9196,"nodeType":"StructuredDocumentation","src":"28301:307:25","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":9221,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:25","nodeType":"FunctionDefinition","parameters":{"id":9199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9198,"mutability":"mutable","name":"value","nameLocation":"28637:5:25","nodeType":"VariableDeclaration","scope":9221,"src":"28630:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9197,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:25"},"returnParameters":{"id":9202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9201,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:25","nodeType":"VariableDeclaration","scope":9221,"src":"28667:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":9200,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:25"},"scope":9522,"src":"28613:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9246,"nodeType":"Block","src":"29223:148:25","statements":[{"expression":{"id":9234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9227,"src":"29233:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"29252:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":9230,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:25","typeDescriptions":{}}},"id":9233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":9235,"nodeType":"ExpressionStatement","src":"29233:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9227,"src":"29272:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"29286:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9245,"nodeType":"IfStatement","src":"29268:97:25","trueBody":{"id":9244,"nodeType":"Block","src":"29293:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":9240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":9241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"29348:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9239,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"29314:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9243,"nodeType":"RevertStatement","src":"29307:47:25"}]}}]},"documentation":{"id":9222,"nodeType":"StructuredDocumentation","src":"28839:307:25","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":9247,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:25","nodeType":"FunctionDefinition","parameters":{"id":9225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9224,"mutability":"mutable","name":"value","nameLocation":"29175:5:25","nodeType":"VariableDeclaration","scope":9247,"src":"29168:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9223,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:25"},"returnParameters":{"id":9228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9227,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:25","nodeType":"VariableDeclaration","scope":9247,"src":"29205:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":9226,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:25"},"scope":9522,"src":"29151:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9272,"nodeType":"Block","src":"29761:148:25","statements":[{"expression":{"id":9260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9255,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9253,"src":"29771:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9250,"src":"29790:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":9256,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:25","typeDescriptions":{}}},"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":9261,"nodeType":"ExpressionStatement","src":"29771:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9253,"src":"29810:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9250,"src":"29824:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9271,"nodeType":"IfStatement","src":"29806:97:25","trueBody":{"id":9270,"nodeType":"Block","src":"29831:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":9266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":9267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9250,"src":"29886:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9265,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"29852:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9269,"nodeType":"RevertStatement","src":"29845:47:25"}]}}]},"documentation":{"id":9248,"nodeType":"StructuredDocumentation","src":"29377:307:25","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":9273,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:25","nodeType":"FunctionDefinition","parameters":{"id":9251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9250,"mutability":"mutable","name":"value","nameLocation":"29713:5:25","nodeType":"VariableDeclaration","scope":9273,"src":"29706:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9249,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:25"},"returnParameters":{"id":9254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9253,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:25","nodeType":"VariableDeclaration","scope":9273,"src":"29743:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":9252,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:25"},"scope":9522,"src":"29689:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9298,"nodeType":"Block","src":"30299:148:25","statements":[{"expression":{"id":9286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9281,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9279,"src":"30309:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9276,"src":"30328:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":9282,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:25","typeDescriptions":{}}},"id":9285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":9287,"nodeType":"ExpressionStatement","src":"30309:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9279,"src":"30348:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9276,"src":"30362:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9297,"nodeType":"IfStatement","src":"30344:97:25","trueBody":{"id":9296,"nodeType":"Block","src":"30369:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":9292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":9293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9276,"src":"30424:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9291,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"30390:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9295,"nodeType":"RevertStatement","src":"30383:47:25"}]}}]},"documentation":{"id":9274,"nodeType":"StructuredDocumentation","src":"29915:307:25","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":9299,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:25","nodeType":"FunctionDefinition","parameters":{"id":9277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9276,"mutability":"mutable","name":"value","nameLocation":"30251:5:25","nodeType":"VariableDeclaration","scope":9299,"src":"30244:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9275,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:25"},"returnParameters":{"id":9280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9279,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:25","nodeType":"VariableDeclaration","scope":9299,"src":"30281:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9278,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:25"},"scope":9522,"src":"30227:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9324,"nodeType":"Block","src":"30837:148:25","statements":[{"expression":{"id":9312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9307,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"30847:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"30866:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":9308,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:25","typeDescriptions":{}}},"id":9311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":9313,"nodeType":"ExpressionStatement","src":"30847:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9305,"src":"30886:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"30900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9323,"nodeType":"IfStatement","src":"30882:97:25","trueBody":{"id":9322,"nodeType":"Block","src":"30907:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":9318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":9319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9302,"src":"30962:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9317,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"30928:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9321,"nodeType":"RevertStatement","src":"30921:47:25"}]}}]},"documentation":{"id":9300,"nodeType":"StructuredDocumentation","src":"30453:307:25","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":9325,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:25","nodeType":"FunctionDefinition","parameters":{"id":9303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9302,"mutability":"mutable","name":"value","nameLocation":"30789:5:25","nodeType":"VariableDeclaration","scope":9325,"src":"30782:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9301,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:25"},"returnParameters":{"id":9306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9305,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:25","nodeType":"VariableDeclaration","scope":9325,"src":"30819:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":9304,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:25"},"scope":9522,"src":"30765:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9350,"nodeType":"Block","src":"31375:148:25","statements":[{"expression":{"id":9338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9333,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"31385:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"31404:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":9334,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:25","typeDescriptions":{}}},"id":9337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":9339,"nodeType":"ExpressionStatement","src":"31385:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"31424:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"31438:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9349,"nodeType":"IfStatement","src":"31420:97:25","trueBody":{"id":9348,"nodeType":"Block","src":"31445:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"31500:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9343,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"31466:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9347,"nodeType":"RevertStatement","src":"31459:47:25"}]}}]},"documentation":{"id":9326,"nodeType":"StructuredDocumentation","src":"30991:307:25","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9351,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:25","nodeType":"FunctionDefinition","parameters":{"id":9329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9328,"mutability":"mutable","name":"value","nameLocation":"31327:5:25","nodeType":"VariableDeclaration","scope":9351,"src":"31320:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9327,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:25"},"returnParameters":{"id":9332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9331,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:25","nodeType":"VariableDeclaration","scope":9351,"src":"31357:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":9330,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:25"},"scope":9522,"src":"31303:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9376,"nodeType":"Block","src":"31913:148:25","statements":[{"expression":{"id":9364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9359,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9357,"src":"31923:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9354,"src":"31942:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":9360,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:25","typeDescriptions":{}}},"id":9363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":9365,"nodeType":"ExpressionStatement","src":"31923:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9357,"src":"31962:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9354,"src":"31976:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9375,"nodeType":"IfStatement","src":"31958:97:25","trueBody":{"id":9374,"nodeType":"Block","src":"31983:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9354,"src":"32038:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9369,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"32004:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9373,"nodeType":"RevertStatement","src":"31997:47:25"}]}}]},"documentation":{"id":9352,"nodeType":"StructuredDocumentation","src":"31529:307:25","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9377,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:25","nodeType":"FunctionDefinition","parameters":{"id":9355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9354,"mutability":"mutable","name":"value","nameLocation":"31865:5:25","nodeType":"VariableDeclaration","scope":9377,"src":"31858:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9353,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:25"},"returnParameters":{"id":9358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9357,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:25","nodeType":"VariableDeclaration","scope":9377,"src":"31895:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":9356,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:25"},"scope":9522,"src":"31841:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9402,"nodeType":"Block","src":"32451:148:25","statements":[{"expression":{"id":9390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9385,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9383,"src":"32461:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9380,"src":"32480:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":9386,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:25","typeDescriptions":{}}},"id":9389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":9391,"nodeType":"ExpressionStatement","src":"32461:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9383,"src":"32500:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9380,"src":"32514:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9401,"nodeType":"IfStatement","src":"32496:97:25","trueBody":{"id":9400,"nodeType":"Block","src":"32521:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9380,"src":"32576:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9395,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"32542:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9399,"nodeType":"RevertStatement","src":"32535:47:25"}]}}]},"documentation":{"id":9378,"nodeType":"StructuredDocumentation","src":"32067:307:25","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9403,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:25","nodeType":"FunctionDefinition","parameters":{"id":9381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9380,"mutability":"mutable","name":"value","nameLocation":"32403:5:25","nodeType":"VariableDeclaration","scope":9403,"src":"32396:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9379,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:25"},"returnParameters":{"id":9384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9383,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:25","nodeType":"VariableDeclaration","scope":9403,"src":"32433:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9382,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:25"},"scope":9522,"src":"32379:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9428,"nodeType":"Block","src":"32989:148:25","statements":[{"expression":{"id":9416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9411,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9409,"src":"32999:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"33018:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":9412,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:25","typeDescriptions":{}}},"id":9415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":9417,"nodeType":"ExpressionStatement","src":"32999:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9409,"src":"33038:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"33052:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9427,"nodeType":"IfStatement","src":"33034:97:25","trueBody":{"id":9426,"nodeType":"Block","src":"33059:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"33114:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9421,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"33080:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9425,"nodeType":"RevertStatement","src":"33073:47:25"}]}}]},"documentation":{"id":9404,"nodeType":"StructuredDocumentation","src":"32605:307:25","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9429,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:25","nodeType":"FunctionDefinition","parameters":{"id":9407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9406,"mutability":"mutable","name":"value","nameLocation":"32941:5:25","nodeType":"VariableDeclaration","scope":9429,"src":"32934:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9405,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:25"},"returnParameters":{"id":9410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9409,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:25","nodeType":"VariableDeclaration","scope":9429,"src":"32971:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":9408,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:25"},"scope":9522,"src":"32917:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9454,"nodeType":"Block","src":"33527:148:25","statements":[{"expression":{"id":9442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9437,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9435,"src":"33537:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9432,"src":"33556:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":9438,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:25","typeDescriptions":{}}},"id":9441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":9443,"nodeType":"ExpressionStatement","src":"33537:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9435,"src":"33576:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9432,"src":"33590:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9453,"nodeType":"IfStatement","src":"33572:97:25","trueBody":{"id":9452,"nodeType":"Block","src":"33597:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9432,"src":"33652:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9447,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"33618:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9451,"nodeType":"RevertStatement","src":"33611:47:25"}]}}]},"documentation":{"id":9430,"nodeType":"StructuredDocumentation","src":"33143:307:25","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9455,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:25","nodeType":"FunctionDefinition","parameters":{"id":9433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9432,"mutability":"mutable","name":"value","nameLocation":"33479:5:25","nodeType":"VariableDeclaration","scope":9455,"src":"33472:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9431,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:25"},"returnParameters":{"id":9436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9435,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:25","nodeType":"VariableDeclaration","scope":9455,"src":"33509:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":9434,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:25"},"scope":9522,"src":"33455:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9480,"nodeType":"Block","src":"34058:146:25","statements":[{"expression":{"id":9468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9463,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"34068:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9458,"src":"34086:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":9464,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:25","typeDescriptions":{}}},"id":9467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":9469,"nodeType":"ExpressionStatement","src":"34068:24:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9470,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"34106:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9458,"src":"34120:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9479,"nodeType":"IfStatement","src":"34102:96:25","trueBody":{"id":9478,"nodeType":"Block","src":"34127:71:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9458,"src":"34181:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9473,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"34148:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9477,"nodeType":"RevertStatement","src":"34141:46:25"}]}}]},"documentation":{"id":9456,"nodeType":"StructuredDocumentation","src":"33681:302:25","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9481,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:25","nodeType":"FunctionDefinition","parameters":{"id":9459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9458,"mutability":"mutable","name":"value","nameLocation":"34011:5:25","nodeType":"VariableDeclaration","scope":9481,"src":"34004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9457,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:25"},"returnParameters":{"id":9462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9461,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:25","nodeType":"VariableDeclaration","scope":9481,"src":"34041:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":9460,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:25"},"scope":9522,"src":"33988:216:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9510,"nodeType":"Block","src":"34444:250:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9484,"src":"34557:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":9494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9493,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":9492,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":9496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:25","memberName":"max","nodeType":"MemberAccess","src":"34573:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9490,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:25","typeDescriptions":{}}},"id":9497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9504,"nodeType":"IfStatement","src":"34553:105:25","trueBody":{"id":9503,"nodeType":"Block","src":"34592:66:25","statements":[{"errorCall":{"arguments":[{"id":9500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9484,"src":"34641:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9499,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"34613:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":9501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9502,"nodeType":"RevertStatement","src":"34606:41:25"}]}},{"expression":{"arguments":[{"id":9507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9484,"src":"34681:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9505,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:25","typeDescriptions":{}}},"id":9508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9488,"id":9509,"nodeType":"Return","src":"34667:20:25"}]},"documentation":{"id":9482,"nodeType":"StructuredDocumentation","src":"34210:165:25","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":9511,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:25","nodeType":"FunctionDefinition","parameters":{"id":9485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9484,"mutability":"mutable","name":"value","nameLocation":"34406:5:25","nodeType":"VariableDeclaration","scope":9511,"src":"34398:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9483,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:25"},"returnParameters":{"id":9488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9511,"src":"34436:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9486,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:25"},"scope":9522,"src":"34380:314:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9520,"nodeType":"Block","src":"34853:87:25","statements":[{"AST":{"nativeSrc":"34888:46:25","nodeType":"YulBlock","src":"34888:46:25","statements":[{"nativeSrc":"34902:22:25","nodeType":"YulAssignment","src":"34902:22:25","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:25","nodeType":"YulIdentifier","src":"34921:1:25"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:25","nodeType":"YulIdentifier","src":"34914:6:25"},"nativeSrc":"34914:9:25","nodeType":"YulFunctionCall","src":"34914:9:25"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:25","nodeType":"YulIdentifier","src":"34907:6:25"},"nativeSrc":"34907:17:25","nodeType":"YulFunctionCall","src":"34907:17:25"},"variableNames":[{"name":"u","nativeSrc":"34902:1:25","nodeType":"YulIdentifier","src":"34902:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9514,"isOffset":false,"isSlot":false,"src":"34921:1:25","valueSize":1},{"declaration":9517,"isOffset":false,"isSlot":false,"src":"34902:1:25","valueSize":1}],"flags":["memory-safe"],"id":9519,"nodeType":"InlineAssembly","src":"34863:71:25"}]},"documentation":{"id":9512,"nodeType":"StructuredDocumentation","src":"34700:90:25","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":9521,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:25","nodeType":"FunctionDefinition","parameters":{"id":9515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9514,"mutability":"mutable","name":"b","nameLocation":"34816:1:25","nodeType":"VariableDeclaration","scope":9521,"src":"34811:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9513,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:25"},"returnParameters":{"id":9518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9517,"mutability":"mutable","name":"u","nameLocation":"34850:1:25","nodeType":"VariableDeclaration","scope":9521,"src":"34842:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9516,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:25"},"scope":9522,"src":"34795:145:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9523,"src":"769:34173:25","usedErrors":[7767,7772,7779,7784],"usedEvents":[]}],"src":"192:34751:25"},"id":25},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[9522],"SignedMath":[9666]},"id":9667,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9524,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":9526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9667,"sourceUnit":9523,"src":"135:40:26","symbolAliases":[{"foreign":{"id":9525,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"143:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":9527,"nodeType":"StructuredDocumentation","src":"177:80:26","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9666,"linearizedBaseContracts":[9666],"name":"SignedMath","nameLocation":"266:10:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":9556,"nodeType":"Block","src":"746:215:26","statements":[{"id":9555,"nodeType":"UncheckedBlock","src":"756:199:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9534,"src":"894:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9540,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9532,"src":"900:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9541,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9534,"src":"904:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":9548,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9530,"src":"932:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9546,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"916:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9522_$","typeString":"type(library SafeCast)"}},"id":9547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9521,"src":"916:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":9549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9544,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:26","typeDescriptions":{}}},"id":9550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9538,"id":9554,"nodeType":"Return","src":"887:57:26"}]}]},"documentation":{"id":9528,"nodeType":"StructuredDocumentation","src":"283:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":9557,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:26","nodeType":"FunctionDefinition","parameters":{"id":9535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9530,"mutability":"mutable","name":"condition","nameLocation":"684:9:26","nodeType":"VariableDeclaration","scope":9557,"src":"679:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9529,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9532,"mutability":"mutable","name":"a","nameLocation":"702:1:26","nodeType":"VariableDeclaration","scope":9557,"src":"695:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9531,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9534,"mutability":"mutable","name":"b","nameLocation":"712:1:26","nodeType":"VariableDeclaration","scope":9557,"src":"705:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9533,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:26"},"returnParameters":{"id":9538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9557,"src":"738:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9536,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:26"},"scope":9666,"src":"662:299:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9575,"nodeType":"Block","src":"1102:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"1127:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9569,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"1131:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"1134:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"1137:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9567,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9557,"src":"1119:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9566,"id":9574,"nodeType":"Return","src":"1112:27:26"}]},"documentation":{"id":9558,"nodeType":"StructuredDocumentation","src":"967:66:26","text":" @dev Returns the largest of two signed numbers."},"id":9576,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:26","nodeType":"FunctionDefinition","parameters":{"id":9563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9560,"mutability":"mutable","name":"a","nameLocation":"1058:1:26","nodeType":"VariableDeclaration","scope":9576,"src":"1051:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9559,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9562,"mutability":"mutable","name":"b","nameLocation":"1068:1:26","nodeType":"VariableDeclaration","scope":9576,"src":"1061:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9561,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:26"},"returnParameters":{"id":9566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9576,"src":"1094:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9564,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:26"},"scope":9666,"src":"1038:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9594,"nodeType":"Block","src":"1288:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"1313:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9581,"src":"1317:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"1320:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9581,"src":"1323:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9586,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9557,"src":"1305:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9585,"id":9593,"nodeType":"Return","src":"1298:27:26"}]},"documentation":{"id":9577,"nodeType":"StructuredDocumentation","src":"1152:67:26","text":" @dev Returns the smallest of two signed numbers."},"id":9595,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:26","nodeType":"FunctionDefinition","parameters":{"id":9582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9579,"mutability":"mutable","name":"a","nameLocation":"1244:1:26","nodeType":"VariableDeclaration","scope":9595,"src":"1237:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9578,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9581,"mutability":"mutable","name":"b","nameLocation":"1254:1:26","nodeType":"VariableDeclaration","scope":9595,"src":"1247:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9580,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:26"},"returnParameters":{"id":9585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9595,"src":"1280:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9583,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:26"},"scope":9666,"src":"1224:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9638,"nodeType":"Block","src":"1537:162:26","statements":[{"assignments":[9606],"declarations":[{"constant":false,"id":9606,"mutability":"mutable","name":"x","nameLocation":"1606:1:26","nodeType":"VariableDeclaration","scope":9638,"src":"1599:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9605,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9619,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9598,"src":"1611:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9608,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9600,"src":"1615:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9610,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9598,"src":"1622:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9612,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9600,"src":"1626:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":9615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:26"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9620,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9606,"src":"1651:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9625,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9606,"src":"1671:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:26","typeDescriptions":{}}},"id":9626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9621,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:26","typeDescriptions":{}}},"id":9629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9598,"src":"1685:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9600,"src":"1689:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9604,"id":9637,"nodeType":"Return","src":"1644:48:26"}]},"documentation":{"id":9596,"nodeType":"StructuredDocumentation","src":"1338:126:26","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9639,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:26","nodeType":"FunctionDefinition","parameters":{"id":9601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9598,"mutability":"mutable","name":"a","nameLocation":"1493:1:26","nodeType":"VariableDeclaration","scope":9639,"src":"1486:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9597,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9600,"mutability":"mutable","name":"b","nameLocation":"1503:1:26","nodeType":"VariableDeclaration","scope":9639,"src":"1496:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9599,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:26"},"returnParameters":{"id":9604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9639,"src":"1529:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9602,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:26"},"scope":9666,"src":"1469:230:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9664,"nodeType":"Block","src":"1843:767:26","statements":[{"id":9663,"nodeType":"UncheckedBlock","src":"1853:751:26","statements":[{"assignments":[9648],"declarations":[{"constant":false,"id":9648,"mutability":"mutable","name":"mask","nameLocation":"2424:4:26","nodeType":"VariableDeclaration","scope":9663,"src":"2417:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9647,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9652,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9649,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9642,"src":"2431:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9655,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9642,"src":"2576:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9656,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9648,"src":"2580:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9659,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9648,"src":"2588:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9653,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:26","typeDescriptions":{}}},"id":9661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9646,"id":9662,"nodeType":"Return","src":"2560:33:26"}]}]},"documentation":{"id":9640,"nodeType":"StructuredDocumentation","src":"1705:78:26","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9665,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:26","nodeType":"FunctionDefinition","parameters":{"id":9643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9642,"mutability":"mutable","name":"n","nameLocation":"1808:1:26","nodeType":"VariableDeclaration","scope":9665,"src":"1801:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9641,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:26"},"returnParameters":{"id":9646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9665,"src":"1834:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:26"},"scope":9666,"src":"1788:822:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9667,"src":"258:2354:26","usedErrors":[],"usedEvents":[]}],"src":"109:2504:26"},"id":26},"contracts/BridgedToken.sol":{"ast":{"absolutePath":"contracts/BridgedToken.sol","exportedSymbols":{"Context":[4392],"ERC20":[2051],"IERC20":[2129],"IERC20Errors":[189],"IERC20Metadata":[2155],"Ownable":[147],"WrappedERC20":[9707]},"id":9708,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":9668,"literals":["solidity","^","0.8",".30"],"nodeType":"PragmaDirective","src":"39:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9708,"sourceUnit":2052,"src":"65:55:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9708,"sourceUnit":148,"src":"121:52:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9671,"name":"ERC20","nameLocations":["200:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"200:5:27"},"id":9672,"nodeType":"InheritanceSpecifier","src":"200:5:27"},{"baseName":{"id":9673,"name":"Ownable","nameLocations":["207:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"207:7:27"},"id":9674,"nodeType":"InheritanceSpecifier","src":"207:7:27"}],"canonicalName":"WrappedERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9707,"linearizedBaseContracts":[9707,147,2051,189,2155,2129,4392],"name":"WrappedERC20","nameLocation":"184:12:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":9690,"nodeType":"Block","src":"326:2:27","statements":[]},"id":9691,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9683,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9676,"src":"297:4:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9684,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9678,"src":"303:6:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9685,"kind":"baseConstructorSpecifier","modifierName":{"id":9682,"name":"ERC20","nameLocations":["291:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"291:5:27"},"nodeType":"ModifierInvocation","src":"291:19:27"},{"arguments":[{"id":9687,"name":"bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9680,"src":"319:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9688,"kind":"baseConstructorSpecifier","modifierName":{"id":9686,"name":"Ownable","nameLocations":["311:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"311:7:27"},"nodeType":"ModifierInvocation","src":"311:15:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9676,"mutability":"mutable","name":"name","nameLocation":"247:4:27","nodeType":"VariableDeclaration","scope":9691,"src":"233:18:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9675,"name":"string","nodeType":"ElementaryTypeName","src":"233:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9678,"mutability":"mutable","name":"symbol","nameLocation":"267:6:27","nodeType":"VariableDeclaration","scope":9691,"src":"253:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9677,"name":"string","nodeType":"ElementaryTypeName","src":"253:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9680,"mutability":"mutable","name":"bridge","nameLocation":"283:6:27","nodeType":"VariableDeclaration","scope":9691,"src":"275:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9679,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"232:58:27"},"returnParameters":{"id":9689,"nodeType":"ParameterList","parameters":[],"src":"326:0:27"},"scope":9707,"src":"221:107:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9705,"nodeType":"Block","src":"399:34:27","statements":[{"expression":{"arguments":[{"id":9701,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9693,"src":"415:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9702,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9695,"src":"419:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9700,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"409:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"409:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9704,"nodeType":"ExpressionStatement","src":"409:17:27"}]},"functionSelector":"40c10f19","id":9706,"implemented":true,"kind":"function","modifiers":[{"id":9698,"kind":"modifierInvocation","modifierName":{"id":9697,"name":"onlyOwner","nameLocations":["389:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"389:9:27"},"nodeType":"ModifierInvocation","src":"389:9:27"}],"name":"mint","nameLocation":"347:4:27","nodeType":"FunctionDefinition","parameters":{"id":9696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9693,"mutability":"mutable","name":"to","nameLocation":"360:2:27","nodeType":"VariableDeclaration","scope":9706,"src":"352:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9692,"name":"address","nodeType":"ElementaryTypeName","src":"352:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9695,"mutability":"mutable","name":"amount","nameLocation":"372:6:27","nodeType":"VariableDeclaration","scope":9706,"src":"364:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9694,"name":"uint256","nodeType":"ElementaryTypeName","src":"364:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"351:28:27"},"returnParameters":{"id":9699,"nodeType":"ParameterList","parameters":[],"src":"399:0:27"},"scope":9707,"src":"338:95:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9708,"src":"175:260:27","usedErrors":[13,18,159,164,169,178,183,188],"usedEvents":[24,2063,2072]}],"src":"39:401:27"},"id":27},"contracts/Dest_Bridge.sol":{"ast":{"absolutePath":"contracts/Dest_Bridge.sol","exportedSymbols":{"Arrays":[4330],"Context":[4392],"Dest_Bridge":[9798],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[6124],"ERC20":[2051],"ERC721":[3112],"ERC721Utils":[3352],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[6136],"IERC20":[2129],"IERC20Errors":[189],"IERC20Metadata":[2155],"IERC721":[3229],"IERC721Errors":[237],"IERC721Metadata":[3275],"Ownable":[147],"Strings":[6100],"WrappedERC20":[9707]},"id":9799,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":9709,"literals":["solidity","^","0.8",".30"],"nodeType":"PragmaDirective","src":"39:25:28"},{"absolutePath":"contracts/BridgedToken.sol","file":"./BridgedToken.sol","id":9710,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9799,"sourceUnit":9708,"src":"66:28:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9799,"sourceUnit":2052,"src":"95:55:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":9712,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9799,"sourceUnit":3113,"src":"151:57:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":9713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9799,"sourceUnit":1202,"src":"209:59:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9714,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9799,"sourceUnit":148,"src":"269:52:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9716,"name":"Ownable","nameLocations":["572:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"572:7:28"},"id":9717,"nodeType":"InheritanceSpecifier","src":"572:7:28"}],"canonicalName":"Dest_Bridge","contractDependencies":[],"contractKind":"contract","documentation":{"id":9715,"nodeType":"StructuredDocumentation","src":"323:225:28","text":"@title Destination Bridge Contract\n @notice Mints wrapped tokens on the destination chain upon validated lock events\n @dev Owner-restricted mint with nonce replay protection. The relayer (owner) calls `mintTokens`."},"fullyImplemented":true,"id":9798,"linearizedBaseContracts":[9798,147,4392],"name":"Dest_Bridge","nameLocation":"557:11:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":9726,"nodeType":"Block","src":"807:2:28","statements":[]},"documentation":{"id":9718,"nodeType":"StructuredDocumentation","src":"586:160:28","text":"@notice Initialize ownership; set to a relayer or governance address in deployment\n @param initialOwner The address that will have permission to mint"},"id":9727,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9723,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9720,"src":"793:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9724,"kind":"baseConstructorSpecifier","modifierName":{"id":9722,"name":"Ownable","nameLocations":["785:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"785:7:28"},"nodeType":"ModifierInvocation","src":"785:21:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9720,"mutability":"mutable","name":"initialOwner","nameLocation":"771:12:28","nodeType":"VariableDeclaration","scope":9727,"src":"763:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9719,"name":"address","nodeType":"ElementaryTypeName","src":"763:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"762:22:28"},"returnParameters":{"id":9725,"nodeType":"ParameterList","parameters":[],"src":"807:0:28"},"scope":9798,"src":"751:58:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"documentation":{"id":9728,"nodeType":"StructuredDocumentation","src":"815:53:28","text":"@notice Tracks processed nonces to prevent replay"},"functionSelector":"92322ab1","id":9732,"mutability":"mutable","name":"doneNonces","nameLocation":"903:10:28","nodeType":"VariableDeclaration","scope":9798,"src":"873:40:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":9731,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9729,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"873:22:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9730,"name":"bool","nodeType":"ElementaryTypeName","src":"890:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"documentation":{"id":9733,"nodeType":"StructuredDocumentation","src":"920:275:28","text":"@notice Emitted after successful mint on destination\n @param user The recipient of the wrapped tokens\n @param token The wrapped token contract that minted\n @param amount The amount minted\n @param nonce The corresponding source-chain lock nonce"},"eventSelector":"2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee","id":9743,"name":"Mint","nameLocation":"1206:4:28","nodeType":"EventDefinition","parameters":{"id":9742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9735,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1227:4:28","nodeType":"VariableDeclaration","scope":9743,"src":"1211:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9734,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9737,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1249:5:28","nodeType":"VariableDeclaration","scope":9743,"src":"1233:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9736,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9739,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1264:6:28","nodeType":"VariableDeclaration","scope":9743,"src":"1256:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9741,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1280:5:28","nodeType":"VariableDeclaration","scope":9743,"src":"1272:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:76:28"},"src":"1200:87:28"},{"body":{"id":9796,"nodeType":"Block","src":"1754:270:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9758,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"1772:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1780:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9759,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:28","typeDescriptions":{}}},"id":9762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1772:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e744272696467653a20696e76616c69642075736572","id":9764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1792:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201","typeString":"literal_string \"MintBridge: invalid user\""},"value":"MintBridge: invalid user"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201","typeString":"literal_string \"MintBridge: invalid user\""}],"id":9757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1764:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9766,"nodeType":"ExpressionStatement","src":"1764:55:28"},{"expression":{"arguments":[{"id":9771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1837:18:28","subExpression":{"baseExpression":{"id":9768,"name":"doneNonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9732,"src":"1838:10:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":9770,"indexExpression":{"id":9769,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9752,"src":"1849:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1838:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e744272696467653a206e6f6e636520616c72656164792075736564","id":9772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1857:32:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2","typeString":"literal_string \"MintBridge: nonce already used\""},"value":"MintBridge: nonce already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2","typeString":"literal_string \"MintBridge: nonce already used\""}],"id":9767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1829:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:61:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9774,"nodeType":"ExpressionStatement","src":"1829:61:28"},{"expression":{"id":9779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9775,"name":"doneNonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9732,"src":"1900:10:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":9777,"indexExpression":{"id":9776,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9752,"src":"1911:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1900:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1918:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1900:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9780,"nodeType":"ExpressionStatement","src":"1900:22:28"},{"expression":{"arguments":[{"id":9785,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"1957:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9786,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9750,"src":"1963:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":9782,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9748,"src":"1945:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9781,"name":"WrappedERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9707,"src":"1932:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WrappedERC20_$9707_$","typeString":"type(contract WrappedERC20)"}},"id":9783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_WrappedERC20_$9707","typeString":"contract WrappedERC20"}},"id":9784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1952:4:28","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":9706,"src":"1932:24:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":9787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9788,"nodeType":"ExpressionStatement","src":"1932:38:28"},{"eventCall":{"arguments":[{"id":9790,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"1990:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9791,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9748,"src":"1996:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9792,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9750,"src":"2003:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9793,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9752,"src":"2011:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9789,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9743,"src":"1985:4:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1985:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9795,"nodeType":"EmitStatement","src":"1980:37:28"}]},"documentation":{"id":9744,"nodeType":"StructuredDocumentation","src":"1293:364:28","text":"@notice Mint wrapped tokens to a user for a specific nonce\n @dev Only the contract owner can call. Caller is expected to be an off-chain relayer.\n @param user The destination recipient\n @param token The wrapped token contract to mint\n @param amount The amount to mint\n @param nonce The source-chain nonce ensuring idempotence"},"functionSelector":"c00fb782","id":9797,"implemented":true,"kind":"function","modifiers":[{"id":9755,"kind":"modifierInvocation","modifierName":{"id":9754,"name":"onlyOwner","nameLocations":["1745:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1745:9:28"},"nodeType":"ModifierInvocation","src":"1745:9:28"}],"name":"mintTokens","nameLocation":"1671:10:28","nodeType":"FunctionDefinition","parameters":{"id":9753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9746,"mutability":"mutable","name":"user","nameLocation":"1690:4:28","nodeType":"VariableDeclaration","scope":9797,"src":"1682:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9745,"name":"address","nodeType":"ElementaryTypeName","src":"1682:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9748,"mutability":"mutable","name":"token","nameLocation":"1704:5:28","nodeType":"VariableDeclaration","scope":9797,"src":"1696:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9747,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9750,"mutability":"mutable","name":"amount","nameLocation":"1716:6:28","nodeType":"VariableDeclaration","scope":9797,"src":"1711:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9749,"name":"uint","nodeType":"ElementaryTypeName","src":"1711:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9752,"mutability":"mutable","name":"nonce","nameLocation":"1729:5:28","nodeType":"VariableDeclaration","scope":9797,"src":"1724:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9751,"name":"uint","nodeType":"ElementaryTypeName","src":"1724:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1681:54:28"},"returnParameters":{"id":9756,"nodeType":"ParameterList","parameters":[],"src":"1754:0:28"},"scope":9798,"src":"1662:362:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9799,"src":"548:1478:28","usedErrors":[13,18],"usedEvents":[24,9743]}],"src":"39:1987:28"},"id":28},"contracts/Source_bridge.sol":{"ast":{"absolutePath":"contracts/Source_bridge.sol","exportedSymbols":{"Arrays":[4330],"Context":[4392],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[6124],"ERC20":[2051],"ERC721":[3112],"ERC721Utils":[3352],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[6136],"IERC20":[2129],"IERC20Errors":[189],"IERC20Metadata":[2155],"IERC721":[3229],"IERC721Errors":[237],"IERC721Metadata":[3275],"Source_bridge":[9891],"Strings":[6100]},"id":9892,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":9800,"literals":["solidity","^","0.8",".30"],"nodeType":"PragmaDirective","src":"39:24:29"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9892,"sourceUnit":2052,"src":"65:55:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":9802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9892,"sourceUnit":3113,"src":"121:57:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":9803,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9892,"sourceUnit":1202,"src":"179:59:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Source_bridge","contractDependencies":[],"contractKind":"contract","documentation":{"id":9804,"nodeType":"StructuredDocumentation","src":"240:236:29","text":"@title Source Bridge Contract\n @notice Locks tokens on the source chain and emits a canonical event for off-chain relayers\n @dev This contract only handles ERC20 locks; it emits the amount and a monotonically increasing nonce"},"fullyImplemented":true,"id":9891,"linearizedBaseContracts":[9891],"name":"Source_bridge","nameLocation":"485:13:29","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":9805,"nodeType":"StructuredDocumentation","src":"505:71:29","text":"@notice Monotonically increasing identifier for each `Locked` event"},"functionSelector":"affed0e0","id":9807,"mutability":"mutable","name":"nonce","nameLocation":"596:5:29","nodeType":"VariableDeclaration","scope":9891,"src":"581:20:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9806,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":9808,"nodeType":"StructuredDocumentation","src":"608:113:29","text":"@notice Tracks total amount locked per user per token\n @dev LockAmtStore[user][token] => amount locked"},"functionSelector":"151a6312","id":9814,"mutability":"mutable","name":"LockAmtStore","nameLocation":"778:12:29","nodeType":"VariableDeclaration","scope":9891,"src":"726:64:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":9813,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9809,"name":"address","nodeType":"ElementaryTypeName","src":"735:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"726:44:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9812,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9810,"name":"address","nodeType":"ElementaryTypeName","src":"754:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"746:23:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9811,"name":"uint","nodeType":"ElementaryTypeName","src":"764:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"documentation":{"id":9815,"nodeType":"StructuredDocumentation","src":"797:273:29","text":"@notice Emitted when a user locks tokens in the bridge\n @param user The address locking the tokens\n @param token The ERC20 token being locked\n @param amount The amount of tokens locked\n @param nonce Unique sequential identifier for this lock"},"eventSelector":"967ad762aa9070ada8db64577288e214771e89667066ae38e8750cb8a86c5429","id":9825,"name":"Locked","nameLocation":"1081:6:29","nodeType":"EventDefinition","parameters":{"id":9824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9817,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1096:4:29","nodeType":"VariableDeclaration","scope":9825,"src":"1088:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9816,"name":"address","nodeType":"ElementaryTypeName","src":"1088:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9819,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1110:5:29","nodeType":"VariableDeclaration","scope":9825,"src":"1102:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9818,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9821,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1122:6:29","nodeType":"VariableDeclaration","scope":9825,"src":"1117:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9820,"name":"uint","nodeType":"ElementaryTypeName","src":"1117:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9823,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1137:5:29","nodeType":"VariableDeclaration","scope":9825,"src":"1129:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1129:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:56:29"},"src":"1075:69:29"},{"body":{"id":9833,"nodeType":"Block","src":"1217:24:29","statements":[{"expression":{"id":9831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9829,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"1227:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9832,"nodeType":"ExpressionStatement","src":"1227:7:29"}]},"documentation":{"id":9826,"nodeType":"StructuredDocumentation","src":"1150:49:29","text":"@notice Initializes the bridge with nonce = 0"},"id":9834,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9827,"nodeType":"ParameterList","parameters":[],"src":"1215:2:29"},"returnParameters":{"id":9828,"nodeType":"ParameterList","parameters":[],"src":"1217:0:29"},"scope":9891,"src":"1204:37:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9889,"nodeType":"Block","src":"1573:299:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"1591:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1591:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d757374206265203e30","id":9846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1600:19:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab","typeString":"literal_string \"Amount must be >0\""},"value":"Amount must be >0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab","typeString":"literal_string \"Amount must be >0\""}],"id":9842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1583:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1583:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9848,"nodeType":"ExpressionStatement","src":"1583:37:29"},{"assignments":[9850],"declarations":[{"constant":false,"id":9850,"mutability":"mutable","name":"success","nameLocation":"1635:7:29","nodeType":"VariableDeclaration","scope":9889,"src":"1630:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9849,"name":"bool","nodeType":"ElementaryTypeName","src":"1630:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9863,"initialValue":{"arguments":[{"expression":{"id":9855,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1670:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1674:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1670:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9859,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1689:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_Source_bridge_$9891","typeString":"contract Source_bridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Source_bridge_$9891","typeString":"contract Source_bridge"}],"id":9858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1681:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9857,"name":"address","nodeType":"ElementaryTypeName","src":"1681:7:29","typeDescriptions":{}}},"id":9860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1681:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9861,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"1695:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":9852,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9837,"src":"1650:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9851,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1644:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$2051_$","typeString":"type(contract ERC20)"}},"id":9853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1644:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2051","typeString":"contract ERC20"}},"id":9854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1657:12:29","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1734,"src":"1644:25:29","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":9862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1644:58:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1630:72:29"},{"expression":{"arguments":[{"id":9865,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9850,"src":"1720:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572204661696c6564","id":9866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1728:17:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f","typeString":"literal_string \"Transfer Failed\""},"value":"Transfer Failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f","typeString":"literal_string \"Transfer Failed\""}],"id":9864,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1712:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9868,"nodeType":"ExpressionStatement","src":"1712:34:29"},{"expression":{"id":9876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9869,"name":"LockAmtStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9814,"src":"1756:12:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":9873,"indexExpression":{"expression":{"id":9870,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1769:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1773:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1769:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1756:24:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9874,"indexExpression":{"id":9872,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9837,"src":"1781:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1756:31:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9875,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"1789:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:39:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9877,"nodeType":"ExpressionStatement","src":"1756:39:29"},{"eventCall":{"arguments":[{"expression":{"id":9879,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1817:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1821:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1817:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9881,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9837,"src":"1828:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9882,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9839,"src":"1834:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9883,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"1841:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9878,"name":"Locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9825,"src":"1810:6:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":9884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1810:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9885,"nodeType":"EmitStatement","src":"1805:42:29"},{"expression":{"id":9887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1857:7:29","subExpression":{"id":9886,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"1857:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9888,"nodeType":"ExpressionStatement","src":"1857:7:29"}]},"documentation":{"id":9835,"nodeType":"StructuredDocumentation","src":"1247:266:29","text":"@notice Locks tokens in the bridge contract\n @dev Requires prior ERC20 approval for this contract to transfer `amount` from msg.sender\n @param token The address of the ERC20 token to be locked\n @param amount The amount of tokens to be locked"},"functionSelector":"b1c25586","id":9890,"implemented":true,"kind":"function","modifiers":[],"name":"lockTokens","nameLocation":"1527:10:29","nodeType":"FunctionDefinition","parameters":{"id":9840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9837,"mutability":"mutable","name":"token","nameLocation":"1546:5:29","nodeType":"VariableDeclaration","scope":9890,"src":"1538:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9836,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9839,"mutability":"mutable","name":"amount","nameLocation":"1558:6:29","nodeType":"VariableDeclaration","scope":9890,"src":"1553:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9838,"name":"uint","nodeType":"ElementaryTypeName","src":"1553:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:28:29"},"returnParameters":{"id":9841,"nodeType":"ParameterList","parameters":[],"src":"1573:0:29"},"scope":9891,"src":"1518:354:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":9892,"src":"476:1398:29","usedErrors":[],"usedEvents":[9825]}],"src":"39:1835:29"},"id":29}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122024aceae42e71935dc702df57cbb17df3b6b4da2af2851451ea710484f905627664736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xAC 0xEA RETF 0x2E PUSH18 0x935DC702DF57CBB17DF3B6B4DA2AF2851451 0xEA PUSH18 0x484F905627664736F6C634300081E003300 ","sourceMap":"439:3114:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122024aceae42e71935dc702df57cbb17df3b6b4da2af2851451ea710484f905627664736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xAC 0xEA RETF 0x2E PUSH18 0x935DC702DF57CBB17DF3B6B4DA2AF2851451 0xEA PUSH18 0x484F905627664736F6C634300081E003300 ","sourceMap":"439:3114:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f70d145a3bb43a5e0b3ab1072f2bdb543ed4d3d5c81e372610f6e34cb0ab979564736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xD EQ GAS EXTCODESIZE 0xB4 GASPRICE MCOPY SIGNEXTEND GASPRICE 0xB1 SMOD 0x2F 0x2B 0xDB SLOAD RETURNDATACOPY 0xD4 0xD3 0xD5 0xC8 0x1E CALLDATACOPY 0x26 LT 0xF6 CALLF 0x4CB0 0xAB SWAP8 SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"431:1490:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f70d145a3bb43a5e0b3ab1072f2bdb543ed4d3d5c81e372610f6e34cb0ab979564736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xD EQ GAS EXTCODESIZE 0xB4 GASPRICE MCOPY SIGNEXTEND GASPRICE 0xB1 SMOD 0x2F 0x2B 0xDB SLOAD RETURNDATACOPY 0xD4 0xD3 0xD5 0xC8 0x1E CALLDATACOPY 0x26 LT 0xF6 CALLF 0x4CB0 0xAB SWAP8 SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"431:1490:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b2fbfb5ef25c2a390ba52d9ab1f6c117fcb583bbfe4f61f62bf4ebf8d8c195064736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0x2F 0xBF 0xB5 0xEF 0x25 0xC2 LOG3 SWAP1 0xBA MSTORE 0xD9 0xAB 0x1F PUSH13 0x117FCB583BBFE4F61F62BF4EBF DUP14 DUP13 NOT POP PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"459:20446:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b2fbfb5ef25c2a390ba52d9ab1f6c117fcb583bbfe4f61f62bf4ebf8d8c195064736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0x2F 0xBF 0xB5 0xEF 0x25 0xC2 LOG3 SWAP1 0xBA MSTORE 0xD9 0xAB 0x1F PUSH13 0x117FCB583BBFE4F61F62BF4EBF DUP14 DUP13 NOT POP PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"459:20446:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122027b147736a8b2e7dcaebe66e16b161d00a7b6004791299199031592d1c0d64db64736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xB1 SELFBALANCE PUSH20 0x6A8B2E7DCAEBE66E16B161D00A7B600479129919 SWAP1 BALANCE MSIZE 0x2D SHR 0xD PUSH5 0xDB64736F6C PUSH4 0x4300081E STOP CALLER ","sourceMap":"224:218:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122027b147736a8b2e7dcaebe66e16b161d00a7b6004791299199031592d1c0d64db64736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xB1 SELFBALANCE PUSH20 0x6A8B2E7DCAEBE66E16B161D00A7B600479129919 SWAP1 BALANCE MSIZE 0x2D SHR 0xD PUSH5 0xDB64736F6C PUSH4 0x4300081E STOP CALLER ","sourceMap":"224:218:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f57b1869b58b4cb71ec7a4d76fb81f71ae78cd3cd6d2875b53a0f5d369f861b364736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH28 0x1869B58B4CB71EC7A4D76FB81F71AE78CD3CD6D2875B53A0F5D369F8 PUSH2 0xB364 PUSH20 0x6F6C634300081E00330000000000000000000000 ","sourceMap":"657:1315:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f57b1869b58b4cb71ec7a4d76fb81f71ae78cd3cd6d2875b53a0f5d369f861b364736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH28 0x1869B58B4CB71EC7A4D76FB81F71AE78CD3CD6D2875B53A0F5D369F8 PUSH2 0xB364 PUSH20 0x6F6C634300081E00330000000000000000000000 ","sourceMap":"657:1315:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d1a04941b7a175095715471de1b8604c3a32cb4b27a417cd76bedbf3eb9fd1b64736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x1A04941B7A175095715471DE1B86 DIV 0xC3 LOG3 0x2C 0xB4 0xB2 PUSH27 0x417CD76BEDBF3EB9FD1B64736F6C634300081E0033000000000000 ","sourceMap":"1599:3723:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d1a04941b7a175095715471de1b8604c3a32cb4b27a417cd76bedbf3eb9fd1b64736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x1A04941B7A175095715471DE1B86 DIV 0xC3 LOG3 0x2C 0xB4 0xB2 PUSH27 0x417CD76BEDBF3EB9FD1B64736F6C634300081E0033000000000000 ","sourceMap":"1599:3723:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202568522ac8a99d2e08d0b51c155d5f527902ecbcfad0807a6d0e5f8007de58e864736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH9 0x522AC8A99D2E08D0B5 SHR ISZERO TSTORE PUSH0 MSTORE PUSH26 0x2ECBCFAD0807A6D0E5F8007DE58E864736F6C634300081E0033 ","sourceMap":"1407:2774:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202568522ac8a99d2e08d0b51c155d5f527902ecbcfad0807a6d0e5f8007de58e864736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH9 0x522AC8A99D2E08D0B5 SHR ISZERO TSTORE PUSH0 MSTORE PUSH26 0x2ECBCFAD0807A6D0E5F8007DE58E864736F6C634300081E0033 ","sourceMap":"1407:2774:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220222fefea18efce7c1f8ab63da5efcabb724d44237b7ba2868153f28352ce166364736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0x2F 0xEF 0xEA XOR 0xEF 0xCE PUSH29 0x1F8AB63DA5EFCABB724D44237B7BA2868153F28352CE166364736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"297:18982:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220222fefea18efce7c1f8ab63da5efcabb724d44237b7ba2868153f28352ce166364736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0x2F 0xEF 0xEA XOR 0xEF 0xCE PUSH29 0x1F8AB63DA5EFCABB724D44237B7BA2868153F28352CE166364736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"297:18982:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220866b441d54074e15e2a2f47ced861de81e6af553b13ec0a903cd96c9c384459964736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH12 0x441D54074E15E2A2F47CED86 SAR 0xE8 0x1E PUSH11 0xF553B13EC0A903CD96C9C3 DUP5 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"281:31863:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220866b441d54074e15e2a2f47ced861de81e6af553b13ec0a903cd96c9c384459964736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH12 0x441D54074E15E2A2F47CED86 SAR 0xE8 0x1E PUSH11 0xF553B13EC0A903CD96C9C3 DUP5 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"281:31863:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220595f5a9215c92ef15b75cfdd3df873a475145da2747f7a745384f9e99fefad8164736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE PUSH0 GAS SWAP3 ISZERO 0xC9 0x2E CALL JUMPDEST PUSH22 0xCFDD3DF873A475145DA2747F7A745384F9E99FEFAD81 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"769:34173:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220595f5a9215c92ef15b75cfdd3df873a475145da2747f7a745384f9e99fefad8164736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE PUSH0 GAS SWAP3 ISZERO 0xC9 0x2E CALL JUMPDEST PUSH22 0xCFDD3DF873A475145DA2747F7A745384F9E99FEFAD81 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"769:34173:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220818e1ec0123feedeeee8ec963aab5e0557711ef16dd098291b03ce641aa9658764736f6c634300081e0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 DUP15 0x1E 0xC0 SLT EXTCODEHASH RETURNCONTRACT 0xDE RETURNCONTRACT 0xE8 EOFCREATE 0x96 GASPRICE 0xAB MCOPY SDIV JUMPI PUSH18 0x1EF16DD098291B03CE641AA9658764736F6C PUSH4 0x4300081E STOP CALLER ","sourceMap":"258:2354:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220818e1ec0123feedeeee8ec963aab5e0557711ef16dd098291b03ce641aa9658764736f6c634300081e0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 DUP15 0x1E 0xC0 SLT EXTCODEHASH RETURNCONTRACT 0xDE RETURNCONTRACT 0xE8 EOFCREATE 0x96 GASPRICE 0xAB MCOPY SDIV JUMPI PUSH18 0x1EF16DD098291B03CE641AA9658764736F6C PUSH4 0x4300081E STOP CALLER ","sourceMap":"258:2354:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/BridgedToken.sol":{"WrappedERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"bridge","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1588":{"entryPoint":null,"id":1588,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9691":{"entryPoint":null,"id":9691,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":225,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":684,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":750,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory":{"entryPoint":890,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1784,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1799,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":566,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":423,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":593,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1136,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1029,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1433,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":828,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":796,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1268,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1398,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1288,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1574,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":642,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1157,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1087,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1546,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":517,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1278,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1516,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1040,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":470,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1322,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":443,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":448,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":438,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":433,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":453,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1173,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1503,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1374,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1186,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1332,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":846,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1369,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:9595:30","nodeType":"YulBlock","src":"0:9595:30","statements":[{"body":{"nativeSrc":"47:35:30","nodeType":"YulBlock","src":"47:35:30","statements":[{"nativeSrc":"57:19:30","nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:30","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:30","nodeType":"YulIdentifier","src":"67:5:30"},"nativeSrc":"67:9:30","nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:30","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:30","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nativeSrc":"177:28:30","nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:30","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:30","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:12:30","nodeType":"YulFunctionCall","src":"187:12:30"},"nativeSrc":"187:12:30","nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:30","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nativeSrc":"300:28:30","nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:30","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:30","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:30","nodeType":"YulIdentifier","src":"310:6:30"},"nativeSrc":"310:12:30","nodeType":"YulFunctionCall","src":"310:12:30"},"nativeSrc":"310:12:30","nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:30","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nativeSrc":"423:28:30","nodeType":"YulBlock","src":"423:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:30","nodeType":"YulLiteral","src":"440:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:30","nodeType":"YulLiteral","src":"443:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:30","nodeType":"YulIdentifier","src":"433:6:30"},"nativeSrc":"433:12:30","nodeType":"YulFunctionCall","src":"433:12:30"},"nativeSrc":"433:12:30","nodeType":"YulExpressionStatement","src":"433:12:30"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"334:117:30","nodeType":"YulFunctionDefinition","src":"334:117:30"},{"body":{"nativeSrc":"546:28:30","nodeType":"YulBlock","src":"546:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"563:1:30","nodeType":"YulLiteral","src":"563:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"566:1:30","nodeType":"YulLiteral","src":"566:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"556:6:30","nodeType":"YulIdentifier","src":"556:6:30"},"nativeSrc":"556:12:30","nodeType":"YulFunctionCall","src":"556:12:30"},"nativeSrc":"556:12:30","nodeType":"YulExpressionStatement","src":"556:12:30"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"457:117:30","nodeType":"YulFunctionDefinition","src":"457:117:30"},{"body":{"nativeSrc":"628:54:30","nodeType":"YulBlock","src":"628:54:30","statements":[{"nativeSrc":"638:38:30","nodeType":"YulAssignment","src":"638:38:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:30","nodeType":"YulIdentifier","src":"656:5:30"},{"kind":"number","nativeSrc":"663:2:30","nodeType":"YulLiteral","src":"663:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"652:3:30","nodeType":"YulIdentifier","src":"652:3:30"},"nativeSrc":"652:14:30","nodeType":"YulFunctionCall","src":"652:14:30"},{"arguments":[{"kind":"number","nativeSrc":"672:2:30","nodeType":"YulLiteral","src":"672:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"668:3:30","nodeType":"YulIdentifier","src":"668:3:30"},"nativeSrc":"668:7:30","nodeType":"YulFunctionCall","src":"668:7:30"}],"functionName":{"name":"and","nativeSrc":"648:3:30","nodeType":"YulIdentifier","src":"648:3:30"},"nativeSrc":"648:28:30","nodeType":"YulFunctionCall","src":"648:28:30"},"variableNames":[{"name":"result","nativeSrc":"638:6:30","nodeType":"YulIdentifier","src":"638:6:30"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"580:102:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"611:5:30","nodeType":"YulTypedName","src":"611:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"621:6:30","nodeType":"YulTypedName","src":"621:6:30","type":""}],"src":"580:102:30"},{"body":{"nativeSrc":"716:152:30","nodeType":"YulBlock","src":"716:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"733:1:30","nodeType":"YulLiteral","src":"733:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"736:77:30","nodeType":"YulLiteral","src":"736:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"726:6:30","nodeType":"YulIdentifier","src":"726:6:30"},"nativeSrc":"726:88:30","nodeType":"YulFunctionCall","src":"726:88:30"},"nativeSrc":"726:88:30","nodeType":"YulExpressionStatement","src":"726:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"830:1:30","nodeType":"YulLiteral","src":"830:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"833:4:30","nodeType":"YulLiteral","src":"833:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"823:6:30","nodeType":"YulIdentifier","src":"823:6:30"},"nativeSrc":"823:15:30","nodeType":"YulFunctionCall","src":"823:15:30"},"nativeSrc":"823:15:30","nodeType":"YulExpressionStatement","src":"823:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"854:1:30","nodeType":"YulLiteral","src":"854:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"857:4:30","nodeType":"YulLiteral","src":"857:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"847:6:30","nodeType":"YulIdentifier","src":"847:6:30"},"nativeSrc":"847:15:30","nodeType":"YulFunctionCall","src":"847:15:30"},"nativeSrc":"847:15:30","nodeType":"YulExpressionStatement","src":"847:15:30"}]},"name":"panic_error_0x41","nativeSrc":"688:180:30","nodeType":"YulFunctionDefinition","src":"688:180:30"},{"body":{"nativeSrc":"917:238:30","nodeType":"YulBlock","src":"917:238:30","statements":[{"nativeSrc":"927:58:30","nodeType":"YulVariableDeclaration","src":"927:58:30","value":{"arguments":[{"name":"memPtr","nativeSrc":"949:6:30","nodeType":"YulIdentifier","src":"949:6:30"},{"arguments":[{"name":"size","nativeSrc":"979:4:30","nodeType":"YulIdentifier","src":"979:4:30"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"957:21:30","nodeType":"YulIdentifier","src":"957:21:30"},"nativeSrc":"957:27:30","nodeType":"YulFunctionCall","src":"957:27:30"}],"functionName":{"name":"add","nativeSrc":"945:3:30","nodeType":"YulIdentifier","src":"945:3:30"},"nativeSrc":"945:40:30","nodeType":"YulFunctionCall","src":"945:40:30"},"variables":[{"name":"newFreePtr","nativeSrc":"931:10:30","nodeType":"YulTypedName","src":"931:10:30","type":""}]},{"body":{"nativeSrc":"1096:22:30","nodeType":"YulBlock","src":"1096:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1098:16:30","nodeType":"YulIdentifier","src":"1098:16:30"},"nativeSrc":"1098:18:30","nodeType":"YulFunctionCall","src":"1098:18:30"},"nativeSrc":"1098:18:30","nodeType":"YulExpressionStatement","src":"1098:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1039:10:30","nodeType":"YulIdentifier","src":"1039:10:30"},{"kind":"number","nativeSrc":"1051:18:30","nodeType":"YulLiteral","src":"1051:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1036:2:30","nodeType":"YulIdentifier","src":"1036:2:30"},"nativeSrc":"1036:34:30","nodeType":"YulFunctionCall","src":"1036:34:30"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1075:10:30","nodeType":"YulIdentifier","src":"1075:10:30"},{"name":"memPtr","nativeSrc":"1087:6:30","nodeType":"YulIdentifier","src":"1087:6:30"}],"functionName":{"name":"lt","nativeSrc":"1072:2:30","nodeType":"YulIdentifier","src":"1072:2:30"},"nativeSrc":"1072:22:30","nodeType":"YulFunctionCall","src":"1072:22:30"}],"functionName":{"name":"or","nativeSrc":"1033:2:30","nodeType":"YulIdentifier","src":"1033:2:30"},"nativeSrc":"1033:62:30","nodeType":"YulFunctionCall","src":"1033:62:30"},"nativeSrc":"1030:88:30","nodeType":"YulIf","src":"1030:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1134:2:30","nodeType":"YulLiteral","src":"1134:2:30","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1138:10:30","nodeType":"YulIdentifier","src":"1138:10:30"}],"functionName":{"name":"mstore","nativeSrc":"1127:6:30","nodeType":"YulIdentifier","src":"1127:6:30"},"nativeSrc":"1127:22:30","nodeType":"YulFunctionCall","src":"1127:22:30"},"nativeSrc":"1127:22:30","nodeType":"YulExpressionStatement","src":"1127:22:30"}]},"name":"finalize_allocation","nativeSrc":"874:281:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"903:6:30","nodeType":"YulTypedName","src":"903:6:30","type":""},{"name":"size","nativeSrc":"911:4:30","nodeType":"YulTypedName","src":"911:4:30","type":""}],"src":"874:281:30"},{"body":{"nativeSrc":"1202:88:30","nodeType":"YulBlock","src":"1202:88:30","statements":[{"nativeSrc":"1212:30:30","nodeType":"YulAssignment","src":"1212:30:30","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1222:18:30","nodeType":"YulIdentifier","src":"1222:18:30"},"nativeSrc":"1222:20:30","nodeType":"YulFunctionCall","src":"1222:20:30"},"variableNames":[{"name":"memPtr","nativeSrc":"1212:6:30","nodeType":"YulIdentifier","src":"1212:6:30"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1271:6:30","nodeType":"YulIdentifier","src":"1271:6:30"},{"name":"size","nativeSrc":"1279:4:30","nodeType":"YulIdentifier","src":"1279:4:30"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1251:19:30","nodeType":"YulIdentifier","src":"1251:19:30"},"nativeSrc":"1251:33:30","nodeType":"YulFunctionCall","src":"1251:33:30"},"nativeSrc":"1251:33:30","nodeType":"YulExpressionStatement","src":"1251:33:30"}]},"name":"allocate_memory","nativeSrc":"1161:129:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1186:4:30","nodeType":"YulTypedName","src":"1186:4:30","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1195:6:30","nodeType":"YulTypedName","src":"1195:6:30","type":""}],"src":"1161:129:30"},{"body":{"nativeSrc":"1363:241:30","nodeType":"YulBlock","src":"1363:241:30","statements":[{"body":{"nativeSrc":"1468:22:30","nodeType":"YulBlock","src":"1468:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1470:16:30","nodeType":"YulIdentifier","src":"1470:16:30"},"nativeSrc":"1470:18:30","nodeType":"YulFunctionCall","src":"1470:18:30"},"nativeSrc":"1470:18:30","nodeType":"YulExpressionStatement","src":"1470:18:30"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1440:6:30","nodeType":"YulIdentifier","src":"1440:6:30"},{"kind":"number","nativeSrc":"1448:18:30","nodeType":"YulLiteral","src":"1448:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1437:2:30","nodeType":"YulIdentifier","src":"1437:2:30"},"nativeSrc":"1437:30:30","nodeType":"YulFunctionCall","src":"1437:30:30"},"nativeSrc":"1434:56:30","nodeType":"YulIf","src":"1434:56:30"},{"nativeSrc":"1500:37:30","nodeType":"YulAssignment","src":"1500:37:30","value":{"arguments":[{"name":"length","nativeSrc":"1530:6:30","nodeType":"YulIdentifier","src":"1530:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1508:21:30","nodeType":"YulIdentifier","src":"1508:21:30"},"nativeSrc":"1508:29:30","nodeType":"YulFunctionCall","src":"1508:29:30"},"variableNames":[{"name":"size","nativeSrc":"1500:4:30","nodeType":"YulIdentifier","src":"1500:4:30"}]},{"nativeSrc":"1574:23:30","nodeType":"YulAssignment","src":"1574:23:30","value":{"arguments":[{"name":"size","nativeSrc":"1586:4:30","nodeType":"YulIdentifier","src":"1586:4:30"},{"kind":"number","nativeSrc":"1592:4:30","nodeType":"YulLiteral","src":"1592:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1582:3:30","nodeType":"YulIdentifier","src":"1582:3:30"},"nativeSrc":"1582:15:30","nodeType":"YulFunctionCall","src":"1582:15:30"},"variableNames":[{"name":"size","nativeSrc":"1574:4:30","nodeType":"YulIdentifier","src":"1574:4:30"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1296:308:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1347:6:30","nodeType":"YulTypedName","src":"1347:6:30","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1358:4:30","nodeType":"YulTypedName","src":"1358:4:30","type":""}],"src":"1296:308:30"},{"body":{"nativeSrc":"1672:186:30","nodeType":"YulBlock","src":"1672:186:30","statements":[{"nativeSrc":"1683:10:30","nodeType":"YulVariableDeclaration","src":"1683:10:30","value":{"kind":"number","nativeSrc":"1692:1:30","nodeType":"YulLiteral","src":"1692:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1687:1:30","nodeType":"YulTypedName","src":"1687:1:30","type":""}]},{"body":{"nativeSrc":"1752:63:30","nodeType":"YulBlock","src":"1752:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1777:3:30","nodeType":"YulIdentifier","src":"1777:3:30"},{"name":"i","nativeSrc":"1782:1:30","nodeType":"YulIdentifier","src":"1782:1:30"}],"functionName":{"name":"add","nativeSrc":"1773:3:30","nodeType":"YulIdentifier","src":"1773:3:30"},"nativeSrc":"1773:11:30","nodeType":"YulFunctionCall","src":"1773:11:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1796:3:30","nodeType":"YulIdentifier","src":"1796:3:30"},{"name":"i","nativeSrc":"1801:1:30","nodeType":"YulIdentifier","src":"1801:1:30"}],"functionName":{"name":"add","nativeSrc":"1792:3:30","nodeType":"YulIdentifier","src":"1792:3:30"},"nativeSrc":"1792:11:30","nodeType":"YulFunctionCall","src":"1792:11:30"}],"functionName":{"name":"mload","nativeSrc":"1786:5:30","nodeType":"YulIdentifier","src":"1786:5:30"},"nativeSrc":"1786:18:30","nodeType":"YulFunctionCall","src":"1786:18:30"}],"functionName":{"name":"mstore","nativeSrc":"1766:6:30","nodeType":"YulIdentifier","src":"1766:6:30"},"nativeSrc":"1766:39:30","nodeType":"YulFunctionCall","src":"1766:39:30"},"nativeSrc":"1766:39:30","nodeType":"YulExpressionStatement","src":"1766:39:30"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1713:1:30","nodeType":"YulIdentifier","src":"1713:1:30"},{"name":"length","nativeSrc":"1716:6:30","nodeType":"YulIdentifier","src":"1716:6:30"}],"functionName":{"name":"lt","nativeSrc":"1710:2:30","nodeType":"YulIdentifier","src":"1710:2:30"},"nativeSrc":"1710:13:30","nodeType":"YulFunctionCall","src":"1710:13:30"},"nativeSrc":"1702:113:30","nodeType":"YulForLoop","post":{"nativeSrc":"1724:19:30","nodeType":"YulBlock","src":"1724:19:30","statements":[{"nativeSrc":"1726:15:30","nodeType":"YulAssignment","src":"1726:15:30","value":{"arguments":[{"name":"i","nativeSrc":"1735:1:30","nodeType":"YulIdentifier","src":"1735:1:30"},{"kind":"number","nativeSrc":"1738:2:30","nodeType":"YulLiteral","src":"1738:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1731:3:30","nodeType":"YulIdentifier","src":"1731:3:30"},"nativeSrc":"1731:10:30","nodeType":"YulFunctionCall","src":"1731:10:30"},"variableNames":[{"name":"i","nativeSrc":"1726:1:30","nodeType":"YulIdentifier","src":"1726:1:30"}]}]},"pre":{"nativeSrc":"1706:3:30","nodeType":"YulBlock","src":"1706:3:30","statements":[]},"src":"1702:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1835:3:30","nodeType":"YulIdentifier","src":"1835:3:30"},{"name":"length","nativeSrc":"1840:6:30","nodeType":"YulIdentifier","src":"1840:6:30"}],"functionName":{"name":"add","nativeSrc":"1831:3:30","nodeType":"YulIdentifier","src":"1831:3:30"},"nativeSrc":"1831:16:30","nodeType":"YulFunctionCall","src":"1831:16:30"},{"kind":"number","nativeSrc":"1849:1:30","nodeType":"YulLiteral","src":"1849:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1824:6:30","nodeType":"YulIdentifier","src":"1824:6:30"},"nativeSrc":"1824:27:30","nodeType":"YulFunctionCall","src":"1824:27:30"},"nativeSrc":"1824:27:30","nodeType":"YulExpressionStatement","src":"1824:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1610:248:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1654:3:30","nodeType":"YulTypedName","src":"1654:3:30","type":""},{"name":"dst","nativeSrc":"1659:3:30","nodeType":"YulTypedName","src":"1659:3:30","type":""},{"name":"length","nativeSrc":"1664:6:30","nodeType":"YulTypedName","src":"1664:6:30","type":""}],"src":"1610:248:30"},{"body":{"nativeSrc":"1959:339:30","nodeType":"YulBlock","src":"1959:339:30","statements":[{"nativeSrc":"1969:75:30","nodeType":"YulAssignment","src":"1969:75:30","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2036:6:30","nodeType":"YulIdentifier","src":"2036:6:30"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1994:41:30","nodeType":"YulIdentifier","src":"1994:41:30"},"nativeSrc":"1994:49:30","nodeType":"YulFunctionCall","src":"1994:49:30"}],"functionName":{"name":"allocate_memory","nativeSrc":"1978:15:30","nodeType":"YulIdentifier","src":"1978:15:30"},"nativeSrc":"1978:66:30","nodeType":"YulFunctionCall","src":"1978:66:30"},"variableNames":[{"name":"array","nativeSrc":"1969:5:30","nodeType":"YulIdentifier","src":"1969:5:30"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2060:5:30","nodeType":"YulIdentifier","src":"2060:5:30"},{"name":"length","nativeSrc":"2067:6:30","nodeType":"YulIdentifier","src":"2067:6:30"}],"functionName":{"name":"mstore","nativeSrc":"2053:6:30","nodeType":"YulIdentifier","src":"2053:6:30"},"nativeSrc":"2053:21:30","nodeType":"YulFunctionCall","src":"2053:21:30"},"nativeSrc":"2053:21:30","nodeType":"YulExpressionStatement","src":"2053:21:30"},{"nativeSrc":"2083:27:30","nodeType":"YulVariableDeclaration","src":"2083:27:30","value":{"arguments":[{"name":"array","nativeSrc":"2098:5:30","nodeType":"YulIdentifier","src":"2098:5:30"},{"kind":"number","nativeSrc":"2105:4:30","nodeType":"YulLiteral","src":"2105:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2094:3:30","nodeType":"YulIdentifier","src":"2094:3:30"},"nativeSrc":"2094:16:30","nodeType":"YulFunctionCall","src":"2094:16:30"},"variables":[{"name":"dst","nativeSrc":"2087:3:30","nodeType":"YulTypedName","src":"2087:3:30","type":""}]},{"body":{"nativeSrc":"2148:83:30","nodeType":"YulBlock","src":"2148:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2150:77:30","nodeType":"YulIdentifier","src":"2150:77:30"},"nativeSrc":"2150:79:30","nodeType":"YulFunctionCall","src":"2150:79:30"},"nativeSrc":"2150:79:30","nodeType":"YulExpressionStatement","src":"2150:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2129:3:30","nodeType":"YulIdentifier","src":"2129:3:30"},{"name":"length","nativeSrc":"2134:6:30","nodeType":"YulIdentifier","src":"2134:6:30"}],"functionName":{"name":"add","nativeSrc":"2125:3:30","nodeType":"YulIdentifier","src":"2125:3:30"},"nativeSrc":"2125:16:30","nodeType":"YulFunctionCall","src":"2125:16:30"},{"name":"end","nativeSrc":"2143:3:30","nodeType":"YulIdentifier","src":"2143:3:30"}],"functionName":{"name":"gt","nativeSrc":"2122:2:30","nodeType":"YulIdentifier","src":"2122:2:30"},"nativeSrc":"2122:25:30","nodeType":"YulFunctionCall","src":"2122:25:30"},"nativeSrc":"2119:112:30","nodeType":"YulIf","src":"2119:112:30"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2275:3:30","nodeType":"YulIdentifier","src":"2275:3:30"},{"name":"dst","nativeSrc":"2280:3:30","nodeType":"YulIdentifier","src":"2280:3:30"},{"name":"length","nativeSrc":"2285:6:30","nodeType":"YulIdentifier","src":"2285:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2240:34:30","nodeType":"YulIdentifier","src":"2240:34:30"},"nativeSrc":"2240:52:30","nodeType":"YulFunctionCall","src":"2240:52:30"},"nativeSrc":"2240:52:30","nodeType":"YulExpressionStatement","src":"2240:52:30"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"1864:434:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1932:3:30","nodeType":"YulTypedName","src":"1932:3:30","type":""},{"name":"length","nativeSrc":"1937:6:30","nodeType":"YulTypedName","src":"1937:6:30","type":""},{"name":"end","nativeSrc":"1945:3:30","nodeType":"YulTypedName","src":"1945:3:30","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1953:5:30","nodeType":"YulTypedName","src":"1953:5:30","type":""}],"src":"1864:434:30"},{"body":{"nativeSrc":"2391:282:30","nodeType":"YulBlock","src":"2391:282:30","statements":[{"body":{"nativeSrc":"2440:83:30","nodeType":"YulBlock","src":"2440:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2442:77:30","nodeType":"YulIdentifier","src":"2442:77:30"},"nativeSrc":"2442:79:30","nodeType":"YulFunctionCall","src":"2442:79:30"},"nativeSrc":"2442:79:30","nodeType":"YulExpressionStatement","src":"2442:79:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2419:6:30","nodeType":"YulIdentifier","src":"2419:6:30"},{"kind":"number","nativeSrc":"2427:4:30","nodeType":"YulLiteral","src":"2427:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2415:3:30","nodeType":"YulIdentifier","src":"2415:3:30"},"nativeSrc":"2415:17:30","nodeType":"YulFunctionCall","src":"2415:17:30"},{"name":"end","nativeSrc":"2434:3:30","nodeType":"YulIdentifier","src":"2434:3:30"}],"functionName":{"name":"slt","nativeSrc":"2411:3:30","nodeType":"YulIdentifier","src":"2411:3:30"},"nativeSrc":"2411:27:30","nodeType":"YulFunctionCall","src":"2411:27:30"}],"functionName":{"name":"iszero","nativeSrc":"2404:6:30","nodeType":"YulIdentifier","src":"2404:6:30"},"nativeSrc":"2404:35:30","nodeType":"YulFunctionCall","src":"2404:35:30"},"nativeSrc":"2401:122:30","nodeType":"YulIf","src":"2401:122:30"},{"nativeSrc":"2532:27:30","nodeType":"YulVariableDeclaration","src":"2532:27:30","value":{"arguments":[{"name":"offset","nativeSrc":"2552:6:30","nodeType":"YulIdentifier","src":"2552:6:30"}],"functionName":{"name":"mload","nativeSrc":"2546:5:30","nodeType":"YulIdentifier","src":"2546:5:30"},"nativeSrc":"2546:13:30","nodeType":"YulFunctionCall","src":"2546:13:30"},"variables":[{"name":"length","nativeSrc":"2536:6:30","nodeType":"YulTypedName","src":"2536:6:30","type":""}]},{"nativeSrc":"2568:99:30","nodeType":"YulAssignment","src":"2568:99:30","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2640:6:30","nodeType":"YulIdentifier","src":"2640:6:30"},{"kind":"number","nativeSrc":"2648:4:30","nodeType":"YulLiteral","src":"2648:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2636:3:30","nodeType":"YulIdentifier","src":"2636:3:30"},"nativeSrc":"2636:17:30","nodeType":"YulFunctionCall","src":"2636:17:30"},{"name":"length","nativeSrc":"2655:6:30","nodeType":"YulIdentifier","src":"2655:6:30"},{"name":"end","nativeSrc":"2663:3:30","nodeType":"YulIdentifier","src":"2663:3:30"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2577:58:30","nodeType":"YulIdentifier","src":"2577:58:30"},"nativeSrc":"2577:90:30","nodeType":"YulFunctionCall","src":"2577:90:30"},"variableNames":[{"name":"array","nativeSrc":"2568:5:30","nodeType":"YulIdentifier","src":"2568:5:30"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2318:355:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2369:6:30","nodeType":"YulTypedName","src":"2369:6:30","type":""},{"name":"end","nativeSrc":"2377:3:30","nodeType":"YulTypedName","src":"2377:3:30","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2385:5:30","nodeType":"YulTypedName","src":"2385:5:30","type":""}],"src":"2318:355:30"},{"body":{"nativeSrc":"2724:81:30","nodeType":"YulBlock","src":"2724:81:30","statements":[{"nativeSrc":"2734:65:30","nodeType":"YulAssignment","src":"2734:65:30","value":{"arguments":[{"name":"value","nativeSrc":"2749:5:30","nodeType":"YulIdentifier","src":"2749:5:30"},{"kind":"number","nativeSrc":"2756:42:30","nodeType":"YulLiteral","src":"2756:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2745:3:30","nodeType":"YulIdentifier","src":"2745:3:30"},"nativeSrc":"2745:54:30","nodeType":"YulFunctionCall","src":"2745:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"2734:7:30","nodeType":"YulIdentifier","src":"2734:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2679:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2706:5:30","nodeType":"YulTypedName","src":"2706:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2716:7:30","nodeType":"YulTypedName","src":"2716:7:30","type":""}],"src":"2679:126:30"},{"body":{"nativeSrc":"2856:51:30","nodeType":"YulBlock","src":"2856:51:30","statements":[{"nativeSrc":"2866:35:30","nodeType":"YulAssignment","src":"2866:35:30","value":{"arguments":[{"name":"value","nativeSrc":"2895:5:30","nodeType":"YulIdentifier","src":"2895:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2877:17:30","nodeType":"YulIdentifier","src":"2877:17:30"},"nativeSrc":"2877:24:30","nodeType":"YulFunctionCall","src":"2877:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"2866:7:30","nodeType":"YulIdentifier","src":"2866:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"2811:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2838:5:30","nodeType":"YulTypedName","src":"2838:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2848:7:30","nodeType":"YulTypedName","src":"2848:7:30","type":""}],"src":"2811:96:30"},{"body":{"nativeSrc":"2956:79:30","nodeType":"YulBlock","src":"2956:79:30","statements":[{"body":{"nativeSrc":"3013:16:30","nodeType":"YulBlock","src":"3013:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3022:1:30","nodeType":"YulLiteral","src":"3022:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"3025:1:30","nodeType":"YulLiteral","src":"3025:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3015:6:30","nodeType":"YulIdentifier","src":"3015:6:30"},"nativeSrc":"3015:12:30","nodeType":"YulFunctionCall","src":"3015:12:30"},"nativeSrc":"3015:12:30","nodeType":"YulExpressionStatement","src":"3015:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2979:5:30","nodeType":"YulIdentifier","src":"2979:5:30"},{"arguments":[{"name":"value","nativeSrc":"3004:5:30","nodeType":"YulIdentifier","src":"3004:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2986:17:30","nodeType":"YulIdentifier","src":"2986:17:30"},"nativeSrc":"2986:24:30","nodeType":"YulFunctionCall","src":"2986:24:30"}],"functionName":{"name":"eq","nativeSrc":"2976:2:30","nodeType":"YulIdentifier","src":"2976:2:30"},"nativeSrc":"2976:35:30","nodeType":"YulFunctionCall","src":"2976:35:30"}],"functionName":{"name":"iszero","nativeSrc":"2969:6:30","nodeType":"YulIdentifier","src":"2969:6:30"},"nativeSrc":"2969:43:30","nodeType":"YulFunctionCall","src":"2969:43:30"},"nativeSrc":"2966:63:30","nodeType":"YulIf","src":"2966:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"2913:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2949:5:30","nodeType":"YulTypedName","src":"2949:5:30","type":""}],"src":"2913:122:30"},{"body":{"nativeSrc":"3104:80:30","nodeType":"YulBlock","src":"3104:80:30","statements":[{"nativeSrc":"3114:22:30","nodeType":"YulAssignment","src":"3114:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"3129:6:30","nodeType":"YulIdentifier","src":"3129:6:30"}],"functionName":{"name":"mload","nativeSrc":"3123:5:30","nodeType":"YulIdentifier","src":"3123:5:30"},"nativeSrc":"3123:13:30","nodeType":"YulFunctionCall","src":"3123:13:30"},"variableNames":[{"name":"value","nativeSrc":"3114:5:30","nodeType":"YulIdentifier","src":"3114:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3172:5:30","nodeType":"YulIdentifier","src":"3172:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3145:26:30","nodeType":"YulIdentifier","src":"3145:26:30"},"nativeSrc":"3145:33:30","nodeType":"YulFunctionCall","src":"3145:33:30"},"nativeSrc":"3145:33:30","nodeType":"YulExpressionStatement","src":"3145:33:30"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"3041:143:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3082:6:30","nodeType":"YulTypedName","src":"3082:6:30","type":""},{"name":"end","nativeSrc":"3090:3:30","nodeType":"YulTypedName","src":"3090:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3098:5:30","nodeType":"YulTypedName","src":"3098:5:30","type":""}],"src":"3041:143:30"},{"body":{"nativeSrc":"3321:878:30","nodeType":"YulBlock","src":"3321:878:30","statements":[{"body":{"nativeSrc":"3367:83:30","nodeType":"YulBlock","src":"3367:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3369:77:30","nodeType":"YulIdentifier","src":"3369:77:30"},"nativeSrc":"3369:79:30","nodeType":"YulFunctionCall","src":"3369:79:30"},"nativeSrc":"3369:79:30","nodeType":"YulExpressionStatement","src":"3369:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3342:7:30","nodeType":"YulIdentifier","src":"3342:7:30"},{"name":"headStart","nativeSrc":"3351:9:30","nodeType":"YulIdentifier","src":"3351:9:30"}],"functionName":{"name":"sub","nativeSrc":"3338:3:30","nodeType":"YulIdentifier","src":"3338:3:30"},"nativeSrc":"3338:23:30","nodeType":"YulFunctionCall","src":"3338:23:30"},{"kind":"number","nativeSrc":"3363:2:30","nodeType":"YulLiteral","src":"3363:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3334:3:30","nodeType":"YulIdentifier","src":"3334:3:30"},"nativeSrc":"3334:32:30","nodeType":"YulFunctionCall","src":"3334:32:30"},"nativeSrc":"3331:119:30","nodeType":"YulIf","src":"3331:119:30"},{"nativeSrc":"3460:291:30","nodeType":"YulBlock","src":"3460:291:30","statements":[{"nativeSrc":"3475:38:30","nodeType":"YulVariableDeclaration","src":"3475:38:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3499:9:30","nodeType":"YulIdentifier","src":"3499:9:30"},{"kind":"number","nativeSrc":"3510:1:30","nodeType":"YulLiteral","src":"3510:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3495:3:30","nodeType":"YulIdentifier","src":"3495:3:30"},"nativeSrc":"3495:17:30","nodeType":"YulFunctionCall","src":"3495:17:30"}],"functionName":{"name":"mload","nativeSrc":"3489:5:30","nodeType":"YulIdentifier","src":"3489:5:30"},"nativeSrc":"3489:24:30","nodeType":"YulFunctionCall","src":"3489:24:30"},"variables":[{"name":"offset","nativeSrc":"3479:6:30","nodeType":"YulTypedName","src":"3479:6:30","type":""}]},{"body":{"nativeSrc":"3560:83:30","nodeType":"YulBlock","src":"3560:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3562:77:30","nodeType":"YulIdentifier","src":"3562:77:30"},"nativeSrc":"3562:79:30","nodeType":"YulFunctionCall","src":"3562:79:30"},"nativeSrc":"3562:79:30","nodeType":"YulExpressionStatement","src":"3562:79:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3532:6:30","nodeType":"YulIdentifier","src":"3532:6:30"},{"kind":"number","nativeSrc":"3540:18:30","nodeType":"YulLiteral","src":"3540:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3529:2:30","nodeType":"YulIdentifier","src":"3529:2:30"},"nativeSrc":"3529:30:30","nodeType":"YulFunctionCall","src":"3529:30:30"},"nativeSrc":"3526:117:30","nodeType":"YulIf","src":"3526:117:30"},{"nativeSrc":"3657:84:30","nodeType":"YulAssignment","src":"3657:84:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3713:9:30","nodeType":"YulIdentifier","src":"3713:9:30"},{"name":"offset","nativeSrc":"3724:6:30","nodeType":"YulIdentifier","src":"3724:6:30"}],"functionName":{"name":"add","nativeSrc":"3709:3:30","nodeType":"YulIdentifier","src":"3709:3:30"},"nativeSrc":"3709:22:30","nodeType":"YulFunctionCall","src":"3709:22:30"},{"name":"dataEnd","nativeSrc":"3733:7:30","nodeType":"YulIdentifier","src":"3733:7:30"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3667:41:30","nodeType":"YulIdentifier","src":"3667:41:30"},"nativeSrc":"3667:74:30","nodeType":"YulFunctionCall","src":"3667:74:30"},"variableNames":[{"name":"value0","nativeSrc":"3657:6:30","nodeType":"YulIdentifier","src":"3657:6:30"}]}]},{"nativeSrc":"3761:292:30","nodeType":"YulBlock","src":"3761:292:30","statements":[{"nativeSrc":"3776:39:30","nodeType":"YulVariableDeclaration","src":"3776:39:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3800:9:30","nodeType":"YulIdentifier","src":"3800:9:30"},{"kind":"number","nativeSrc":"3811:2:30","nodeType":"YulLiteral","src":"3811:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3796:3:30","nodeType":"YulIdentifier","src":"3796:3:30"},"nativeSrc":"3796:18:30","nodeType":"YulFunctionCall","src":"3796:18:30"}],"functionName":{"name":"mload","nativeSrc":"3790:5:30","nodeType":"YulIdentifier","src":"3790:5:30"},"nativeSrc":"3790:25:30","nodeType":"YulFunctionCall","src":"3790:25:30"},"variables":[{"name":"offset","nativeSrc":"3780:6:30","nodeType":"YulTypedName","src":"3780:6:30","type":""}]},{"body":{"nativeSrc":"3862:83:30","nodeType":"YulBlock","src":"3862:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3864:77:30","nodeType":"YulIdentifier","src":"3864:77:30"},"nativeSrc":"3864:79:30","nodeType":"YulFunctionCall","src":"3864:79:30"},"nativeSrc":"3864:79:30","nodeType":"YulExpressionStatement","src":"3864:79:30"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3834:6:30","nodeType":"YulIdentifier","src":"3834:6:30"},{"kind":"number","nativeSrc":"3842:18:30","nodeType":"YulLiteral","src":"3842:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3831:2:30","nodeType":"YulIdentifier","src":"3831:2:30"},"nativeSrc":"3831:30:30","nodeType":"YulFunctionCall","src":"3831:30:30"},"nativeSrc":"3828:117:30","nodeType":"YulIf","src":"3828:117:30"},{"nativeSrc":"3959:84:30","nodeType":"YulAssignment","src":"3959:84:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4015:9:30","nodeType":"YulIdentifier","src":"4015:9:30"},{"name":"offset","nativeSrc":"4026:6:30","nodeType":"YulIdentifier","src":"4026:6:30"}],"functionName":{"name":"add","nativeSrc":"4011:3:30","nodeType":"YulIdentifier","src":"4011:3:30"},"nativeSrc":"4011:22:30","nodeType":"YulFunctionCall","src":"4011:22:30"},{"name":"dataEnd","nativeSrc":"4035:7:30","nodeType":"YulIdentifier","src":"4035:7:30"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3969:41:30","nodeType":"YulIdentifier","src":"3969:41:30"},"nativeSrc":"3969:74:30","nodeType":"YulFunctionCall","src":"3969:74:30"},"variableNames":[{"name":"value1","nativeSrc":"3959:6:30","nodeType":"YulIdentifier","src":"3959:6:30"}]}]},{"nativeSrc":"4063:129:30","nodeType":"YulBlock","src":"4063:129:30","statements":[{"nativeSrc":"4078:16:30","nodeType":"YulVariableDeclaration","src":"4078:16:30","value":{"kind":"number","nativeSrc":"4092:2:30","nodeType":"YulLiteral","src":"4092:2:30","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4082:6:30","nodeType":"YulTypedName","src":"4082:6:30","type":""}]},{"nativeSrc":"4108:74:30","nodeType":"YulAssignment","src":"4108:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4154:9:30","nodeType":"YulIdentifier","src":"4154:9:30"},{"name":"offset","nativeSrc":"4165:6:30","nodeType":"YulIdentifier","src":"4165:6:30"}],"functionName":{"name":"add","nativeSrc":"4150:3:30","nodeType":"YulIdentifier","src":"4150:3:30"},"nativeSrc":"4150:22:30","nodeType":"YulFunctionCall","src":"4150:22:30"},{"name":"dataEnd","nativeSrc":"4174:7:30","nodeType":"YulIdentifier","src":"4174:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"4118:31:30","nodeType":"YulIdentifier","src":"4118:31:30"},"nativeSrc":"4118:64:30","nodeType":"YulFunctionCall","src":"4118:64:30"},"variableNames":[{"name":"value2","nativeSrc":"4108:6:30","nodeType":"YulIdentifier","src":"4108:6:30"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory","nativeSrc":"3190:1009:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3275:9:30","nodeType":"YulTypedName","src":"3275:9:30","type":""},{"name":"dataEnd","nativeSrc":"3286:7:30","nodeType":"YulTypedName","src":"3286:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3298:6:30","nodeType":"YulTypedName","src":"3298:6:30","type":""},{"name":"value1","nativeSrc":"3306:6:30","nodeType":"YulTypedName","src":"3306:6:30","type":""},{"name":"value2","nativeSrc":"3314:6:30","nodeType":"YulTypedName","src":"3314:6:30","type":""}],"src":"3190:1009:30"},{"body":{"nativeSrc":"4264:40:30","nodeType":"YulBlock","src":"4264:40:30","statements":[{"nativeSrc":"4275:22:30","nodeType":"YulAssignment","src":"4275:22:30","value":{"arguments":[{"name":"value","nativeSrc":"4291:5:30","nodeType":"YulIdentifier","src":"4291:5:30"}],"functionName":{"name":"mload","nativeSrc":"4285:5:30","nodeType":"YulIdentifier","src":"4285:5:30"},"nativeSrc":"4285:12:30","nodeType":"YulFunctionCall","src":"4285:12:30"},"variableNames":[{"name":"length","nativeSrc":"4275:6:30","nodeType":"YulIdentifier","src":"4275:6:30"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"4205:99:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4247:5:30","nodeType":"YulTypedName","src":"4247:5:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4257:6:30","nodeType":"YulTypedName","src":"4257:6:30","type":""}],"src":"4205:99:30"},{"body":{"nativeSrc":"4338:152:30","nodeType":"YulBlock","src":"4338:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4355:1:30","nodeType":"YulLiteral","src":"4355:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"4358:77:30","nodeType":"YulLiteral","src":"4358:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4348:6:30","nodeType":"YulIdentifier","src":"4348:6:30"},"nativeSrc":"4348:88:30","nodeType":"YulFunctionCall","src":"4348:88:30"},"nativeSrc":"4348:88:30","nodeType":"YulExpressionStatement","src":"4348:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4452:1:30","nodeType":"YulLiteral","src":"4452:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"4455:4:30","nodeType":"YulLiteral","src":"4455:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"4445:6:30","nodeType":"YulIdentifier","src":"4445:6:30"},"nativeSrc":"4445:15:30","nodeType":"YulFunctionCall","src":"4445:15:30"},"nativeSrc":"4445:15:30","nodeType":"YulExpressionStatement","src":"4445:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4476:1:30","nodeType":"YulLiteral","src":"4476:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"4479:4:30","nodeType":"YulLiteral","src":"4479:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4469:6:30","nodeType":"YulIdentifier","src":"4469:6:30"},"nativeSrc":"4469:15:30","nodeType":"YulFunctionCall","src":"4469:15:30"},"nativeSrc":"4469:15:30","nodeType":"YulExpressionStatement","src":"4469:15:30"}]},"name":"panic_error_0x22","nativeSrc":"4310:180:30","nodeType":"YulFunctionDefinition","src":"4310:180:30"},{"body":{"nativeSrc":"4547:269:30","nodeType":"YulBlock","src":"4547:269:30","statements":[{"nativeSrc":"4557:22:30","nodeType":"YulAssignment","src":"4557:22:30","value":{"arguments":[{"name":"data","nativeSrc":"4571:4:30","nodeType":"YulIdentifier","src":"4571:4:30"},{"kind":"number","nativeSrc":"4577:1:30","nodeType":"YulLiteral","src":"4577:1:30","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"4567:3:30","nodeType":"YulIdentifier","src":"4567:3:30"},"nativeSrc":"4567:12:30","nodeType":"YulFunctionCall","src":"4567:12:30"},"variableNames":[{"name":"length","nativeSrc":"4557:6:30","nodeType":"YulIdentifier","src":"4557:6:30"}]},{"nativeSrc":"4588:38:30","nodeType":"YulVariableDeclaration","src":"4588:38:30","value":{"arguments":[{"name":"data","nativeSrc":"4618:4:30","nodeType":"YulIdentifier","src":"4618:4:30"},{"kind":"number","nativeSrc":"4624:1:30","nodeType":"YulLiteral","src":"4624:1:30","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4614:3:30","nodeType":"YulIdentifier","src":"4614:3:30"},"nativeSrc":"4614:12:30","nodeType":"YulFunctionCall","src":"4614:12:30"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"4592:18:30","nodeType":"YulTypedName","src":"4592:18:30","type":""}]},{"body":{"nativeSrc":"4665:51:30","nodeType":"YulBlock","src":"4665:51:30","statements":[{"nativeSrc":"4679:27:30","nodeType":"YulAssignment","src":"4679:27:30","value":{"arguments":[{"name":"length","nativeSrc":"4693:6:30","nodeType":"YulIdentifier","src":"4693:6:30"},{"kind":"number","nativeSrc":"4701:4:30","nodeType":"YulLiteral","src":"4701:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4689:3:30","nodeType":"YulIdentifier","src":"4689:3:30"},"nativeSrc":"4689:17:30","nodeType":"YulFunctionCall","src":"4689:17:30"},"variableNames":[{"name":"length","nativeSrc":"4679:6:30","nodeType":"YulIdentifier","src":"4679:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4645:18:30","nodeType":"YulIdentifier","src":"4645:18:30"}],"functionName":{"name":"iszero","nativeSrc":"4638:6:30","nodeType":"YulIdentifier","src":"4638:6:30"},"nativeSrc":"4638:26:30","nodeType":"YulFunctionCall","src":"4638:26:30"},"nativeSrc":"4635:81:30","nodeType":"YulIf","src":"4635:81:30"},{"body":{"nativeSrc":"4768:42:30","nodeType":"YulBlock","src":"4768:42:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"4782:16:30","nodeType":"YulIdentifier","src":"4782:16:30"},"nativeSrc":"4782:18:30","nodeType":"YulFunctionCall","src":"4782:18:30"},"nativeSrc":"4782:18:30","nodeType":"YulExpressionStatement","src":"4782:18:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4732:18:30","nodeType":"YulIdentifier","src":"4732:18:30"},{"arguments":[{"name":"length","nativeSrc":"4755:6:30","nodeType":"YulIdentifier","src":"4755:6:30"},{"kind":"number","nativeSrc":"4763:2:30","nodeType":"YulLiteral","src":"4763:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4752:2:30","nodeType":"YulIdentifier","src":"4752:2:30"},"nativeSrc":"4752:14:30","nodeType":"YulFunctionCall","src":"4752:14:30"}],"functionName":{"name":"eq","nativeSrc":"4729:2:30","nodeType":"YulIdentifier","src":"4729:2:30"},"nativeSrc":"4729:38:30","nodeType":"YulFunctionCall","src":"4729:38:30"},"nativeSrc":"4726:84:30","nodeType":"YulIf","src":"4726:84:30"}]},"name":"extract_byte_array_length","nativeSrc":"4496:320:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4531:4:30","nodeType":"YulTypedName","src":"4531:4:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4540:6:30","nodeType":"YulTypedName","src":"4540:6:30","type":""}],"src":"4496:320:30"},{"body":{"nativeSrc":"4876:87:30","nodeType":"YulBlock","src":"4876:87:30","statements":[{"nativeSrc":"4886:11:30","nodeType":"YulAssignment","src":"4886:11:30","value":{"name":"ptr","nativeSrc":"4894:3:30","nodeType":"YulIdentifier","src":"4894:3:30"},"variableNames":[{"name":"data","nativeSrc":"4886:4:30","nodeType":"YulIdentifier","src":"4886:4:30"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4914:1:30","nodeType":"YulLiteral","src":"4914:1:30","type":"","value":"0"},{"name":"ptr","nativeSrc":"4917:3:30","nodeType":"YulIdentifier","src":"4917:3:30"}],"functionName":{"name":"mstore","nativeSrc":"4907:6:30","nodeType":"YulIdentifier","src":"4907:6:30"},"nativeSrc":"4907:14:30","nodeType":"YulFunctionCall","src":"4907:14:30"},"nativeSrc":"4907:14:30","nodeType":"YulExpressionStatement","src":"4907:14:30"},{"nativeSrc":"4930:26:30","nodeType":"YulAssignment","src":"4930:26:30","value":{"arguments":[{"kind":"number","nativeSrc":"4948:1:30","nodeType":"YulLiteral","src":"4948:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"4951:4:30","nodeType":"YulLiteral","src":"4951:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4938:9:30","nodeType":"YulIdentifier","src":"4938:9:30"},"nativeSrc":"4938:18:30","nodeType":"YulFunctionCall","src":"4938:18:30"},"variableNames":[{"name":"data","nativeSrc":"4930:4:30","nodeType":"YulIdentifier","src":"4930:4:30"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"4822:141:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4863:3:30","nodeType":"YulTypedName","src":"4863:3:30","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4871:4:30","nodeType":"YulTypedName","src":"4871:4:30","type":""}],"src":"4822:141:30"},{"body":{"nativeSrc":"5013:49:30","nodeType":"YulBlock","src":"5013:49:30","statements":[{"nativeSrc":"5023:33:30","nodeType":"YulAssignment","src":"5023:33:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5041:5:30","nodeType":"YulIdentifier","src":"5041:5:30"},{"kind":"number","nativeSrc":"5048:2:30","nodeType":"YulLiteral","src":"5048:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5037:3:30","nodeType":"YulIdentifier","src":"5037:3:30"},"nativeSrc":"5037:14:30","nodeType":"YulFunctionCall","src":"5037:14:30"},{"kind":"number","nativeSrc":"5053:2:30","nodeType":"YulLiteral","src":"5053:2:30","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"5033:3:30","nodeType":"YulIdentifier","src":"5033:3:30"},"nativeSrc":"5033:23:30","nodeType":"YulFunctionCall","src":"5033:23:30"},"variableNames":[{"name":"result","nativeSrc":"5023:6:30","nodeType":"YulIdentifier","src":"5023:6:30"}]}]},"name":"divide_by_32_ceil","nativeSrc":"4969:93:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4996:5:30","nodeType":"YulTypedName","src":"4996:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5006:6:30","nodeType":"YulTypedName","src":"5006:6:30","type":""}],"src":"4969:93:30"},{"body":{"nativeSrc":"5121:54:30","nodeType":"YulBlock","src":"5121:54:30","statements":[{"nativeSrc":"5131:37:30","nodeType":"YulAssignment","src":"5131:37:30","value":{"arguments":[{"name":"bits","nativeSrc":"5156:4:30","nodeType":"YulIdentifier","src":"5156:4:30"},{"name":"value","nativeSrc":"5162:5:30","nodeType":"YulIdentifier","src":"5162:5:30"}],"functionName":{"name":"shl","nativeSrc":"5152:3:30","nodeType":"YulIdentifier","src":"5152:3:30"},"nativeSrc":"5152:16:30","nodeType":"YulFunctionCall","src":"5152:16:30"},"variableNames":[{"name":"newValue","nativeSrc":"5131:8:30","nodeType":"YulIdentifier","src":"5131:8:30"}]}]},"name":"shift_left_dynamic","nativeSrc":"5068:107:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"5096:4:30","nodeType":"YulTypedName","src":"5096:4:30","type":""},{"name":"value","nativeSrc":"5102:5:30","nodeType":"YulTypedName","src":"5102:5:30","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"5112:8:30","nodeType":"YulTypedName","src":"5112:8:30","type":""}],"src":"5068:107:30"},{"body":{"nativeSrc":"5257:317:30","nodeType":"YulBlock","src":"5257:317:30","statements":[{"nativeSrc":"5267:35:30","nodeType":"YulVariableDeclaration","src":"5267:35:30","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"5288:10:30","nodeType":"YulIdentifier","src":"5288:10:30"},{"kind":"number","nativeSrc":"5300:1:30","nodeType":"YulLiteral","src":"5300:1:30","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"5284:3:30","nodeType":"YulIdentifier","src":"5284:3:30"},"nativeSrc":"5284:18:30","nodeType":"YulFunctionCall","src":"5284:18:30"},"variables":[{"name":"shiftBits","nativeSrc":"5271:9:30","nodeType":"YulTypedName","src":"5271:9:30","type":""}]},{"nativeSrc":"5311:109:30","nodeType":"YulVariableDeclaration","src":"5311:109:30","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5342:9:30","nodeType":"YulIdentifier","src":"5342:9:30"},{"kind":"number","nativeSrc":"5353:66:30","nodeType":"YulLiteral","src":"5353:66:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5323:18:30","nodeType":"YulIdentifier","src":"5323:18:30"},"nativeSrc":"5323:97:30","nodeType":"YulFunctionCall","src":"5323:97:30"},"variables":[{"name":"mask","nativeSrc":"5315:4:30","nodeType":"YulTypedName","src":"5315:4:30","type":""}]},{"nativeSrc":"5429:51:30","nodeType":"YulAssignment","src":"5429:51:30","value":{"arguments":[{"name":"shiftBits","nativeSrc":"5460:9:30","nodeType":"YulIdentifier","src":"5460:9:30"},{"name":"toInsert","nativeSrc":"5471:8:30","nodeType":"YulIdentifier","src":"5471:8:30"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"5441:18:30","nodeType":"YulIdentifier","src":"5441:18:30"},"nativeSrc":"5441:39:30","nodeType":"YulFunctionCall","src":"5441:39:30"},"variableNames":[{"name":"toInsert","nativeSrc":"5429:8:30","nodeType":"YulIdentifier","src":"5429:8:30"}]},{"nativeSrc":"5489:30:30","nodeType":"YulAssignment","src":"5489:30:30","value":{"arguments":[{"name":"value","nativeSrc":"5502:5:30","nodeType":"YulIdentifier","src":"5502:5:30"},{"arguments":[{"name":"mask","nativeSrc":"5513:4:30","nodeType":"YulIdentifier","src":"5513:4:30"}],"functionName":{"name":"not","nativeSrc":"5509:3:30","nodeType":"YulIdentifier","src":"5509:3:30"},"nativeSrc":"5509:9:30","nodeType":"YulFunctionCall","src":"5509:9:30"}],"functionName":{"name":"and","nativeSrc":"5498:3:30","nodeType":"YulIdentifier","src":"5498:3:30"},"nativeSrc":"5498:21:30","nodeType":"YulFunctionCall","src":"5498:21:30"},"variableNames":[{"name":"value","nativeSrc":"5489:5:30","nodeType":"YulIdentifier","src":"5489:5:30"}]},{"nativeSrc":"5528:40:30","nodeType":"YulAssignment","src":"5528:40:30","value":{"arguments":[{"name":"value","nativeSrc":"5541:5:30","nodeType":"YulIdentifier","src":"5541:5:30"},{"arguments":[{"name":"toInsert","nativeSrc":"5552:8:30","nodeType":"YulIdentifier","src":"5552:8:30"},{"name":"mask","nativeSrc":"5562:4:30","nodeType":"YulIdentifier","src":"5562:4:30"}],"functionName":{"name":"and","nativeSrc":"5548:3:30","nodeType":"YulIdentifier","src":"5548:3:30"},"nativeSrc":"5548:19:30","nodeType":"YulFunctionCall","src":"5548:19:30"}],"functionName":{"name":"or","nativeSrc":"5538:2:30","nodeType":"YulIdentifier","src":"5538:2:30"},"nativeSrc":"5538:30:30","nodeType":"YulFunctionCall","src":"5538:30:30"},"variableNames":[{"name":"result","nativeSrc":"5528:6:30","nodeType":"YulIdentifier","src":"5528:6:30"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"5181:393:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5218:5:30","nodeType":"YulTypedName","src":"5218:5:30","type":""},{"name":"shiftBytes","nativeSrc":"5225:10:30","nodeType":"YulTypedName","src":"5225:10:30","type":""},{"name":"toInsert","nativeSrc":"5237:8:30","nodeType":"YulTypedName","src":"5237:8:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5250:6:30","nodeType":"YulTypedName","src":"5250:6:30","type":""}],"src":"5181:393:30"},{"body":{"nativeSrc":"5625:32:30","nodeType":"YulBlock","src":"5625:32:30","statements":[{"nativeSrc":"5635:16:30","nodeType":"YulAssignment","src":"5635:16:30","value":{"name":"value","nativeSrc":"5646:5:30","nodeType":"YulIdentifier","src":"5646:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"5635:7:30","nodeType":"YulIdentifier","src":"5635:7:30"}]}]},"name":"cleanup_t_uint256","nativeSrc":"5580:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5607:5:30","nodeType":"YulTypedName","src":"5607:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5617:7:30","nodeType":"YulTypedName","src":"5617:7:30","type":""}],"src":"5580:77:30"},{"body":{"nativeSrc":"5695:28:30","nodeType":"YulBlock","src":"5695:28:30","statements":[{"nativeSrc":"5705:12:30","nodeType":"YulAssignment","src":"5705:12:30","value":{"name":"value","nativeSrc":"5712:5:30","nodeType":"YulIdentifier","src":"5712:5:30"},"variableNames":[{"name":"ret","nativeSrc":"5705:3:30","nodeType":"YulIdentifier","src":"5705:3:30"}]}]},"name":"identity","nativeSrc":"5663:60:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5681:5:30","nodeType":"YulTypedName","src":"5681:5:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5691:3:30","nodeType":"YulTypedName","src":"5691:3:30","type":""}],"src":"5663:60:30"},{"body":{"nativeSrc":"5789:82:30","nodeType":"YulBlock","src":"5789:82:30","statements":[{"nativeSrc":"5799:66:30","nodeType":"YulAssignment","src":"5799:66:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5857:5:30","nodeType":"YulIdentifier","src":"5857:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5839:17:30","nodeType":"YulIdentifier","src":"5839:17:30"},"nativeSrc":"5839:24:30","nodeType":"YulFunctionCall","src":"5839:24:30"}],"functionName":{"name":"identity","nativeSrc":"5830:8:30","nodeType":"YulIdentifier","src":"5830:8:30"},"nativeSrc":"5830:34:30","nodeType":"YulFunctionCall","src":"5830:34:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5812:17:30","nodeType":"YulIdentifier","src":"5812:17:30"},"nativeSrc":"5812:53:30","nodeType":"YulFunctionCall","src":"5812:53:30"},"variableNames":[{"name":"converted","nativeSrc":"5799:9:30","nodeType":"YulIdentifier","src":"5799:9:30"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5729:142:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5769:5:30","nodeType":"YulTypedName","src":"5769:5:30","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5779:9:30","nodeType":"YulTypedName","src":"5779:9:30","type":""}],"src":"5729:142:30"},{"body":{"nativeSrc":"5924:28:30","nodeType":"YulBlock","src":"5924:28:30","statements":[{"nativeSrc":"5934:12:30","nodeType":"YulAssignment","src":"5934:12:30","value":{"name":"value","nativeSrc":"5941:5:30","nodeType":"YulIdentifier","src":"5941:5:30"},"variableNames":[{"name":"ret","nativeSrc":"5934:3:30","nodeType":"YulIdentifier","src":"5934:3:30"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"5877:75:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5910:5:30","nodeType":"YulTypedName","src":"5910:5:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5920:3:30","nodeType":"YulTypedName","src":"5920:3:30","type":""}],"src":"5877:75:30"},{"body":{"nativeSrc":"6034:193:30","nodeType":"YulBlock","src":"6034:193:30","statements":[{"nativeSrc":"6044:63:30","nodeType":"YulVariableDeclaration","src":"6044:63:30","value":{"arguments":[{"name":"value_0","nativeSrc":"6099:7:30","nodeType":"YulIdentifier","src":"6099:7:30"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"6068:30:30","nodeType":"YulIdentifier","src":"6068:30:30"},"nativeSrc":"6068:39:30","nodeType":"YulFunctionCall","src":"6068:39:30"},"variables":[{"name":"convertedValue_0","nativeSrc":"6048:16:30","nodeType":"YulTypedName","src":"6048:16:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6123:4:30","nodeType":"YulIdentifier","src":"6123:4:30"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"6163:4:30","nodeType":"YulIdentifier","src":"6163:4:30"}],"functionName":{"name":"sload","nativeSrc":"6157:5:30","nodeType":"YulIdentifier","src":"6157:5:30"},"nativeSrc":"6157:11:30","nodeType":"YulFunctionCall","src":"6157:11:30"},{"name":"offset","nativeSrc":"6170:6:30","nodeType":"YulIdentifier","src":"6170:6:30"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"6202:16:30","nodeType":"YulIdentifier","src":"6202:16:30"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"6178:23:30","nodeType":"YulIdentifier","src":"6178:23:30"},"nativeSrc":"6178:41:30","nodeType":"YulFunctionCall","src":"6178:41:30"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"6129:27:30","nodeType":"YulIdentifier","src":"6129:27:30"},"nativeSrc":"6129:91:30","nodeType":"YulFunctionCall","src":"6129:91:30"}],"functionName":{"name":"sstore","nativeSrc":"6116:6:30","nodeType":"YulIdentifier","src":"6116:6:30"},"nativeSrc":"6116:105:30","nodeType":"YulFunctionCall","src":"6116:105:30"},"nativeSrc":"6116:105:30","nodeType":"YulExpressionStatement","src":"6116:105:30"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5958:269:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6011:4:30","nodeType":"YulTypedName","src":"6011:4:30","type":""},{"name":"offset","nativeSrc":"6017:6:30","nodeType":"YulTypedName","src":"6017:6:30","type":""},{"name":"value_0","nativeSrc":"6025:7:30","nodeType":"YulTypedName","src":"6025:7:30","type":""}],"src":"5958:269:30"},{"body":{"nativeSrc":"6282:24:30","nodeType":"YulBlock","src":"6282:24:30","statements":[{"nativeSrc":"6292:8:30","nodeType":"YulAssignment","src":"6292:8:30","value":{"kind":"number","nativeSrc":"6299:1:30","nodeType":"YulLiteral","src":"6299:1:30","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"6292:3:30","nodeType":"YulIdentifier","src":"6292:3:30"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"6233:73:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"6278:3:30","nodeType":"YulTypedName","src":"6278:3:30","type":""}],"src":"6233:73:30"},{"body":{"nativeSrc":"6365:136:30","nodeType":"YulBlock","src":"6365:136:30","statements":[{"nativeSrc":"6375:46:30","nodeType":"YulVariableDeclaration","src":"6375:46:30","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"6389:30:30","nodeType":"YulIdentifier","src":"6389:30:30"},"nativeSrc":"6389:32:30","nodeType":"YulFunctionCall","src":"6389:32:30"},"variables":[{"name":"zero_0","nativeSrc":"6379:6:30","nodeType":"YulTypedName","src":"6379:6:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6474:4:30","nodeType":"YulIdentifier","src":"6474:4:30"},{"name":"offset","nativeSrc":"6480:6:30","nodeType":"YulIdentifier","src":"6480:6:30"},{"name":"zero_0","nativeSrc":"6488:6:30","nodeType":"YulIdentifier","src":"6488:6:30"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"6430:43:30","nodeType":"YulIdentifier","src":"6430:43:30"},"nativeSrc":"6430:65:30","nodeType":"YulFunctionCall","src":"6430:65:30"},"nativeSrc":"6430:65:30","nodeType":"YulExpressionStatement","src":"6430:65:30"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"6312:189:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6351:4:30","nodeType":"YulTypedName","src":"6351:4:30","type":""},{"name":"offset","nativeSrc":"6357:6:30","nodeType":"YulTypedName","src":"6357:6:30","type":""}],"src":"6312:189:30"},{"body":{"nativeSrc":"6557:136:30","nodeType":"YulBlock","src":"6557:136:30","statements":[{"body":{"nativeSrc":"6624:63:30","nodeType":"YulBlock","src":"6624:63:30","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"6668:5:30","nodeType":"YulIdentifier","src":"6668:5:30"},{"kind":"number","nativeSrc":"6675:1:30","nodeType":"YulLiteral","src":"6675:1:30","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"6638:29:30","nodeType":"YulIdentifier","src":"6638:29:30"},"nativeSrc":"6638:39:30","nodeType":"YulFunctionCall","src":"6638:39:30"},"nativeSrc":"6638:39:30","nodeType":"YulExpressionStatement","src":"6638:39:30"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"6577:5:30","nodeType":"YulIdentifier","src":"6577:5:30"},{"name":"end","nativeSrc":"6584:3:30","nodeType":"YulIdentifier","src":"6584:3:30"}],"functionName":{"name":"lt","nativeSrc":"6574:2:30","nodeType":"YulIdentifier","src":"6574:2:30"},"nativeSrc":"6574:14:30","nodeType":"YulFunctionCall","src":"6574:14:30"},"nativeSrc":"6567:120:30","nodeType":"YulForLoop","post":{"nativeSrc":"6589:26:30","nodeType":"YulBlock","src":"6589:26:30","statements":[{"nativeSrc":"6591:22:30","nodeType":"YulAssignment","src":"6591:22:30","value":{"arguments":[{"name":"start","nativeSrc":"6604:5:30","nodeType":"YulIdentifier","src":"6604:5:30"},{"kind":"number","nativeSrc":"6611:1:30","nodeType":"YulLiteral","src":"6611:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6600:3:30","nodeType":"YulIdentifier","src":"6600:3:30"},"nativeSrc":"6600:13:30","nodeType":"YulFunctionCall","src":"6600:13:30"},"variableNames":[{"name":"start","nativeSrc":"6591:5:30","nodeType":"YulIdentifier","src":"6591:5:30"}]}]},"pre":{"nativeSrc":"6571:2:30","nodeType":"YulBlock","src":"6571:2:30","statements":[]},"src":"6567:120:30"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"6507:186:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"6545:5:30","nodeType":"YulTypedName","src":"6545:5:30","type":""},{"name":"end","nativeSrc":"6552:3:30","nodeType":"YulTypedName","src":"6552:3:30","type":""}],"src":"6507:186:30"},{"body":{"nativeSrc":"6778:464:30","nodeType":"YulBlock","src":"6778:464:30","statements":[{"body":{"nativeSrc":"6804:431:30","nodeType":"YulBlock","src":"6804:431:30","statements":[{"nativeSrc":"6818:54:30","nodeType":"YulVariableDeclaration","src":"6818:54:30","value":{"arguments":[{"name":"array","nativeSrc":"6866:5:30","nodeType":"YulIdentifier","src":"6866:5:30"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6834:31:30","nodeType":"YulIdentifier","src":"6834:31:30"},"nativeSrc":"6834:38:30","nodeType":"YulFunctionCall","src":"6834:38:30"},"variables":[{"name":"dataArea","nativeSrc":"6822:8:30","nodeType":"YulTypedName","src":"6822:8:30","type":""}]},{"nativeSrc":"6885:63:30","nodeType":"YulVariableDeclaration","src":"6885:63:30","value":{"arguments":[{"name":"dataArea","nativeSrc":"6908:8:30","nodeType":"YulIdentifier","src":"6908:8:30"},{"arguments":[{"name":"startIndex","nativeSrc":"6936:10:30","nodeType":"YulIdentifier","src":"6936:10:30"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6918:17:30","nodeType":"YulIdentifier","src":"6918:17:30"},"nativeSrc":"6918:29:30","nodeType":"YulFunctionCall","src":"6918:29:30"}],"functionName":{"name":"add","nativeSrc":"6904:3:30","nodeType":"YulIdentifier","src":"6904:3:30"},"nativeSrc":"6904:44:30","nodeType":"YulFunctionCall","src":"6904:44:30"},"variables":[{"name":"deleteStart","nativeSrc":"6889:11:30","nodeType":"YulTypedName","src":"6889:11:30","type":""}]},{"body":{"nativeSrc":"7105:27:30","nodeType":"YulBlock","src":"7105:27:30","statements":[{"nativeSrc":"7107:23:30","nodeType":"YulAssignment","src":"7107:23:30","value":{"name":"dataArea","nativeSrc":"7122:8:30","nodeType":"YulIdentifier","src":"7122:8:30"},"variableNames":[{"name":"deleteStart","nativeSrc":"7107:11:30","nodeType":"YulIdentifier","src":"7107:11:30"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7089:10:30","nodeType":"YulIdentifier","src":"7089:10:30"},{"kind":"number","nativeSrc":"7101:2:30","nodeType":"YulLiteral","src":"7101:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7086:2:30","nodeType":"YulIdentifier","src":"7086:2:30"},"nativeSrc":"7086:18:30","nodeType":"YulFunctionCall","src":"7086:18:30"},"nativeSrc":"7083:49:30","nodeType":"YulIf","src":"7083:49:30"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"7174:11:30","nodeType":"YulIdentifier","src":"7174:11:30"},{"arguments":[{"name":"dataArea","nativeSrc":"7191:8:30","nodeType":"YulIdentifier","src":"7191:8:30"},{"arguments":[{"name":"len","nativeSrc":"7219:3:30","nodeType":"YulIdentifier","src":"7219:3:30"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"7201:17:30","nodeType":"YulIdentifier","src":"7201:17:30"},"nativeSrc":"7201:22:30","nodeType":"YulFunctionCall","src":"7201:22:30"}],"functionName":{"name":"add","nativeSrc":"7187:3:30","nodeType":"YulIdentifier","src":"7187:3:30"},"nativeSrc":"7187:37:30","nodeType":"YulFunctionCall","src":"7187:37:30"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"7145:28:30","nodeType":"YulIdentifier","src":"7145:28:30"},"nativeSrc":"7145:80:30","nodeType":"YulFunctionCall","src":"7145:80:30"},"nativeSrc":"7145:80:30","nodeType":"YulExpressionStatement","src":"7145:80:30"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"6795:3:30","nodeType":"YulIdentifier","src":"6795:3:30"},{"kind":"number","nativeSrc":"6800:2:30","nodeType":"YulLiteral","src":"6800:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6792:2:30","nodeType":"YulIdentifier","src":"6792:2:30"},"nativeSrc":"6792:11:30","nodeType":"YulFunctionCall","src":"6792:11:30"},"nativeSrc":"6789:446:30","nodeType":"YulIf","src":"6789:446:30"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6699:543:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6754:5:30","nodeType":"YulTypedName","src":"6754:5:30","type":""},{"name":"len","nativeSrc":"6761:3:30","nodeType":"YulTypedName","src":"6761:3:30","type":""},{"name":"startIndex","nativeSrc":"6766:10:30","nodeType":"YulTypedName","src":"6766:10:30","type":""}],"src":"6699:543:30"},{"body":{"nativeSrc":"7311:54:30","nodeType":"YulBlock","src":"7311:54:30","statements":[{"nativeSrc":"7321:37:30","nodeType":"YulAssignment","src":"7321:37:30","value":{"arguments":[{"name":"bits","nativeSrc":"7346:4:30","nodeType":"YulIdentifier","src":"7346:4:30"},{"name":"value","nativeSrc":"7352:5:30","nodeType":"YulIdentifier","src":"7352:5:30"}],"functionName":{"name":"shr","nativeSrc":"7342:3:30","nodeType":"YulIdentifier","src":"7342:3:30"},"nativeSrc":"7342:16:30","nodeType":"YulFunctionCall","src":"7342:16:30"},"variableNames":[{"name":"newValue","nativeSrc":"7321:8:30","nodeType":"YulIdentifier","src":"7321:8:30"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"7248:117:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"7286:4:30","nodeType":"YulTypedName","src":"7286:4:30","type":""},{"name":"value","nativeSrc":"7292:5:30","nodeType":"YulTypedName","src":"7292:5:30","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7302:8:30","nodeType":"YulTypedName","src":"7302:8:30","type":""}],"src":"7248:117:30"},{"body":{"nativeSrc":"7422:118:30","nodeType":"YulBlock","src":"7422:118:30","statements":[{"nativeSrc":"7432:68:30","nodeType":"YulVariableDeclaration","src":"7432:68:30","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7481:1:30","nodeType":"YulLiteral","src":"7481:1:30","type":"","value":"8"},{"name":"bytes","nativeSrc":"7484:5:30","nodeType":"YulIdentifier","src":"7484:5:30"}],"functionName":{"name":"mul","nativeSrc":"7477:3:30","nodeType":"YulIdentifier","src":"7477:3:30"},"nativeSrc":"7477:13:30","nodeType":"YulFunctionCall","src":"7477:13:30"},{"arguments":[{"kind":"number","nativeSrc":"7496:1:30","nodeType":"YulLiteral","src":"7496:1:30","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7492:3:30","nodeType":"YulIdentifier","src":"7492:3:30"},"nativeSrc":"7492:6:30","nodeType":"YulFunctionCall","src":"7492:6:30"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"7448:28:30","nodeType":"YulIdentifier","src":"7448:28:30"},"nativeSrc":"7448:51:30","nodeType":"YulFunctionCall","src":"7448:51:30"}],"functionName":{"name":"not","nativeSrc":"7444:3:30","nodeType":"YulIdentifier","src":"7444:3:30"},"nativeSrc":"7444:56:30","nodeType":"YulFunctionCall","src":"7444:56:30"},"variables":[{"name":"mask","nativeSrc":"7436:4:30","nodeType":"YulTypedName","src":"7436:4:30","type":""}]},{"nativeSrc":"7509:25:30","nodeType":"YulAssignment","src":"7509:25:30","value":{"arguments":[{"name":"data","nativeSrc":"7523:4:30","nodeType":"YulIdentifier","src":"7523:4:30"},{"name":"mask","nativeSrc":"7529:4:30","nodeType":"YulIdentifier","src":"7529:4:30"}],"functionName":{"name":"and","nativeSrc":"7519:3:30","nodeType":"YulIdentifier","src":"7519:3:30"},"nativeSrc":"7519:15:30","nodeType":"YulFunctionCall","src":"7519:15:30"},"variableNames":[{"name":"result","nativeSrc":"7509:6:30","nodeType":"YulIdentifier","src":"7509:6:30"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"7371:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7399:4:30","nodeType":"YulTypedName","src":"7399:4:30","type":""},{"name":"bytes","nativeSrc":"7405:5:30","nodeType":"YulTypedName","src":"7405:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7415:6:30","nodeType":"YulTypedName","src":"7415:6:30","type":""}],"src":"7371:169:30"},{"body":{"nativeSrc":"7626:214:30","nodeType":"YulBlock","src":"7626:214:30","statements":[{"nativeSrc":"7759:37:30","nodeType":"YulAssignment","src":"7759:37:30","value":{"arguments":[{"name":"data","nativeSrc":"7786:4:30","nodeType":"YulIdentifier","src":"7786:4:30"},{"name":"len","nativeSrc":"7792:3:30","nodeType":"YulIdentifier","src":"7792:3:30"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"7767:18:30","nodeType":"YulIdentifier","src":"7767:18:30"},"nativeSrc":"7767:29:30","nodeType":"YulFunctionCall","src":"7767:29:30"},"variableNames":[{"name":"data","nativeSrc":"7759:4:30","nodeType":"YulIdentifier","src":"7759:4:30"}]},{"nativeSrc":"7805:29:30","nodeType":"YulAssignment","src":"7805:29:30","value":{"arguments":[{"name":"data","nativeSrc":"7816:4:30","nodeType":"YulIdentifier","src":"7816:4:30"},{"arguments":[{"kind":"number","nativeSrc":"7826:1:30","nodeType":"YulLiteral","src":"7826:1:30","type":"","value":"2"},{"name":"len","nativeSrc":"7829:3:30","nodeType":"YulIdentifier","src":"7829:3:30"}],"functionName":{"name":"mul","nativeSrc":"7822:3:30","nodeType":"YulIdentifier","src":"7822:3:30"},"nativeSrc":"7822:11:30","nodeType":"YulFunctionCall","src":"7822:11:30"}],"functionName":{"name":"or","nativeSrc":"7813:2:30","nodeType":"YulIdentifier","src":"7813:2:30"},"nativeSrc":"7813:21:30","nodeType":"YulFunctionCall","src":"7813:21:30"},"variableNames":[{"name":"used","nativeSrc":"7805:4:30","nodeType":"YulIdentifier","src":"7805:4:30"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7545:295:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7607:4:30","nodeType":"YulTypedName","src":"7607:4:30","type":""},{"name":"len","nativeSrc":"7613:3:30","nodeType":"YulTypedName","src":"7613:3:30","type":""}],"returnVariables":[{"name":"used","nativeSrc":"7621:4:30","nodeType":"YulTypedName","src":"7621:4:30","type":""}],"src":"7545:295:30"},{"body":{"nativeSrc":"7937:1303:30","nodeType":"YulBlock","src":"7937:1303:30","statements":[{"nativeSrc":"7948:51:30","nodeType":"YulVariableDeclaration","src":"7948:51:30","value":{"arguments":[{"name":"src","nativeSrc":"7995:3:30","nodeType":"YulIdentifier","src":"7995:3:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7962:32:30","nodeType":"YulIdentifier","src":"7962:32:30"},"nativeSrc":"7962:37:30","nodeType":"YulFunctionCall","src":"7962:37:30"},"variables":[{"name":"newLen","nativeSrc":"7952:6:30","nodeType":"YulTypedName","src":"7952:6:30","type":""}]},{"body":{"nativeSrc":"8084:22:30","nodeType":"YulBlock","src":"8084:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"8086:16:30","nodeType":"YulIdentifier","src":"8086:16:30"},"nativeSrc":"8086:18:30","nodeType":"YulFunctionCall","src":"8086:18:30"},"nativeSrc":"8086:18:30","nodeType":"YulExpressionStatement","src":"8086:18:30"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"8056:6:30","nodeType":"YulIdentifier","src":"8056:6:30"},{"kind":"number","nativeSrc":"8064:18:30","nodeType":"YulLiteral","src":"8064:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8053:2:30","nodeType":"YulIdentifier","src":"8053:2:30"},"nativeSrc":"8053:30:30","nodeType":"YulFunctionCall","src":"8053:30:30"},"nativeSrc":"8050:56:30","nodeType":"YulIf","src":"8050:56:30"},{"nativeSrc":"8116:52:30","nodeType":"YulVariableDeclaration","src":"8116:52:30","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"8162:4:30","nodeType":"YulIdentifier","src":"8162:4:30"}],"functionName":{"name":"sload","nativeSrc":"8156:5:30","nodeType":"YulIdentifier","src":"8156:5:30"},"nativeSrc":"8156:11:30","nodeType":"YulFunctionCall","src":"8156:11:30"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"8130:25:30","nodeType":"YulIdentifier","src":"8130:25:30"},"nativeSrc":"8130:38:30","nodeType":"YulFunctionCall","src":"8130:38:30"},"variables":[{"name":"oldLen","nativeSrc":"8120:6:30","nodeType":"YulTypedName","src":"8120:6:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8261:4:30","nodeType":"YulIdentifier","src":"8261:4:30"},{"name":"oldLen","nativeSrc":"8267:6:30","nodeType":"YulIdentifier","src":"8267:6:30"},{"name":"newLen","nativeSrc":"8275:6:30","nodeType":"YulIdentifier","src":"8275:6:30"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"8215:45:30","nodeType":"YulIdentifier","src":"8215:45:30"},"nativeSrc":"8215:67:30","nodeType":"YulFunctionCall","src":"8215:67:30"},"nativeSrc":"8215:67:30","nodeType":"YulExpressionStatement","src":"8215:67:30"},{"nativeSrc":"8292:18:30","nodeType":"YulVariableDeclaration","src":"8292:18:30","value":{"kind":"number","nativeSrc":"8309:1:30","nodeType":"YulLiteral","src":"8309:1:30","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"8296:9:30","nodeType":"YulTypedName","src":"8296:9:30","type":""}]},{"nativeSrc":"8320:17:30","nodeType":"YulAssignment","src":"8320:17:30","value":{"kind":"number","nativeSrc":"8333:4:30","nodeType":"YulLiteral","src":"8333:4:30","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"8320:9:30","nodeType":"YulIdentifier","src":"8320:9:30"}]},{"cases":[{"body":{"nativeSrc":"8384:611:30","nodeType":"YulBlock","src":"8384:611:30","statements":[{"nativeSrc":"8398:37:30","nodeType":"YulVariableDeclaration","src":"8398:37:30","value":{"arguments":[{"name":"newLen","nativeSrc":"8417:6:30","nodeType":"YulIdentifier","src":"8417:6:30"},{"arguments":[{"kind":"number","nativeSrc":"8429:4:30","nodeType":"YulLiteral","src":"8429:4:30","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"8425:3:30","nodeType":"YulIdentifier","src":"8425:3:30"},"nativeSrc":"8425:9:30","nodeType":"YulFunctionCall","src":"8425:9:30"}],"functionName":{"name":"and","nativeSrc":"8413:3:30","nodeType":"YulIdentifier","src":"8413:3:30"},"nativeSrc":"8413:22:30","nodeType":"YulFunctionCall","src":"8413:22:30"},"variables":[{"name":"loopEnd","nativeSrc":"8402:7:30","nodeType":"YulTypedName","src":"8402:7:30","type":""}]},{"nativeSrc":"8449:51:30","nodeType":"YulVariableDeclaration","src":"8449:51:30","value":{"arguments":[{"name":"slot","nativeSrc":"8495:4:30","nodeType":"YulIdentifier","src":"8495:4:30"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"8463:31:30","nodeType":"YulIdentifier","src":"8463:31:30"},"nativeSrc":"8463:37:30","nodeType":"YulFunctionCall","src":"8463:37:30"},"variables":[{"name":"dstPtr","nativeSrc":"8453:6:30","nodeType":"YulTypedName","src":"8453:6:30","type":""}]},{"nativeSrc":"8513:10:30","nodeType":"YulVariableDeclaration","src":"8513:10:30","value":{"kind":"number","nativeSrc":"8522:1:30","nodeType":"YulLiteral","src":"8522:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8517:1:30","nodeType":"YulTypedName","src":"8517:1:30","type":""}]},{"body":{"nativeSrc":"8581:163:30","nodeType":"YulBlock","src":"8581:163:30","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8606:6:30","nodeType":"YulIdentifier","src":"8606:6:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8624:3:30","nodeType":"YulIdentifier","src":"8624:3:30"},{"name":"srcOffset","nativeSrc":"8629:9:30","nodeType":"YulIdentifier","src":"8629:9:30"}],"functionName":{"name":"add","nativeSrc":"8620:3:30","nodeType":"YulIdentifier","src":"8620:3:30"},"nativeSrc":"8620:19:30","nodeType":"YulFunctionCall","src":"8620:19:30"}],"functionName":{"name":"mload","nativeSrc":"8614:5:30","nodeType":"YulIdentifier","src":"8614:5:30"},"nativeSrc":"8614:26:30","nodeType":"YulFunctionCall","src":"8614:26:30"}],"functionName":{"name":"sstore","nativeSrc":"8599:6:30","nodeType":"YulIdentifier","src":"8599:6:30"},"nativeSrc":"8599:42:30","nodeType":"YulFunctionCall","src":"8599:42:30"},"nativeSrc":"8599:42:30","nodeType":"YulExpressionStatement","src":"8599:42:30"},{"nativeSrc":"8658:24:30","nodeType":"YulAssignment","src":"8658:24:30","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8672:6:30","nodeType":"YulIdentifier","src":"8672:6:30"},{"kind":"number","nativeSrc":"8680:1:30","nodeType":"YulLiteral","src":"8680:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8668:3:30","nodeType":"YulIdentifier","src":"8668:3:30"},"nativeSrc":"8668:14:30","nodeType":"YulFunctionCall","src":"8668:14:30"},"variableNames":[{"name":"dstPtr","nativeSrc":"8658:6:30","nodeType":"YulIdentifier","src":"8658:6:30"}]},{"nativeSrc":"8699:31:30","nodeType":"YulAssignment","src":"8699:31:30","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8716:9:30","nodeType":"YulIdentifier","src":"8716:9:30"},{"kind":"number","nativeSrc":"8727:2:30","nodeType":"YulLiteral","src":"8727:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8712:3:30","nodeType":"YulIdentifier","src":"8712:3:30"},"nativeSrc":"8712:18:30","nodeType":"YulFunctionCall","src":"8712:18:30"},"variableNames":[{"name":"srcOffset","nativeSrc":"8699:9:30","nodeType":"YulIdentifier","src":"8699:9:30"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8547:1:30","nodeType":"YulIdentifier","src":"8547:1:30"},{"name":"loopEnd","nativeSrc":"8550:7:30","nodeType":"YulIdentifier","src":"8550:7:30"}],"functionName":{"name":"lt","nativeSrc":"8544:2:30","nodeType":"YulIdentifier","src":"8544:2:30"},"nativeSrc":"8544:14:30","nodeType":"YulFunctionCall","src":"8544:14:30"},"nativeSrc":"8536:208:30","nodeType":"YulForLoop","post":{"nativeSrc":"8559:21:30","nodeType":"YulBlock","src":"8559:21:30","statements":[{"nativeSrc":"8561:17:30","nodeType":"YulAssignment","src":"8561:17:30","value":{"arguments":[{"name":"i","nativeSrc":"8570:1:30","nodeType":"YulIdentifier","src":"8570:1:30"},{"kind":"number","nativeSrc":"8573:4:30","nodeType":"YulLiteral","src":"8573:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8566:3:30","nodeType":"YulIdentifier","src":"8566:3:30"},"nativeSrc":"8566:12:30","nodeType":"YulFunctionCall","src":"8566:12:30"},"variableNames":[{"name":"i","nativeSrc":"8561:1:30","nodeType":"YulIdentifier","src":"8561:1:30"}]}]},"pre":{"nativeSrc":"8540:3:30","nodeType":"YulBlock","src":"8540:3:30","statements":[]},"src":"8536:208:30"},{"body":{"nativeSrc":"8780:156:30","nodeType":"YulBlock","src":"8780:156:30","statements":[{"nativeSrc":"8798:43:30","nodeType":"YulVariableDeclaration","src":"8798:43:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8825:3:30","nodeType":"YulIdentifier","src":"8825:3:30"},{"name":"srcOffset","nativeSrc":"8830:9:30","nodeType":"YulIdentifier","src":"8830:9:30"}],"functionName":{"name":"add","nativeSrc":"8821:3:30","nodeType":"YulIdentifier","src":"8821:3:30"},"nativeSrc":"8821:19:30","nodeType":"YulFunctionCall","src":"8821:19:30"}],"functionName":{"name":"mload","nativeSrc":"8815:5:30","nodeType":"YulIdentifier","src":"8815:5:30"},"nativeSrc":"8815:26:30","nodeType":"YulFunctionCall","src":"8815:26:30"},"variables":[{"name":"lastValue","nativeSrc":"8802:9:30","nodeType":"YulTypedName","src":"8802:9:30","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8865:6:30","nodeType":"YulIdentifier","src":"8865:6:30"},{"arguments":[{"name":"lastValue","nativeSrc":"8892:9:30","nodeType":"YulIdentifier","src":"8892:9:30"},{"arguments":[{"name":"newLen","nativeSrc":"8907:6:30","nodeType":"YulIdentifier","src":"8907:6:30"},{"kind":"number","nativeSrc":"8915:4:30","nodeType":"YulLiteral","src":"8915:4:30","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"8903:3:30","nodeType":"YulIdentifier","src":"8903:3:30"},"nativeSrc":"8903:17:30","nodeType":"YulFunctionCall","src":"8903:17:30"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8873:18:30","nodeType":"YulIdentifier","src":"8873:18:30"},"nativeSrc":"8873:48:30","nodeType":"YulFunctionCall","src":"8873:48:30"}],"functionName":{"name":"sstore","nativeSrc":"8858:6:30","nodeType":"YulIdentifier","src":"8858:6:30"},"nativeSrc":"8858:64:30","nodeType":"YulFunctionCall","src":"8858:64:30"},"nativeSrc":"8858:64:30","nodeType":"YulExpressionStatement","src":"8858:64:30"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8763:7:30","nodeType":"YulIdentifier","src":"8763:7:30"},{"name":"newLen","nativeSrc":"8772:6:30","nodeType":"YulIdentifier","src":"8772:6:30"}],"functionName":{"name":"lt","nativeSrc":"8760:2:30","nodeType":"YulIdentifier","src":"8760:2:30"},"nativeSrc":"8760:19:30","nodeType":"YulFunctionCall","src":"8760:19:30"},"nativeSrc":"8757:179:30","nodeType":"YulIf","src":"8757:179:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8956:4:30","nodeType":"YulIdentifier","src":"8956:4:30"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"8970:6:30","nodeType":"YulIdentifier","src":"8970:6:30"},{"kind":"number","nativeSrc":"8978:1:30","nodeType":"YulLiteral","src":"8978:1:30","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"8966:3:30","nodeType":"YulIdentifier","src":"8966:3:30"},"nativeSrc":"8966:14:30","nodeType":"YulFunctionCall","src":"8966:14:30"},{"kind":"number","nativeSrc":"8982:1:30","nodeType":"YulLiteral","src":"8982:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8962:3:30","nodeType":"YulIdentifier","src":"8962:3:30"},"nativeSrc":"8962:22:30","nodeType":"YulFunctionCall","src":"8962:22:30"}],"functionName":{"name":"sstore","nativeSrc":"8949:6:30","nodeType":"YulIdentifier","src":"8949:6:30"},"nativeSrc":"8949:36:30","nodeType":"YulFunctionCall","src":"8949:36:30"},"nativeSrc":"8949:36:30","nodeType":"YulExpressionStatement","src":"8949:36:30"}]},"nativeSrc":"8377:618:30","nodeType":"YulCase","src":"8377:618:30","value":{"kind":"number","nativeSrc":"8382:1:30","nodeType":"YulLiteral","src":"8382:1:30","type":"","value":"1"}},{"body":{"nativeSrc":"9012:222:30","nodeType":"YulBlock","src":"9012:222:30","statements":[{"nativeSrc":"9026:14:30","nodeType":"YulVariableDeclaration","src":"9026:14:30","value":{"kind":"number","nativeSrc":"9039:1:30","nodeType":"YulLiteral","src":"9039:1:30","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"9030:5:30","nodeType":"YulTypedName","src":"9030:5:30","type":""}]},{"body":{"nativeSrc":"9063:67:30","nodeType":"YulBlock","src":"9063:67:30","statements":[{"nativeSrc":"9081:35:30","nodeType":"YulAssignment","src":"9081:35:30","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9100:3:30","nodeType":"YulIdentifier","src":"9100:3:30"},{"name":"srcOffset","nativeSrc":"9105:9:30","nodeType":"YulIdentifier","src":"9105:9:30"}],"functionName":{"name":"add","nativeSrc":"9096:3:30","nodeType":"YulIdentifier","src":"9096:3:30"},"nativeSrc":"9096:19:30","nodeType":"YulFunctionCall","src":"9096:19:30"}],"functionName":{"name":"mload","nativeSrc":"9090:5:30","nodeType":"YulIdentifier","src":"9090:5:30"},"nativeSrc":"9090:26:30","nodeType":"YulFunctionCall","src":"9090:26:30"},"variableNames":[{"name":"value","nativeSrc":"9081:5:30","nodeType":"YulIdentifier","src":"9081:5:30"}]}]},"condition":{"name":"newLen","nativeSrc":"9056:6:30","nodeType":"YulIdentifier","src":"9056:6:30"},"nativeSrc":"9053:77:30","nodeType":"YulIf","src":"9053:77:30"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9150:4:30","nodeType":"YulIdentifier","src":"9150:4:30"},{"arguments":[{"name":"value","nativeSrc":"9209:5:30","nodeType":"YulIdentifier","src":"9209:5:30"},{"name":"newLen","nativeSrc":"9216:6:30","nodeType":"YulIdentifier","src":"9216:6:30"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"9156:52:30","nodeType":"YulIdentifier","src":"9156:52:30"},"nativeSrc":"9156:67:30","nodeType":"YulFunctionCall","src":"9156:67:30"}],"functionName":{"name":"sstore","nativeSrc":"9143:6:30","nodeType":"YulIdentifier","src":"9143:6:30"},"nativeSrc":"9143:81:30","nodeType":"YulFunctionCall","src":"9143:81:30"},"nativeSrc":"9143:81:30","nodeType":"YulExpressionStatement","src":"9143:81:30"}]},"nativeSrc":"9004:230:30","nodeType":"YulCase","src":"9004:230:30","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"8357:6:30","nodeType":"YulIdentifier","src":"8357:6:30"},{"kind":"number","nativeSrc":"8365:2:30","nodeType":"YulLiteral","src":"8365:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"8354:2:30","nodeType":"YulIdentifier","src":"8354:2:30"},"nativeSrc":"8354:14:30","nodeType":"YulFunctionCall","src":"8354:14:30"},"nativeSrc":"8347:887:30","nodeType":"YulSwitch","src":"8347:887:30"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7845:1395:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7926:4:30","nodeType":"YulTypedName","src":"7926:4:30","type":""},{"name":"src","nativeSrc":"7932:3:30","nodeType":"YulTypedName","src":"7932:3:30","type":""}],"src":"7845:1395:30"},{"body":{"nativeSrc":"9311:53:30","nodeType":"YulBlock","src":"9311:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9328:3:30","nodeType":"YulIdentifier","src":"9328:3:30"},{"arguments":[{"name":"value","nativeSrc":"9351:5:30","nodeType":"YulIdentifier","src":"9351:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9333:17:30","nodeType":"YulIdentifier","src":"9333:17:30"},"nativeSrc":"9333:24:30","nodeType":"YulFunctionCall","src":"9333:24:30"}],"functionName":{"name":"mstore","nativeSrc":"9321:6:30","nodeType":"YulIdentifier","src":"9321:6:30"},"nativeSrc":"9321:37:30","nodeType":"YulFunctionCall","src":"9321:37:30"},"nativeSrc":"9321:37:30","nodeType":"YulExpressionStatement","src":"9321:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9246:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9299:5:30","nodeType":"YulTypedName","src":"9299:5:30","type":""},{"name":"pos","nativeSrc":"9306:3:30","nodeType":"YulTypedName","src":"9306:3:30","type":""}],"src":"9246:118:30"},{"body":{"nativeSrc":"9468:124:30","nodeType":"YulBlock","src":"9468:124:30","statements":[{"nativeSrc":"9478:26:30","nodeType":"YulAssignment","src":"9478:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"9490:9:30","nodeType":"YulIdentifier","src":"9490:9:30"},{"kind":"number","nativeSrc":"9501:2:30","nodeType":"YulLiteral","src":"9501:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9486:3:30","nodeType":"YulIdentifier","src":"9486:3:30"},"nativeSrc":"9486:18:30","nodeType":"YulFunctionCall","src":"9486:18:30"},"variableNames":[{"name":"tail","nativeSrc":"9478:4:30","nodeType":"YulIdentifier","src":"9478:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9558:6:30","nodeType":"YulIdentifier","src":"9558:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"9571:9:30","nodeType":"YulIdentifier","src":"9571:9:30"},{"kind":"number","nativeSrc":"9582:1:30","nodeType":"YulLiteral","src":"9582:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9567:3:30","nodeType":"YulIdentifier","src":"9567:3:30"},"nativeSrc":"9567:17:30","nodeType":"YulFunctionCall","src":"9567:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9514:43:30","nodeType":"YulIdentifier","src":"9514:43:30"},"nativeSrc":"9514:71:30","nodeType":"YulFunctionCall","src":"9514:71:30"},"nativeSrc":"9514:71:30","nodeType":"YulExpressionStatement","src":"9514:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9370:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9440:9:30","nodeType":"YulTypedName","src":"9440:9:30","type":""},{"name":"value0","nativeSrc":"9452:6:30","nodeType":"YulTypedName","src":"9452:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9463:4:30","nodeType":"YulTypedName","src":"9463:4:30","type":""}],"src":"9370:222:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516118cc3803806118cc8339818101604052810190610032919061037a565b80838381600390816100449190610626565b5080600490816100549190610626565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c09190610707565b60405180910390fd5b6100d8816100e160201b60201c565b50505050610722565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61020e826101c5565b810181811067ffffffffffffffff8211171561022d5761022c6101d6565b5b80604052505050565b60006102406101a7565b905061024c8282610205565b919050565b600067ffffffffffffffff82111561026c5761026b6101d6565b5b610275826101c5565b9050602081019050919050565b60005b838110156102a0578082015181840152602081019050610285565b60008484015250505050565b60006102bf6102ba84610251565b610236565b9050828152602081018484840111156102db576102da6101c0565b5b6102e6848285610282565b509392505050565b600082601f830112610303576103026101bb565b5b81516103138482602086016102ac565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103478261031c565b9050919050565b6103578161033c565b811461036257600080fd5b50565b6000815190506103748161034e565b92915050565b600080600060608486031215610393576103926101b1565b5b600084015167ffffffffffffffff8111156103b1576103b06101b6565b5b6103bd868287016102ee565b935050602084015167ffffffffffffffff8111156103de576103dd6101b6565b5b6103ea868287016102ee565b92505060406103fb86828701610365565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061045757607f821691505b60208210810361046a57610469610410565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104d27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610495565b6104dc8683610495565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061052361051e610519846104f4565b6104fe565b6104f4565b9050919050565b6000819050919050565b61053d83610508565b6105516105498261052a565b8484546104a2565b825550505050565b600090565b610566610559565b610571818484610534565b505050565b5b818110156105955761058a60008261055e565b600181019050610577565b5050565b601f8211156105da576105ab81610470565b6105b484610485565b810160208510156105c3578190505b6105d76105cf85610485565b830182610576565b50505b505050565b600082821c905092915050565b60006105fd600019846008026105df565b1980831691505092915050565b600061061683836105ec565b9150826002028217905092915050565b61062f82610405565b67ffffffffffffffff811115610648576106476101d6565b5b610652825461043f565b61065d828285610599565b600060209050601f831160018114610690576000841561067e578287015190505b610688858261060a565b8655506106f0565b601f19841661069e86610470565b60005b828110156106c6578489015182556001820191506020850194506020810190506106a1565b868310156106e357848901516106df601f8916826105ec565b8355505b6001600288020188555050505b505050505050565b6107018161033c565b82525050565b600060208201905061071c60008301846106f8565b92915050565b61119b806107316000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610def565b60405180910390f35b61010c60048036038101906101079190610eaa565b61032e565b6040516101199190610f05565b60405180910390f35b61012a610351565b6040516101379190610f2f565b60405180910390f35b61015a60048036038101906101559190610f4a565b61035b565b6040516101679190610f05565b60405180910390f35b61017861038a565b6040516101859190610fb9565b60405180910390f35b6101a860048036038101906101a39190610eaa565b610393565b005b6101c460048036038101906101bf9190610fd4565b6103a9565b6040516101d19190610f2f565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f99190611010565b60405180910390f35b61020a61042f565b6040516102179190610def565b60405180910390f35b61023a60048036038101906102359190610eaa565b6104c1565b6040516102479190610f05565b60405180910390f35b61026a6004803603810190610265919061102b565b6104e4565b6040516102779190610f2f565b60405180910390f35b61029a60048036038101906102959190610fd4565b61056b565b005b6060600380546102ab9061109a565b80601f01602080910402602001604051908101604052809291908181526020018280546102d79061109a565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e8585856106a0565b60019150509392505050565b60006012905090565b61039b610794565b6103a5828261081b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610794565b610403600061089d565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e9061109a565b80601f016020809104026020016040519081016040528092919081815260200182805461046a9061109a565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d98185856106a0565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610794565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc9190611010565b60405180910390fd5b6105ee8161089d565b50565b600033905090565b6106068383836001610963565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561069a578181101561068a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610681939291906110cb565b60405180910390fd5b61069984848484036000610963565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107125760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107099190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107845760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077b9190611010565b60405180910390fd5b61078f838383610b3a565b505050565b61079c6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107ba610405565b73ffffffffffffffffffffffffffffffffffffffff1614610819576107dd6105f1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108109190611010565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108849190611010565b60405180910390fd5b61089960008383610b3a565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d55760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cc9190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a475760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3e9190611010565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b34578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2b9190610f2f565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8c578060026000828254610b809190611131565b92505081905550610c5f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c18578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0f939291906110cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca85780600260008282540392505081905550610cf5565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d529190610f2f565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d99578082015181840152602081019050610d7e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc182610d5f565b610dcb8185610d6a565b9350610ddb818560208601610d7b565b610de481610da5565b840191505092915050565b60006020820190508181036000830152610e098184610db6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4182610e16565b9050919050565b610e5181610e36565b8114610e5c57600080fd5b50565b600081359050610e6e81610e48565b92915050565b6000819050919050565b610e8781610e74565b8114610e9257600080fd5b50565b600081359050610ea481610e7e565b92915050565b60008060408385031215610ec157610ec0610e11565b5b6000610ecf85828601610e5f565b9250506020610ee085828601610e95565b9150509250929050565b60008115159050919050565b610eff81610eea565b82525050565b6000602082019050610f1a6000830184610ef6565b92915050565b610f2981610e74565b82525050565b6000602082019050610f446000830184610f20565b92915050565b600080600060608486031215610f6357610f62610e11565b5b6000610f7186828701610e5f565b9350506020610f8286828701610e5f565b9250506040610f9386828701610e95565b9150509250925092565b600060ff82169050919050565b610fb381610f9d565b82525050565b6000602082019050610fce6000830184610faa565b92915050565b600060208284031215610fea57610fe9610e11565b5b6000610ff884828501610e5f565b91505092915050565b61100a81610e36565b82525050565b60006020820190506110256000830184611001565b92915050565b6000806040838503121561104257611041610e11565b5b600061105085828601610e5f565b925050602061106185828601610e5f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b257607f821691505b6020821081036110c5576110c461106b565b5b50919050565b60006060820190506110e06000830186611001565b6110ed6020830185610f20565b6110fa6040830184610f20565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113c82610e74565b915061114783610e74565b925082820190508082111561115f5761115e611102565b5b9291505056fea264697066735822122058639067ad72ba310e122a047c6544264afb02579bf33dc40d935d0c3dc3114b64736f6c634300081e0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x18CC CODESIZE SUB DUP1 PUSH2 0x18CC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x37A JUMP JUMPDEST DUP1 DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x44 SWAP2 SWAP1 PUSH2 0x626 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x626 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8 DUP2 PUSH2 0xE1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0x722 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x20E DUP3 PUSH2 0x1C5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22D JUMPI PUSH2 0x22C PUSH2 0x1D6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240 PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x24C DUP3 DUP3 PUSH2 0x205 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x26C JUMPI PUSH2 0x26B PUSH2 0x1D6 JUMP JUMPDEST JUMPDEST PUSH2 0x275 DUP3 PUSH2 0x1C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF PUSH2 0x2BA DUP5 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2DB JUMPI PUSH2 0x2DA PUSH2 0x1C0 JUMP JUMPDEST JUMPDEST PUSH2 0x2E6 DUP5 DUP3 DUP6 PUSH2 0x282 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x1BB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x313 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347 DUP3 PUSH2 0x31C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x357 DUP2 PUSH2 0x33C JUMP JUMPDEST DUP2 EQ PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x374 DUP2 PUSH2 0x34E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x393 JUMPI PUSH2 0x392 PUSH2 0x1B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B1 JUMPI PUSH2 0x3B0 PUSH2 0x1B6 JUMP JUMPDEST JUMPDEST PUSH2 0x3BD DUP7 DUP3 DUP8 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DE JUMPI PUSH2 0x3DD PUSH2 0x1B6 JUMP JUMPDEST JUMPDEST PUSH2 0x3EA DUP7 DUP3 DUP8 ADD PUSH2 0x2EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3FB DUP7 DUP3 DUP8 ADD PUSH2 0x365 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x457 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x46A JUMPI PUSH2 0x469 PUSH2 0x410 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4D2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x4DC DUP7 DUP4 PUSH2 0x495 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x523 PUSH2 0x51E PUSH2 0x519 DUP5 PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53D DUP4 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x551 PUSH2 0x549 DUP3 PUSH2 0x52A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4A2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x566 PUSH2 0x559 JUMP JUMPDEST PUSH2 0x571 DUP2 DUP5 DUP5 PUSH2 0x534 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x595 JUMPI PUSH2 0x58A PUSH1 0x0 DUP3 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x577 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5AB DUP2 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x5B4 DUP5 PUSH2 0x485 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5C3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5D7 PUSH2 0x5CF DUP6 PUSH2 0x485 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x576 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5DF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x616 DUP4 DUP4 PUSH2 0x5EC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x62F DUP3 PUSH2 0x405 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x648 JUMPI PUSH2 0x647 PUSH2 0x1D6 JUMP JUMPDEST JUMPDEST PUSH2 0x652 DUP3 SLOAD PUSH2 0x43F JUMP JUMPDEST PUSH2 0x65D DUP3 DUP3 DUP6 PUSH2 0x599 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x690 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x67E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x688 DUP6 DUP3 PUSH2 0x60A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x69E DUP7 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6C6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6A1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6E3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6DF PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5EC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x701 DUP2 PUSH2 0x33C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x71C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x119B DUP1 PUSH2 0x731 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x794 JUMP JUMPDEST PUSH2 0x3A5 DUP3 DUP3 PUSH2 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x0 PUSH2 0x89D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CC PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP2 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x89D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x963 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x68A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x699 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x963 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x712 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x784 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78F DUP4 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0x5F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7BA PUSH2 0x405 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x819 JUMPI PUSH2 0x7DD PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x899 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA47 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB34 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCF5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD52 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD99 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC1 DUP3 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xDCB DUP2 DUP6 PUSH2 0xD6A JUMP JUMPDEST SWAP4 POP PUSH2 0xDDB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE09 DUP2 DUP5 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE41 DUP3 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE51 DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6E DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE87 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP2 EQ PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA4 DUP2 PUSH2 0xE7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH2 0xEC0 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE0 DUP6 DUP3 DUP7 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFF DUP2 PUSH2 0xEEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF29 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF82 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF93 DUP7 DUP3 DUP8 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB3 DUP2 PUSH2 0xF9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH2 0xFE9 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF8 DUP5 DUP3 DUP6 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100A DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1025 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1041 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1050 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1061 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0x106B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10E0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x10ED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x10FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113C DUP3 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0x1147 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x115F JUMPI PUSH2 0x115E PUSH2 0x1102 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH4 0x9067AD72 0xBA BALANCE 0xE SLT 0x2A DIV PUSH29 0x6544264AFB02579BF33DC40D935D0C3DC3114B64736F6C634300081E00 CALLER ","sourceMap":"175:260:27:-:0;;;221:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;319:6;297:4;303:6;1656:5:7;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;221:107:27;;;175:260;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:30:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:248::-;1692:1;1702:113;1716:6;1713:1;1710:13;1702:113;;;1801:1;1796:3;1792:11;1786:18;1782:1;1777:3;1773:11;1766:39;1738:2;1735:1;1731:10;1726:15;;1702:113;;;1849:1;1840:6;1835:3;1831:16;1824:27;1672:186;1610:248;;;:::o;1864:434::-;1953:5;1978:66;1994:49;2036:6;1994:49;:::i;:::-;1978:66;:::i;:::-;1969:75;;2067:6;2060:5;2053:21;2105:4;2098:5;2094:16;2143:3;2134:6;2129:3;2125:16;2122:25;2119:112;;;2150:79;;:::i;:::-;2119:112;2240:52;2285:6;2280:3;2275;2240:52;:::i;:::-;1959:339;1864:434;;;;;:::o;2318:355::-;2385:5;2434:3;2427:4;2419:6;2415:17;2411:27;2401:122;;2442:79;;:::i;:::-;2401:122;2552:6;2546:13;2577:90;2663:3;2655:6;2648:4;2640:6;2636:17;2577:90;:::i;:::-;2568:99;;2391:282;2318:355;;;;:::o;2679:126::-;2716:7;2756:42;2749:5;2745:54;2734:65;;2679:126;;;:::o;2811:96::-;2848:7;2877:24;2895:5;2877:24;:::i;:::-;2866:35;;2811:96;;;:::o;2913:122::-;2986:24;3004:5;2986:24;:::i;:::-;2979:5;2976:35;2966:63;;3025:1;3022;3015:12;2966:63;2913:122;:::o;3041:143::-;3098:5;3129:6;3123:13;3114:22;;3145:33;3172:5;3145:33;:::i;:::-;3041:143;;;;:::o;3190:1009::-;3298:6;3306;3314;3363:2;3351:9;3342:7;3338:23;3334:32;3331:119;;;3369:79;;:::i;:::-;3331:119;3510:1;3499:9;3495:17;3489:24;3540:18;3532:6;3529:30;3526:117;;;3562:79;;:::i;:::-;3526:117;3667:74;3733:7;3724:6;3713:9;3709:22;3667:74;:::i;:::-;3657:84;;3460:291;3811:2;3800:9;3796:18;3790:25;3842:18;3834:6;3831:30;3828:117;;;3864:79;;:::i;:::-;3828:117;3969:74;4035:7;4026:6;4015:9;4011:22;3969:74;:::i;:::-;3959:84;;3761:292;4092:2;4118:64;4174:7;4165:6;4154:9;4150:22;4118:64;:::i;:::-;4108:74;;4063:129;3190:1009;;;;;:::o;4205:99::-;4257:6;4291:5;4285:12;4275:22;;4205:99;;;:::o;4310:180::-;4358:77;4355:1;4348:88;4455:4;4452:1;4445:15;4479:4;4476:1;4469:15;4496:320;4540:6;4577:1;4571:4;4567:12;4557:22;;4624:1;4618:4;4614:12;4645:18;4635:81;;4701:4;4693:6;4689:17;4679:27;;4635:81;4763:2;4755:6;4752:14;4732:18;4729:38;4726:84;;4782:18;;:::i;:::-;4726:84;4547:269;4496:320;;;:::o;4822:141::-;4871:4;4894:3;4886:11;;4917:3;4914:1;4907:14;4951:4;4948:1;4938:18;4930:26;;4822:141;;;:::o;4969:93::-;5006:6;5053:2;5048;5041:5;5037:14;5033:23;5023:33;;4969:93;;;:::o;5068:107::-;5112:8;5162:5;5156:4;5152:16;5131:37;;5068:107;;;;:::o;5181:393::-;5250:6;5300:1;5288:10;5284:18;5323:97;5353:66;5342:9;5323:97;:::i;:::-;5441:39;5471:8;5460:9;5441:39;:::i;:::-;5429:51;;5513:4;5509:9;5502:5;5498:21;5489:30;;5562:4;5552:8;5548:19;5541:5;5538:30;5528:40;;5257:317;;5181:393;;;;;:::o;5580:77::-;5617:7;5646:5;5635:16;;5580:77;;;:::o;5663:60::-;5691:3;5712:5;5705:12;;5663:60;;;:::o;5729:142::-;5779:9;5812:53;5830:34;5839:24;5857:5;5839:24;:::i;:::-;5830:34;:::i;:::-;5812:53;:::i;:::-;5799:66;;5729:142;;;:::o;5877:75::-;5920:3;5941:5;5934:12;;5877:75;;;:::o;5958:269::-;6068:39;6099:7;6068:39;:::i;:::-;6129:91;6178:41;6202:16;6178:41;:::i;:::-;6170:6;6163:4;6157:11;6129:91;:::i;:::-;6123:4;6116:105;6034:193;5958:269;;;:::o;6233:73::-;6278:3;6233:73;:::o;6312:189::-;6389:32;;:::i;:::-;6430:65;6488:6;6480;6474:4;6430:65;:::i;:::-;6365:136;6312:189;;:::o;6507:186::-;6567:120;6584:3;6577:5;6574:14;6567:120;;;6638:39;6675:1;6668:5;6638:39;:::i;:::-;6611:1;6604:5;6600:13;6591:22;;6567:120;;;6507:186;;:::o;6699:543::-;6800:2;6795:3;6792:11;6789:446;;;6834:38;6866:5;6834:38;:::i;:::-;6918:29;6936:10;6918:29;:::i;:::-;6908:8;6904:44;7101:2;7089:10;7086:18;7083:49;;;7122:8;7107:23;;7083:49;7145:80;7201:22;7219:3;7201:22;:::i;:::-;7191:8;7187:37;7174:11;7145:80;:::i;:::-;6804:431;;6789:446;6699:543;;;:::o;7248:117::-;7302:8;7352:5;7346:4;7342:16;7321:37;;7248:117;;;;:::o;7371:169::-;7415:6;7448:51;7496:1;7492:6;7484:5;7481:1;7477:13;7448:51;:::i;:::-;7444:56;7529:4;7523;7519:15;7509:25;;7422:118;7371:169;;;;:::o;7545:295::-;7621:4;7767:29;7792:3;7786:4;7767:29;:::i;:::-;7759:37;;7829:3;7826:1;7822:11;7816:4;7813:21;7805:29;;7545:295;;;;:::o;7845:1395::-;7962:37;7995:3;7962:37;:::i;:::-;8064:18;8056:6;8053:30;8050:56;;;8086:18;;:::i;:::-;8050:56;8130:38;8162:4;8156:11;8130:38;:::i;:::-;8215:67;8275:6;8267;8261:4;8215:67;:::i;:::-;8309:1;8333:4;8320:17;;8365:2;8357:6;8354:14;8382:1;8377:618;;;;9039:1;9056:6;9053:77;;;9105:9;9100:3;9096:19;9090:26;9081:35;;9053:77;9156:67;9216:6;9209:5;9156:67;:::i;:::-;9150:4;9143:81;9012:222;8347:887;;8377:618;8429:4;8425:9;8417:6;8413:22;8463:37;8495:4;8463:37;:::i;:::-;8522:1;8536:208;8550:7;8547:1;8544:14;8536:208;;;8629:9;8624:3;8620:19;8614:26;8606:6;8599:42;8680:1;8672:6;8668:14;8658:24;;8727:2;8716:9;8712:18;8699:31;;8573:4;8570:1;8566:12;8561:17;;8536:208;;;8772:6;8763:7;8760:19;8757:179;;;8830:9;8825:3;8821:19;8815:26;8873:48;8915:4;8907:6;8903:17;8892:9;8873:48;:::i;:::-;8865:6;8858:64;8780:156;8757:179;8982:1;8978;8970:6;8966:14;8962:22;8956:4;8949:36;8384:611;;;8347:887;;7937:1303;;;7845:1395;;:::o;9246:118::-;9333:24;9351:5;9333:24;:::i;:::-;9328:3;9321:37;9246:118;;:::o;9370:222::-;9463:4;9501:2;9490:9;9486:18;9478:26;;9514:71;9582:1;9571:9;9567:17;9558:6;9514:71;:::i;:::-;9370:222;;;;:::o;175:260:27:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1942":{"entryPoint":1529,"id":1942,"parameterSlots":3,"returnSlots":0},"@_approve_2002":{"entryPoint":2403,"id":2002,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":1940,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_1891":{"entryPoint":2075,"id":1891,"parameterSlots":2,"returnSlots":0},"@_msgSender_4374":{"entryPoint":1521,"id":4374,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2050":{"entryPoint":1547,"id":2050,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2205,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_1781":{"entryPoint":1696,"id":1781,"parameterSlots":3,"returnSlots":0},"@_update_1858":{"entryPoint":2874,"id":1858,"parameterSlots":3,"returnSlots":0},"@allowance_1678":{"entryPoint":1252,"id":1678,"parameterSlots":2,"returnSlots":1},"@approve_1702":{"entryPoint":814,"id":1702,"parameterSlots":2,"returnSlots":1},"@balanceOf_1637":{"entryPoint":937,"id":1637,"parameterSlots":1,"returnSlots":1},"@decimals_1615":{"entryPoint":906,"id":1615,"parameterSlots":0,"returnSlots":1},"@mint_9706":{"entryPoint":915,"id":9706,"parameterSlots":2,"returnSlots":0},"@name_1597":{"entryPoint":668,"id":1597,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":1029,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1009,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_1606":{"entryPoint":1071,"id":1606,"parameterSlots":0,"returnSlots":1},"@totalSupply_1624":{"entryPoint":849,"id":1624,"parameterSlots":0,"returnSlots":1},"@transferFrom_1734":{"entryPoint":859,"id":1734,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1387,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_1661":{"entryPoint":1217,"id":1661,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4139,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3914,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3754,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4097,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3830,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3872,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4010,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4299,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4025,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3423,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3434,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4401,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3638,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3818,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3606,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3700,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3997,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3451,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4250,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4354,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4203,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3601,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3493,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3656,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3710,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7362:30","nodeType":"YulBlock","src":"0:7362:30","statements":[{"body":{"nativeSrc":"66:40:30","nodeType":"YulBlock","src":"66:40:30","statements":[{"nativeSrc":"77:22:30","nodeType":"YulAssignment","src":"77:22:30","value":{"arguments":[{"name":"value","nativeSrc":"93:5:30","nodeType":"YulIdentifier","src":"93:5:30"}],"functionName":{"name":"mload","nativeSrc":"87:5:30","nodeType":"YulIdentifier","src":"87:5:30"},"nativeSrc":"87:12:30","nodeType":"YulFunctionCall","src":"87:12:30"},"variableNames":[{"name":"length","nativeSrc":"77:6:30","nodeType":"YulIdentifier","src":"77:6:30"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:30","nodeType":"YulTypedName","src":"49:5:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:30","nodeType":"YulTypedName","src":"59:6:30","type":""}],"src":"7:99:30"},{"body":{"nativeSrc":"208:73:30","nodeType":"YulBlock","src":"208:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:30","nodeType":"YulIdentifier","src":"225:3:30"},{"name":"length","nativeSrc":"230:6:30","nodeType":"YulIdentifier","src":"230:6:30"}],"functionName":{"name":"mstore","nativeSrc":"218:6:30","nodeType":"YulIdentifier","src":"218:6:30"},"nativeSrc":"218:19:30","nodeType":"YulFunctionCall","src":"218:19:30"},"nativeSrc":"218:19:30","nodeType":"YulExpressionStatement","src":"218:19:30"},{"nativeSrc":"246:29:30","nodeType":"YulAssignment","src":"246:29:30","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:30","nodeType":"YulIdentifier","src":"265:3:30"},{"kind":"number","nativeSrc":"270:4:30","nodeType":"YulLiteral","src":"270:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:30","nodeType":"YulIdentifier","src":"261:3:30"},"nativeSrc":"261:14:30","nodeType":"YulFunctionCall","src":"261:14:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:30","nodeType":"YulIdentifier","src":"246:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:30","nodeType":"YulTypedName","src":"180:3:30","type":""},{"name":"length","nativeSrc":"185:6:30","nodeType":"YulTypedName","src":"185:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:30","nodeType":"YulTypedName","src":"196:11:30","type":""}],"src":"112:169:30"},{"body":{"nativeSrc":"349:186:30","nodeType":"YulBlock","src":"349:186:30","statements":[{"nativeSrc":"360:10:30","nodeType":"YulVariableDeclaration","src":"360:10:30","value":{"kind":"number","nativeSrc":"369:1:30","nodeType":"YulLiteral","src":"369:1:30","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:30","nodeType":"YulTypedName","src":"364:1:30","type":""}]},{"body":{"nativeSrc":"429:63:30","nodeType":"YulBlock","src":"429:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:30","nodeType":"YulIdentifier","src":"454:3:30"},{"name":"i","nativeSrc":"459:1:30","nodeType":"YulIdentifier","src":"459:1:30"}],"functionName":{"name":"add","nativeSrc":"450:3:30","nodeType":"YulIdentifier","src":"450:3:30"},"nativeSrc":"450:11:30","nodeType":"YulFunctionCall","src":"450:11:30"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:30","nodeType":"YulIdentifier","src":"473:3:30"},{"name":"i","nativeSrc":"478:1:30","nodeType":"YulIdentifier","src":"478:1:30"}],"functionName":{"name":"add","nativeSrc":"469:3:30","nodeType":"YulIdentifier","src":"469:3:30"},"nativeSrc":"469:11:30","nodeType":"YulFunctionCall","src":"469:11:30"}],"functionName":{"name":"mload","nativeSrc":"463:5:30","nodeType":"YulIdentifier","src":"463:5:30"},"nativeSrc":"463:18:30","nodeType":"YulFunctionCall","src":"463:18:30"}],"functionName":{"name":"mstore","nativeSrc":"443:6:30","nodeType":"YulIdentifier","src":"443:6:30"},"nativeSrc":"443:39:30","nodeType":"YulFunctionCall","src":"443:39:30"},"nativeSrc":"443:39:30","nodeType":"YulExpressionStatement","src":"443:39:30"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:30","nodeType":"YulIdentifier","src":"390:1:30"},{"name":"length","nativeSrc":"393:6:30","nodeType":"YulIdentifier","src":"393:6:30"}],"functionName":{"name":"lt","nativeSrc":"387:2:30","nodeType":"YulIdentifier","src":"387:2:30"},"nativeSrc":"387:13:30","nodeType":"YulFunctionCall","src":"387:13:30"},"nativeSrc":"379:113:30","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:30","nodeType":"YulBlock","src":"401:19:30","statements":[{"nativeSrc":"403:15:30","nodeType":"YulAssignment","src":"403:15:30","value":{"arguments":[{"name":"i","nativeSrc":"412:1:30","nodeType":"YulIdentifier","src":"412:1:30"},{"kind":"number","nativeSrc":"415:2:30","nodeType":"YulLiteral","src":"415:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:30","nodeType":"YulIdentifier","src":"408:3:30"},"nativeSrc":"408:10:30","nodeType":"YulFunctionCall","src":"408:10:30"},"variableNames":[{"name":"i","nativeSrc":"403:1:30","nodeType":"YulIdentifier","src":"403:1:30"}]}]},"pre":{"nativeSrc":"383:3:30","nodeType":"YulBlock","src":"383:3:30","statements":[]},"src":"379:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:30","nodeType":"YulIdentifier","src":"512:3:30"},{"name":"length","nativeSrc":"517:6:30","nodeType":"YulIdentifier","src":"517:6:30"}],"functionName":{"name":"add","nativeSrc":"508:3:30","nodeType":"YulIdentifier","src":"508:3:30"},"nativeSrc":"508:16:30","nodeType":"YulFunctionCall","src":"508:16:30"},{"kind":"number","nativeSrc":"526:1:30","nodeType":"YulLiteral","src":"526:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:30","nodeType":"YulIdentifier","src":"501:6:30"},"nativeSrc":"501:27:30","nodeType":"YulFunctionCall","src":"501:27:30"},"nativeSrc":"501:27:30","nodeType":"YulExpressionStatement","src":"501:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:30","nodeType":"YulTypedName","src":"331:3:30","type":""},{"name":"dst","nativeSrc":"336:3:30","nodeType":"YulTypedName","src":"336:3:30","type":""},{"name":"length","nativeSrc":"341:6:30","nodeType":"YulTypedName","src":"341:6:30","type":""}],"src":"287:248:30"},{"body":{"nativeSrc":"589:54:30","nodeType":"YulBlock","src":"589:54:30","statements":[{"nativeSrc":"599:38:30","nodeType":"YulAssignment","src":"599:38:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:30","nodeType":"YulIdentifier","src":"617:5:30"},{"kind":"number","nativeSrc":"624:2:30","nodeType":"YulLiteral","src":"624:2:30","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:30","nodeType":"YulIdentifier","src":"613:3:30"},"nativeSrc":"613:14:30","nodeType":"YulFunctionCall","src":"613:14:30"},{"arguments":[{"kind":"number","nativeSrc":"633:2:30","nodeType":"YulLiteral","src":"633:2:30","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:30","nodeType":"YulIdentifier","src":"629:3:30"},"nativeSrc":"629:7:30","nodeType":"YulFunctionCall","src":"629:7:30"}],"functionName":{"name":"and","nativeSrc":"609:3:30","nodeType":"YulIdentifier","src":"609:3:30"},"nativeSrc":"609:28:30","nodeType":"YulFunctionCall","src":"609:28:30"},"variableNames":[{"name":"result","nativeSrc":"599:6:30","nodeType":"YulIdentifier","src":"599:6:30"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:30","nodeType":"YulTypedName","src":"572:5:30","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:30","nodeType":"YulTypedName","src":"582:6:30","type":""}],"src":"541:102:30"},{"body":{"nativeSrc":"741:285:30","nodeType":"YulBlock","src":"741:285:30","statements":[{"nativeSrc":"751:53:30","nodeType":"YulVariableDeclaration","src":"751:53:30","value":{"arguments":[{"name":"value","nativeSrc":"798:5:30","nodeType":"YulIdentifier","src":"798:5:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:30","nodeType":"YulIdentifier","src":"765:32:30"},"nativeSrc":"765:39:30","nodeType":"YulFunctionCall","src":"765:39:30"},"variables":[{"name":"length","nativeSrc":"755:6:30","nodeType":"YulTypedName","src":"755:6:30","type":""}]},{"nativeSrc":"813:78:30","nodeType":"YulAssignment","src":"813:78:30","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:30","nodeType":"YulIdentifier","src":"879:3:30"},{"name":"length","nativeSrc":"884:6:30","nodeType":"YulIdentifier","src":"884:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:30","nodeType":"YulIdentifier","src":"820:58:30"},"nativeSrc":"820:71:30","nodeType":"YulFunctionCall","src":"820:71:30"},"variableNames":[{"name":"pos","nativeSrc":"813:3:30","nodeType":"YulIdentifier","src":"813:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:30","nodeType":"YulIdentifier","src":"939:5:30"},{"kind":"number","nativeSrc":"946:4:30","nodeType":"YulLiteral","src":"946:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:30","nodeType":"YulIdentifier","src":"935:3:30"},"nativeSrc":"935:16:30","nodeType":"YulFunctionCall","src":"935:16:30"},{"name":"pos","nativeSrc":"953:3:30","nodeType":"YulIdentifier","src":"953:3:30"},{"name":"length","nativeSrc":"958:6:30","nodeType":"YulIdentifier","src":"958:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:30","nodeType":"YulIdentifier","src":"900:34:30"},"nativeSrc":"900:65:30","nodeType":"YulFunctionCall","src":"900:65:30"},"nativeSrc":"900:65:30","nodeType":"YulExpressionStatement","src":"900:65:30"},{"nativeSrc":"974:46:30","nodeType":"YulAssignment","src":"974:46:30","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:30","nodeType":"YulIdentifier","src":"985:3:30"},{"arguments":[{"name":"length","nativeSrc":"1012:6:30","nodeType":"YulIdentifier","src":"1012:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:30","nodeType":"YulIdentifier","src":"990:21:30"},"nativeSrc":"990:29:30","nodeType":"YulFunctionCall","src":"990:29:30"}],"functionName":{"name":"add","nativeSrc":"981:3:30","nodeType":"YulIdentifier","src":"981:3:30"},"nativeSrc":"981:39:30","nodeType":"YulFunctionCall","src":"981:39:30"},"variableNames":[{"name":"end","nativeSrc":"974:3:30","nodeType":"YulIdentifier","src":"974:3:30"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:30","nodeType":"YulTypedName","src":"722:5:30","type":""},{"name":"pos","nativeSrc":"729:3:30","nodeType":"YulTypedName","src":"729:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:30","nodeType":"YulTypedName","src":"737:3:30","type":""}],"src":"649:377:30"},{"body":{"nativeSrc":"1150:195:30","nodeType":"YulBlock","src":"1150:195:30","statements":[{"nativeSrc":"1160:26:30","nodeType":"YulAssignment","src":"1160:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:30","nodeType":"YulIdentifier","src":"1172:9:30"},{"kind":"number","nativeSrc":"1183:2:30","nodeType":"YulLiteral","src":"1183:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:30","nodeType":"YulIdentifier","src":"1168:3:30"},"nativeSrc":"1168:18:30","nodeType":"YulFunctionCall","src":"1168:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:30","nodeType":"YulIdentifier","src":"1160:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:30","nodeType":"YulIdentifier","src":"1207:9:30"},{"kind":"number","nativeSrc":"1218:1:30","nodeType":"YulLiteral","src":"1218:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:30","nodeType":"YulIdentifier","src":"1203:3:30"},"nativeSrc":"1203:17:30","nodeType":"YulFunctionCall","src":"1203:17:30"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:30","nodeType":"YulIdentifier","src":"1226:4:30"},{"name":"headStart","nativeSrc":"1232:9:30","nodeType":"YulIdentifier","src":"1232:9:30"}],"functionName":{"name":"sub","nativeSrc":"1222:3:30","nodeType":"YulIdentifier","src":"1222:3:30"},"nativeSrc":"1222:20:30","nodeType":"YulFunctionCall","src":"1222:20:30"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:30","nodeType":"YulIdentifier","src":"1196:6:30"},"nativeSrc":"1196:47:30","nodeType":"YulFunctionCall","src":"1196:47:30"},"nativeSrc":"1196:47:30","nodeType":"YulExpressionStatement","src":"1196:47:30"},{"nativeSrc":"1252:86:30","nodeType":"YulAssignment","src":"1252:86:30","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:30","nodeType":"YulIdentifier","src":"1324:6:30"},{"name":"tail","nativeSrc":"1333:4:30","nodeType":"YulIdentifier","src":"1333:4:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:30","nodeType":"YulIdentifier","src":"1260:63:30"},"nativeSrc":"1260:78:30","nodeType":"YulFunctionCall","src":"1260:78:30"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:30","nodeType":"YulIdentifier","src":"1252:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:30","nodeType":"YulTypedName","src":"1122:9:30","type":""},{"name":"value0","nativeSrc":"1134:6:30","nodeType":"YulTypedName","src":"1134:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:30","nodeType":"YulTypedName","src":"1145:4:30","type":""}],"src":"1032:313:30"},{"body":{"nativeSrc":"1391:35:30","nodeType":"YulBlock","src":"1391:35:30","statements":[{"nativeSrc":"1401:19:30","nodeType":"YulAssignment","src":"1401:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:30","nodeType":"YulLiteral","src":"1417:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:30","nodeType":"YulIdentifier","src":"1411:5:30"},"nativeSrc":"1411:9:30","nodeType":"YulFunctionCall","src":"1411:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:30","nodeType":"YulIdentifier","src":"1401:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:30","nodeType":"YulTypedName","src":"1384:6:30","type":""}],"src":"1351:75:30"},{"body":{"nativeSrc":"1521:28:30","nodeType":"YulBlock","src":"1521:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:30","nodeType":"YulLiteral","src":"1538:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:30","nodeType":"YulLiteral","src":"1541:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:30","nodeType":"YulIdentifier","src":"1531:6:30"},"nativeSrc":"1531:12:30","nodeType":"YulFunctionCall","src":"1531:12:30"},"nativeSrc":"1531:12:30","nodeType":"YulExpressionStatement","src":"1531:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:30","nodeType":"YulFunctionDefinition","src":"1432:117:30"},{"body":{"nativeSrc":"1644:28:30","nodeType":"YulBlock","src":"1644:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:30","nodeType":"YulLiteral","src":"1661:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:30","nodeType":"YulLiteral","src":"1664:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:30","nodeType":"YulIdentifier","src":"1654:6:30"},"nativeSrc":"1654:12:30","nodeType":"YulFunctionCall","src":"1654:12:30"},"nativeSrc":"1654:12:30","nodeType":"YulExpressionStatement","src":"1654:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:30","nodeType":"YulFunctionDefinition","src":"1555:117:30"},{"body":{"nativeSrc":"1723:81:30","nodeType":"YulBlock","src":"1723:81:30","statements":[{"nativeSrc":"1733:65:30","nodeType":"YulAssignment","src":"1733:65:30","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:30","nodeType":"YulIdentifier","src":"1748:5:30"},{"kind":"number","nativeSrc":"1755:42:30","nodeType":"YulLiteral","src":"1755:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:30","nodeType":"YulIdentifier","src":"1744:3:30"},"nativeSrc":"1744:54:30","nodeType":"YulFunctionCall","src":"1744:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:30","nodeType":"YulIdentifier","src":"1733:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:30","nodeType":"YulTypedName","src":"1705:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:30","nodeType":"YulTypedName","src":"1715:7:30","type":""}],"src":"1678:126:30"},{"body":{"nativeSrc":"1855:51:30","nodeType":"YulBlock","src":"1855:51:30","statements":[{"nativeSrc":"1865:35:30","nodeType":"YulAssignment","src":"1865:35:30","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:30","nodeType":"YulIdentifier","src":"1894:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:30","nodeType":"YulIdentifier","src":"1876:17:30"},"nativeSrc":"1876:24:30","nodeType":"YulFunctionCall","src":"1876:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:30","nodeType":"YulIdentifier","src":"1865:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:30","nodeType":"YulTypedName","src":"1837:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:30","nodeType":"YulTypedName","src":"1847:7:30","type":""}],"src":"1810:96:30"},{"body":{"nativeSrc":"1955:79:30","nodeType":"YulBlock","src":"1955:79:30","statements":[{"body":{"nativeSrc":"2012:16:30","nodeType":"YulBlock","src":"2012:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:30","nodeType":"YulLiteral","src":"2021:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:30","nodeType":"YulLiteral","src":"2024:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:30","nodeType":"YulIdentifier","src":"2014:6:30"},"nativeSrc":"2014:12:30","nodeType":"YulFunctionCall","src":"2014:12:30"},"nativeSrc":"2014:12:30","nodeType":"YulExpressionStatement","src":"2014:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:30","nodeType":"YulIdentifier","src":"1978:5:30"},{"arguments":[{"name":"value","nativeSrc":"2003:5:30","nodeType":"YulIdentifier","src":"2003:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:30","nodeType":"YulIdentifier","src":"1985:17:30"},"nativeSrc":"1985:24:30","nodeType":"YulFunctionCall","src":"1985:24:30"}],"functionName":{"name":"eq","nativeSrc":"1975:2:30","nodeType":"YulIdentifier","src":"1975:2:30"},"nativeSrc":"1975:35:30","nodeType":"YulFunctionCall","src":"1975:35:30"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:30","nodeType":"YulIdentifier","src":"1968:6:30"},"nativeSrc":"1968:43:30","nodeType":"YulFunctionCall","src":"1968:43:30"},"nativeSrc":"1965:63:30","nodeType":"YulIf","src":"1965:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:30","nodeType":"YulTypedName","src":"1948:5:30","type":""}],"src":"1912:122:30"},{"body":{"nativeSrc":"2092:87:30","nodeType":"YulBlock","src":"2092:87:30","statements":[{"nativeSrc":"2102:29:30","nodeType":"YulAssignment","src":"2102:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:30","nodeType":"YulIdentifier","src":"2124:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:30","nodeType":"YulIdentifier","src":"2111:12:30"},"nativeSrc":"2111:20:30","nodeType":"YulFunctionCall","src":"2111:20:30"},"variableNames":[{"name":"value","nativeSrc":"2102:5:30","nodeType":"YulIdentifier","src":"2102:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:30","nodeType":"YulIdentifier","src":"2167:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:30","nodeType":"YulIdentifier","src":"2140:26:30"},"nativeSrc":"2140:33:30","nodeType":"YulFunctionCall","src":"2140:33:30"},"nativeSrc":"2140:33:30","nodeType":"YulExpressionStatement","src":"2140:33:30"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:30","nodeType":"YulTypedName","src":"2070:6:30","type":""},{"name":"end","nativeSrc":"2078:3:30","nodeType":"YulTypedName","src":"2078:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:30","nodeType":"YulTypedName","src":"2086:5:30","type":""}],"src":"2040:139:30"},{"body":{"nativeSrc":"2230:32:30","nodeType":"YulBlock","src":"2230:32:30","statements":[{"nativeSrc":"2240:16:30","nodeType":"YulAssignment","src":"2240:16:30","value":{"name":"value","nativeSrc":"2251:5:30","nodeType":"YulIdentifier","src":"2251:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:30","nodeType":"YulIdentifier","src":"2240:7:30"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:30","nodeType":"YulTypedName","src":"2212:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:30","nodeType":"YulTypedName","src":"2222:7:30","type":""}],"src":"2185:77:30"},{"body":{"nativeSrc":"2311:79:30","nodeType":"YulBlock","src":"2311:79:30","statements":[{"body":{"nativeSrc":"2368:16:30","nodeType":"YulBlock","src":"2368:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:30","nodeType":"YulLiteral","src":"2377:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:30","nodeType":"YulLiteral","src":"2380:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:30","nodeType":"YulIdentifier","src":"2370:6:30"},"nativeSrc":"2370:12:30","nodeType":"YulFunctionCall","src":"2370:12:30"},"nativeSrc":"2370:12:30","nodeType":"YulExpressionStatement","src":"2370:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:30","nodeType":"YulIdentifier","src":"2334:5:30"},{"arguments":[{"name":"value","nativeSrc":"2359:5:30","nodeType":"YulIdentifier","src":"2359:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:30","nodeType":"YulIdentifier","src":"2341:17:30"},"nativeSrc":"2341:24:30","nodeType":"YulFunctionCall","src":"2341:24:30"}],"functionName":{"name":"eq","nativeSrc":"2331:2:30","nodeType":"YulIdentifier","src":"2331:2:30"},"nativeSrc":"2331:35:30","nodeType":"YulFunctionCall","src":"2331:35:30"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:30","nodeType":"YulIdentifier","src":"2324:6:30"},"nativeSrc":"2324:43:30","nodeType":"YulFunctionCall","src":"2324:43:30"},"nativeSrc":"2321:63:30","nodeType":"YulIf","src":"2321:63:30"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:30","nodeType":"YulTypedName","src":"2304:5:30","type":""}],"src":"2268:122:30"},{"body":{"nativeSrc":"2448:87:30","nodeType":"YulBlock","src":"2448:87:30","statements":[{"nativeSrc":"2458:29:30","nodeType":"YulAssignment","src":"2458:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:30","nodeType":"YulIdentifier","src":"2480:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:30","nodeType":"YulIdentifier","src":"2467:12:30"},"nativeSrc":"2467:20:30","nodeType":"YulFunctionCall","src":"2467:20:30"},"variableNames":[{"name":"value","nativeSrc":"2458:5:30","nodeType":"YulIdentifier","src":"2458:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:30","nodeType":"YulIdentifier","src":"2523:5:30"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:30","nodeType":"YulIdentifier","src":"2496:26:30"},"nativeSrc":"2496:33:30","nodeType":"YulFunctionCall","src":"2496:33:30"},"nativeSrc":"2496:33:30","nodeType":"YulExpressionStatement","src":"2496:33:30"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:30","nodeType":"YulTypedName","src":"2426:6:30","type":""},{"name":"end","nativeSrc":"2434:3:30","nodeType":"YulTypedName","src":"2434:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:30","nodeType":"YulTypedName","src":"2442:5:30","type":""}],"src":"2396:139:30"},{"body":{"nativeSrc":"2624:391:30","nodeType":"YulBlock","src":"2624:391:30","statements":[{"body":{"nativeSrc":"2670:83:30","nodeType":"YulBlock","src":"2670:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:30","nodeType":"YulIdentifier","src":"2672:77:30"},"nativeSrc":"2672:79:30","nodeType":"YulFunctionCall","src":"2672:79:30"},"nativeSrc":"2672:79:30","nodeType":"YulExpressionStatement","src":"2672:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:30","nodeType":"YulIdentifier","src":"2645:7:30"},{"name":"headStart","nativeSrc":"2654:9:30","nodeType":"YulIdentifier","src":"2654:9:30"}],"functionName":{"name":"sub","nativeSrc":"2641:3:30","nodeType":"YulIdentifier","src":"2641:3:30"},"nativeSrc":"2641:23:30","nodeType":"YulFunctionCall","src":"2641:23:30"},{"kind":"number","nativeSrc":"2666:2:30","nodeType":"YulLiteral","src":"2666:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:30","nodeType":"YulIdentifier","src":"2637:3:30"},"nativeSrc":"2637:32:30","nodeType":"YulFunctionCall","src":"2637:32:30"},"nativeSrc":"2634:119:30","nodeType":"YulIf","src":"2634:119:30"},{"nativeSrc":"2763:117:30","nodeType":"YulBlock","src":"2763:117:30","statements":[{"nativeSrc":"2778:15:30","nodeType":"YulVariableDeclaration","src":"2778:15:30","value":{"kind":"number","nativeSrc":"2792:1:30","nodeType":"YulLiteral","src":"2792:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:30","nodeType":"YulTypedName","src":"2782:6:30","type":""}]},{"nativeSrc":"2807:63:30","nodeType":"YulAssignment","src":"2807:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:30","nodeType":"YulIdentifier","src":"2842:9:30"},{"name":"offset","nativeSrc":"2853:6:30","nodeType":"YulIdentifier","src":"2853:6:30"}],"functionName":{"name":"add","nativeSrc":"2838:3:30","nodeType":"YulIdentifier","src":"2838:3:30"},"nativeSrc":"2838:22:30","nodeType":"YulFunctionCall","src":"2838:22:30"},{"name":"dataEnd","nativeSrc":"2862:7:30","nodeType":"YulIdentifier","src":"2862:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:30","nodeType":"YulIdentifier","src":"2817:20:30"},"nativeSrc":"2817:53:30","nodeType":"YulFunctionCall","src":"2817:53:30"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:30","nodeType":"YulIdentifier","src":"2807:6:30"}]}]},{"nativeSrc":"2890:118:30","nodeType":"YulBlock","src":"2890:118:30","statements":[{"nativeSrc":"2905:16:30","nodeType":"YulVariableDeclaration","src":"2905:16:30","value":{"kind":"number","nativeSrc":"2919:2:30","nodeType":"YulLiteral","src":"2919:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:30","nodeType":"YulTypedName","src":"2909:6:30","type":""}]},{"nativeSrc":"2935:63:30","nodeType":"YulAssignment","src":"2935:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:30","nodeType":"YulIdentifier","src":"2970:9:30"},{"name":"offset","nativeSrc":"2981:6:30","nodeType":"YulIdentifier","src":"2981:6:30"}],"functionName":{"name":"add","nativeSrc":"2966:3:30","nodeType":"YulIdentifier","src":"2966:3:30"},"nativeSrc":"2966:22:30","nodeType":"YulFunctionCall","src":"2966:22:30"},{"name":"dataEnd","nativeSrc":"2990:7:30","nodeType":"YulIdentifier","src":"2990:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:30","nodeType":"YulIdentifier","src":"2945:20:30"},"nativeSrc":"2945:53:30","nodeType":"YulFunctionCall","src":"2945:53:30"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:30","nodeType":"YulIdentifier","src":"2935:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:30","nodeType":"YulTypedName","src":"2586:9:30","type":""},{"name":"dataEnd","nativeSrc":"2597:7:30","nodeType":"YulTypedName","src":"2597:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:30","nodeType":"YulTypedName","src":"2609:6:30","type":""},{"name":"value1","nativeSrc":"2617:6:30","nodeType":"YulTypedName","src":"2617:6:30","type":""}],"src":"2541:474:30"},{"body":{"nativeSrc":"3063:48:30","nodeType":"YulBlock","src":"3063:48:30","statements":[{"nativeSrc":"3073:32:30","nodeType":"YulAssignment","src":"3073:32:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:30","nodeType":"YulIdentifier","src":"3098:5:30"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:30","nodeType":"YulIdentifier","src":"3091:6:30"},"nativeSrc":"3091:13:30","nodeType":"YulFunctionCall","src":"3091:13:30"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:30","nodeType":"YulIdentifier","src":"3084:6:30"},"nativeSrc":"3084:21:30","nodeType":"YulFunctionCall","src":"3084:21:30"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:30","nodeType":"YulIdentifier","src":"3073:7:30"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:30","nodeType":"YulTypedName","src":"3045:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:30","nodeType":"YulTypedName","src":"3055:7:30","type":""}],"src":"3021:90:30"},{"body":{"nativeSrc":"3176:50:30","nodeType":"YulBlock","src":"3176:50:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:30","nodeType":"YulIdentifier","src":"3193:3:30"},{"arguments":[{"name":"value","nativeSrc":"3213:5:30","nodeType":"YulIdentifier","src":"3213:5:30"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:30","nodeType":"YulIdentifier","src":"3198:14:30"},"nativeSrc":"3198:21:30","nodeType":"YulFunctionCall","src":"3198:21:30"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:30","nodeType":"YulIdentifier","src":"3186:6:30"},"nativeSrc":"3186:34:30","nodeType":"YulFunctionCall","src":"3186:34:30"},"nativeSrc":"3186:34:30","nodeType":"YulExpressionStatement","src":"3186:34:30"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:30","nodeType":"YulTypedName","src":"3164:5:30","type":""},{"name":"pos","nativeSrc":"3171:3:30","nodeType":"YulTypedName","src":"3171:3:30","type":""}],"src":"3117:109:30"},{"body":{"nativeSrc":"3324:118:30","nodeType":"YulBlock","src":"3324:118:30","statements":[{"nativeSrc":"3334:26:30","nodeType":"YulAssignment","src":"3334:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:30","nodeType":"YulIdentifier","src":"3346:9:30"},{"kind":"number","nativeSrc":"3357:2:30","nodeType":"YulLiteral","src":"3357:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:30","nodeType":"YulIdentifier","src":"3342:3:30"},"nativeSrc":"3342:18:30","nodeType":"YulFunctionCall","src":"3342:18:30"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:30","nodeType":"YulIdentifier","src":"3334:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:30","nodeType":"YulIdentifier","src":"3408:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:30","nodeType":"YulIdentifier","src":"3421:9:30"},{"kind":"number","nativeSrc":"3432:1:30","nodeType":"YulLiteral","src":"3432:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:30","nodeType":"YulIdentifier","src":"3417:3:30"},"nativeSrc":"3417:17:30","nodeType":"YulFunctionCall","src":"3417:17:30"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:30","nodeType":"YulIdentifier","src":"3370:37:30"},"nativeSrc":"3370:65:30","nodeType":"YulFunctionCall","src":"3370:65:30"},"nativeSrc":"3370:65:30","nodeType":"YulExpressionStatement","src":"3370:65:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:30","nodeType":"YulTypedName","src":"3296:9:30","type":""},{"name":"value0","nativeSrc":"3308:6:30","nodeType":"YulTypedName","src":"3308:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:30","nodeType":"YulTypedName","src":"3319:4:30","type":""}],"src":"3232:210:30"},{"body":{"nativeSrc":"3513:53:30","nodeType":"YulBlock","src":"3513:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:30","nodeType":"YulIdentifier","src":"3530:3:30"},{"arguments":[{"name":"value","nativeSrc":"3553:5:30","nodeType":"YulIdentifier","src":"3553:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:30","nodeType":"YulIdentifier","src":"3535:17:30"},"nativeSrc":"3535:24:30","nodeType":"YulFunctionCall","src":"3535:24:30"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:30","nodeType":"YulIdentifier","src":"3523:6:30"},"nativeSrc":"3523:37:30","nodeType":"YulFunctionCall","src":"3523:37:30"},"nativeSrc":"3523:37:30","nodeType":"YulExpressionStatement","src":"3523:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:30","nodeType":"YulTypedName","src":"3501:5:30","type":""},{"name":"pos","nativeSrc":"3508:3:30","nodeType":"YulTypedName","src":"3508:3:30","type":""}],"src":"3448:118:30"},{"body":{"nativeSrc":"3670:124:30","nodeType":"YulBlock","src":"3670:124:30","statements":[{"nativeSrc":"3680:26:30","nodeType":"YulAssignment","src":"3680:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:30","nodeType":"YulIdentifier","src":"3692:9:30"},{"kind":"number","nativeSrc":"3703:2:30","nodeType":"YulLiteral","src":"3703:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:30","nodeType":"YulIdentifier","src":"3688:3:30"},"nativeSrc":"3688:18:30","nodeType":"YulFunctionCall","src":"3688:18:30"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:30","nodeType":"YulIdentifier","src":"3680:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:30","nodeType":"YulIdentifier","src":"3760:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:30","nodeType":"YulIdentifier","src":"3773:9:30"},{"kind":"number","nativeSrc":"3784:1:30","nodeType":"YulLiteral","src":"3784:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:30","nodeType":"YulIdentifier","src":"3769:3:30"},"nativeSrc":"3769:17:30","nodeType":"YulFunctionCall","src":"3769:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:30","nodeType":"YulIdentifier","src":"3716:43:30"},"nativeSrc":"3716:71:30","nodeType":"YulFunctionCall","src":"3716:71:30"},"nativeSrc":"3716:71:30","nodeType":"YulExpressionStatement","src":"3716:71:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:30","nodeType":"YulTypedName","src":"3642:9:30","type":""},{"name":"value0","nativeSrc":"3654:6:30","nodeType":"YulTypedName","src":"3654:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:30","nodeType":"YulTypedName","src":"3665:4:30","type":""}],"src":"3572:222:30"},{"body":{"nativeSrc":"3900:519:30","nodeType":"YulBlock","src":"3900:519:30","statements":[{"body":{"nativeSrc":"3946:83:30","nodeType":"YulBlock","src":"3946:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:30","nodeType":"YulIdentifier","src":"3948:77:30"},"nativeSrc":"3948:79:30","nodeType":"YulFunctionCall","src":"3948:79:30"},"nativeSrc":"3948:79:30","nodeType":"YulExpressionStatement","src":"3948:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:30","nodeType":"YulIdentifier","src":"3921:7:30"},{"name":"headStart","nativeSrc":"3930:9:30","nodeType":"YulIdentifier","src":"3930:9:30"}],"functionName":{"name":"sub","nativeSrc":"3917:3:30","nodeType":"YulIdentifier","src":"3917:3:30"},"nativeSrc":"3917:23:30","nodeType":"YulFunctionCall","src":"3917:23:30"},{"kind":"number","nativeSrc":"3942:2:30","nodeType":"YulLiteral","src":"3942:2:30","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:30","nodeType":"YulIdentifier","src":"3913:3:30"},"nativeSrc":"3913:32:30","nodeType":"YulFunctionCall","src":"3913:32:30"},"nativeSrc":"3910:119:30","nodeType":"YulIf","src":"3910:119:30"},{"nativeSrc":"4039:117:30","nodeType":"YulBlock","src":"4039:117:30","statements":[{"nativeSrc":"4054:15:30","nodeType":"YulVariableDeclaration","src":"4054:15:30","value":{"kind":"number","nativeSrc":"4068:1:30","nodeType":"YulLiteral","src":"4068:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:30","nodeType":"YulTypedName","src":"4058:6:30","type":""}]},{"nativeSrc":"4083:63:30","nodeType":"YulAssignment","src":"4083:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:30","nodeType":"YulIdentifier","src":"4118:9:30"},{"name":"offset","nativeSrc":"4129:6:30","nodeType":"YulIdentifier","src":"4129:6:30"}],"functionName":{"name":"add","nativeSrc":"4114:3:30","nodeType":"YulIdentifier","src":"4114:3:30"},"nativeSrc":"4114:22:30","nodeType":"YulFunctionCall","src":"4114:22:30"},{"name":"dataEnd","nativeSrc":"4138:7:30","nodeType":"YulIdentifier","src":"4138:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:30","nodeType":"YulIdentifier","src":"4093:20:30"},"nativeSrc":"4093:53:30","nodeType":"YulFunctionCall","src":"4093:53:30"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:30","nodeType":"YulIdentifier","src":"4083:6:30"}]}]},{"nativeSrc":"4166:118:30","nodeType":"YulBlock","src":"4166:118:30","statements":[{"nativeSrc":"4181:16:30","nodeType":"YulVariableDeclaration","src":"4181:16:30","value":{"kind":"number","nativeSrc":"4195:2:30","nodeType":"YulLiteral","src":"4195:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:30","nodeType":"YulTypedName","src":"4185:6:30","type":""}]},{"nativeSrc":"4211:63:30","nodeType":"YulAssignment","src":"4211:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:30","nodeType":"YulIdentifier","src":"4246:9:30"},{"name":"offset","nativeSrc":"4257:6:30","nodeType":"YulIdentifier","src":"4257:6:30"}],"functionName":{"name":"add","nativeSrc":"4242:3:30","nodeType":"YulIdentifier","src":"4242:3:30"},"nativeSrc":"4242:22:30","nodeType":"YulFunctionCall","src":"4242:22:30"},{"name":"dataEnd","nativeSrc":"4266:7:30","nodeType":"YulIdentifier","src":"4266:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:30","nodeType":"YulIdentifier","src":"4221:20:30"},"nativeSrc":"4221:53:30","nodeType":"YulFunctionCall","src":"4221:53:30"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:30","nodeType":"YulIdentifier","src":"4211:6:30"}]}]},{"nativeSrc":"4294:118:30","nodeType":"YulBlock","src":"4294:118:30","statements":[{"nativeSrc":"4309:16:30","nodeType":"YulVariableDeclaration","src":"4309:16:30","value":{"kind":"number","nativeSrc":"4323:2:30","nodeType":"YulLiteral","src":"4323:2:30","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:30","nodeType":"YulTypedName","src":"4313:6:30","type":""}]},{"nativeSrc":"4339:63:30","nodeType":"YulAssignment","src":"4339:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:30","nodeType":"YulIdentifier","src":"4374:9:30"},{"name":"offset","nativeSrc":"4385:6:30","nodeType":"YulIdentifier","src":"4385:6:30"}],"functionName":{"name":"add","nativeSrc":"4370:3:30","nodeType":"YulIdentifier","src":"4370:3:30"},"nativeSrc":"4370:22:30","nodeType":"YulFunctionCall","src":"4370:22:30"},{"name":"dataEnd","nativeSrc":"4394:7:30","nodeType":"YulIdentifier","src":"4394:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:30","nodeType":"YulIdentifier","src":"4349:20:30"},"nativeSrc":"4349:53:30","nodeType":"YulFunctionCall","src":"4349:53:30"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:30","nodeType":"YulIdentifier","src":"4339:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:30","nodeType":"YulTypedName","src":"3854:9:30","type":""},{"name":"dataEnd","nativeSrc":"3865:7:30","nodeType":"YulTypedName","src":"3865:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:30","nodeType":"YulTypedName","src":"3877:6:30","type":""},{"name":"value1","nativeSrc":"3885:6:30","nodeType":"YulTypedName","src":"3885:6:30","type":""},{"name":"value2","nativeSrc":"3893:6:30","nodeType":"YulTypedName","src":"3893:6:30","type":""}],"src":"3800:619:30"},{"body":{"nativeSrc":"4468:43:30","nodeType":"YulBlock","src":"4468:43:30","statements":[{"nativeSrc":"4478:27:30","nodeType":"YulAssignment","src":"4478:27:30","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:30","nodeType":"YulIdentifier","src":"4493:5:30"},{"kind":"number","nativeSrc":"4500:4:30","nodeType":"YulLiteral","src":"4500:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:30","nodeType":"YulIdentifier","src":"4489:3:30"},"nativeSrc":"4489:16:30","nodeType":"YulFunctionCall","src":"4489:16:30"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:30","nodeType":"YulIdentifier","src":"4478:7:30"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:30","nodeType":"YulTypedName","src":"4450:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:30","nodeType":"YulTypedName","src":"4460:7:30","type":""}],"src":"4425:86:30"},{"body":{"nativeSrc":"4578:51:30","nodeType":"YulBlock","src":"4578:51:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:30","nodeType":"YulIdentifier","src":"4595:3:30"},{"arguments":[{"name":"value","nativeSrc":"4616:5:30","nodeType":"YulIdentifier","src":"4616:5:30"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:30","nodeType":"YulIdentifier","src":"4600:15:30"},"nativeSrc":"4600:22:30","nodeType":"YulFunctionCall","src":"4600:22:30"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:30","nodeType":"YulIdentifier","src":"4588:6:30"},"nativeSrc":"4588:35:30","nodeType":"YulFunctionCall","src":"4588:35:30"},"nativeSrc":"4588:35:30","nodeType":"YulExpressionStatement","src":"4588:35:30"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:30","nodeType":"YulTypedName","src":"4566:5:30","type":""},{"name":"pos","nativeSrc":"4573:3:30","nodeType":"YulTypedName","src":"4573:3:30","type":""}],"src":"4517:112:30"},{"body":{"nativeSrc":"4729:120:30","nodeType":"YulBlock","src":"4729:120:30","statements":[{"nativeSrc":"4739:26:30","nodeType":"YulAssignment","src":"4739:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:30","nodeType":"YulIdentifier","src":"4751:9:30"},{"kind":"number","nativeSrc":"4762:2:30","nodeType":"YulLiteral","src":"4762:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:30","nodeType":"YulIdentifier","src":"4747:3:30"},"nativeSrc":"4747:18:30","nodeType":"YulFunctionCall","src":"4747:18:30"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:30","nodeType":"YulIdentifier","src":"4739:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:30","nodeType":"YulIdentifier","src":"4815:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:30","nodeType":"YulIdentifier","src":"4828:9:30"},{"kind":"number","nativeSrc":"4839:1:30","nodeType":"YulLiteral","src":"4839:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:30","nodeType":"YulIdentifier","src":"4824:3:30"},"nativeSrc":"4824:17:30","nodeType":"YulFunctionCall","src":"4824:17:30"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:30","nodeType":"YulIdentifier","src":"4775:39:30"},"nativeSrc":"4775:67:30","nodeType":"YulFunctionCall","src":"4775:67:30"},"nativeSrc":"4775:67:30","nodeType":"YulExpressionStatement","src":"4775:67:30"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:30","nodeType":"YulTypedName","src":"4701:9:30","type":""},{"name":"value0","nativeSrc":"4713:6:30","nodeType":"YulTypedName","src":"4713:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:30","nodeType":"YulTypedName","src":"4724:4:30","type":""}],"src":"4635:214:30"},{"body":{"nativeSrc":"4921:263:30","nodeType":"YulBlock","src":"4921:263:30","statements":[{"body":{"nativeSrc":"4967:83:30","nodeType":"YulBlock","src":"4967:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4969:77:30","nodeType":"YulIdentifier","src":"4969:77:30"},"nativeSrc":"4969:79:30","nodeType":"YulFunctionCall","src":"4969:79:30"},"nativeSrc":"4969:79:30","nodeType":"YulExpressionStatement","src":"4969:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4942:7:30","nodeType":"YulIdentifier","src":"4942:7:30"},{"name":"headStart","nativeSrc":"4951:9:30","nodeType":"YulIdentifier","src":"4951:9:30"}],"functionName":{"name":"sub","nativeSrc":"4938:3:30","nodeType":"YulIdentifier","src":"4938:3:30"},"nativeSrc":"4938:23:30","nodeType":"YulFunctionCall","src":"4938:23:30"},{"kind":"number","nativeSrc":"4963:2:30","nodeType":"YulLiteral","src":"4963:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4934:3:30","nodeType":"YulIdentifier","src":"4934:3:30"},"nativeSrc":"4934:32:30","nodeType":"YulFunctionCall","src":"4934:32:30"},"nativeSrc":"4931:119:30","nodeType":"YulIf","src":"4931:119:30"},{"nativeSrc":"5060:117:30","nodeType":"YulBlock","src":"5060:117:30","statements":[{"nativeSrc":"5075:15:30","nodeType":"YulVariableDeclaration","src":"5075:15:30","value":{"kind":"number","nativeSrc":"5089:1:30","nodeType":"YulLiteral","src":"5089:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5079:6:30","nodeType":"YulTypedName","src":"5079:6:30","type":""}]},{"nativeSrc":"5104:63:30","nodeType":"YulAssignment","src":"5104:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5139:9:30","nodeType":"YulIdentifier","src":"5139:9:30"},{"name":"offset","nativeSrc":"5150:6:30","nodeType":"YulIdentifier","src":"5150:6:30"}],"functionName":{"name":"add","nativeSrc":"5135:3:30","nodeType":"YulIdentifier","src":"5135:3:30"},"nativeSrc":"5135:22:30","nodeType":"YulFunctionCall","src":"5135:22:30"},{"name":"dataEnd","nativeSrc":"5159:7:30","nodeType":"YulIdentifier","src":"5159:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5114:20:30","nodeType":"YulIdentifier","src":"5114:20:30"},"nativeSrc":"5114:53:30","nodeType":"YulFunctionCall","src":"5114:53:30"},"variableNames":[{"name":"value0","nativeSrc":"5104:6:30","nodeType":"YulIdentifier","src":"5104:6:30"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4855:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4891:9:30","nodeType":"YulTypedName","src":"4891:9:30","type":""},{"name":"dataEnd","nativeSrc":"4902:7:30","nodeType":"YulTypedName","src":"4902:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4914:6:30","nodeType":"YulTypedName","src":"4914:6:30","type":""}],"src":"4855:329:30"},{"body":{"nativeSrc":"5255:53:30","nodeType":"YulBlock","src":"5255:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5272:3:30","nodeType":"YulIdentifier","src":"5272:3:30"},{"arguments":[{"name":"value","nativeSrc":"5295:5:30","nodeType":"YulIdentifier","src":"5295:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5277:17:30","nodeType":"YulIdentifier","src":"5277:17:30"},"nativeSrc":"5277:24:30","nodeType":"YulFunctionCall","src":"5277:24:30"}],"functionName":{"name":"mstore","nativeSrc":"5265:6:30","nodeType":"YulIdentifier","src":"5265:6:30"},"nativeSrc":"5265:37:30","nodeType":"YulFunctionCall","src":"5265:37:30"},"nativeSrc":"5265:37:30","nodeType":"YulExpressionStatement","src":"5265:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5190:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5243:5:30","nodeType":"YulTypedName","src":"5243:5:30","type":""},{"name":"pos","nativeSrc":"5250:3:30","nodeType":"YulTypedName","src":"5250:3:30","type":""}],"src":"5190:118:30"},{"body":{"nativeSrc":"5412:124:30","nodeType":"YulBlock","src":"5412:124:30","statements":[{"nativeSrc":"5422:26:30","nodeType":"YulAssignment","src":"5422:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"5434:9:30","nodeType":"YulIdentifier","src":"5434:9:30"},{"kind":"number","nativeSrc":"5445:2:30","nodeType":"YulLiteral","src":"5445:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5430:3:30","nodeType":"YulIdentifier","src":"5430:3:30"},"nativeSrc":"5430:18:30","nodeType":"YulFunctionCall","src":"5430:18:30"},"variableNames":[{"name":"tail","nativeSrc":"5422:4:30","nodeType":"YulIdentifier","src":"5422:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5502:6:30","nodeType":"YulIdentifier","src":"5502:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"5515:9:30","nodeType":"YulIdentifier","src":"5515:9:30"},{"kind":"number","nativeSrc":"5526:1:30","nodeType":"YulLiteral","src":"5526:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5511:3:30","nodeType":"YulIdentifier","src":"5511:3:30"},"nativeSrc":"5511:17:30","nodeType":"YulFunctionCall","src":"5511:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5458:43:30","nodeType":"YulIdentifier","src":"5458:43:30"},"nativeSrc":"5458:71:30","nodeType":"YulFunctionCall","src":"5458:71:30"},"nativeSrc":"5458:71:30","nodeType":"YulExpressionStatement","src":"5458:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5314:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5384:9:30","nodeType":"YulTypedName","src":"5384:9:30","type":""},{"name":"value0","nativeSrc":"5396:6:30","nodeType":"YulTypedName","src":"5396:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5407:4:30","nodeType":"YulTypedName","src":"5407:4:30","type":""}],"src":"5314:222:30"},{"body":{"nativeSrc":"5625:391:30","nodeType":"YulBlock","src":"5625:391:30","statements":[{"body":{"nativeSrc":"5671:83:30","nodeType":"YulBlock","src":"5671:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5673:77:30","nodeType":"YulIdentifier","src":"5673:77:30"},"nativeSrc":"5673:79:30","nodeType":"YulFunctionCall","src":"5673:79:30"},"nativeSrc":"5673:79:30","nodeType":"YulExpressionStatement","src":"5673:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5646:7:30","nodeType":"YulIdentifier","src":"5646:7:30"},{"name":"headStart","nativeSrc":"5655:9:30","nodeType":"YulIdentifier","src":"5655:9:30"}],"functionName":{"name":"sub","nativeSrc":"5642:3:30","nodeType":"YulIdentifier","src":"5642:3:30"},"nativeSrc":"5642:23:30","nodeType":"YulFunctionCall","src":"5642:23:30"},{"kind":"number","nativeSrc":"5667:2:30","nodeType":"YulLiteral","src":"5667:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5638:3:30","nodeType":"YulIdentifier","src":"5638:3:30"},"nativeSrc":"5638:32:30","nodeType":"YulFunctionCall","src":"5638:32:30"},"nativeSrc":"5635:119:30","nodeType":"YulIf","src":"5635:119:30"},{"nativeSrc":"5764:117:30","nodeType":"YulBlock","src":"5764:117:30","statements":[{"nativeSrc":"5779:15:30","nodeType":"YulVariableDeclaration","src":"5779:15:30","value":{"kind":"number","nativeSrc":"5793:1:30","nodeType":"YulLiteral","src":"5793:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5783:6:30","nodeType":"YulTypedName","src":"5783:6:30","type":""}]},{"nativeSrc":"5808:63:30","nodeType":"YulAssignment","src":"5808:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5843:9:30","nodeType":"YulIdentifier","src":"5843:9:30"},{"name":"offset","nativeSrc":"5854:6:30","nodeType":"YulIdentifier","src":"5854:6:30"}],"functionName":{"name":"add","nativeSrc":"5839:3:30","nodeType":"YulIdentifier","src":"5839:3:30"},"nativeSrc":"5839:22:30","nodeType":"YulFunctionCall","src":"5839:22:30"},{"name":"dataEnd","nativeSrc":"5863:7:30","nodeType":"YulIdentifier","src":"5863:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5818:20:30","nodeType":"YulIdentifier","src":"5818:20:30"},"nativeSrc":"5818:53:30","nodeType":"YulFunctionCall","src":"5818:53:30"},"variableNames":[{"name":"value0","nativeSrc":"5808:6:30","nodeType":"YulIdentifier","src":"5808:6:30"}]}]},{"nativeSrc":"5891:118:30","nodeType":"YulBlock","src":"5891:118:30","statements":[{"nativeSrc":"5906:16:30","nodeType":"YulVariableDeclaration","src":"5906:16:30","value":{"kind":"number","nativeSrc":"5920:2:30","nodeType":"YulLiteral","src":"5920:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5910:6:30","nodeType":"YulTypedName","src":"5910:6:30","type":""}]},{"nativeSrc":"5936:63:30","nodeType":"YulAssignment","src":"5936:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5971:9:30","nodeType":"YulIdentifier","src":"5971:9:30"},{"name":"offset","nativeSrc":"5982:6:30","nodeType":"YulIdentifier","src":"5982:6:30"}],"functionName":{"name":"add","nativeSrc":"5967:3:30","nodeType":"YulIdentifier","src":"5967:3:30"},"nativeSrc":"5967:22:30","nodeType":"YulFunctionCall","src":"5967:22:30"},{"name":"dataEnd","nativeSrc":"5991:7:30","nodeType":"YulIdentifier","src":"5991:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5946:20:30","nodeType":"YulIdentifier","src":"5946:20:30"},"nativeSrc":"5946:53:30","nodeType":"YulFunctionCall","src":"5946:53:30"},"variableNames":[{"name":"value1","nativeSrc":"5936:6:30","nodeType":"YulIdentifier","src":"5936:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5542:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5587:9:30","nodeType":"YulTypedName","src":"5587:9:30","type":""},{"name":"dataEnd","nativeSrc":"5598:7:30","nodeType":"YulTypedName","src":"5598:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5610:6:30","nodeType":"YulTypedName","src":"5610:6:30","type":""},{"name":"value1","nativeSrc":"5618:6:30","nodeType":"YulTypedName","src":"5618:6:30","type":""}],"src":"5542:474:30"},{"body":{"nativeSrc":"6050:152:30","nodeType":"YulBlock","src":"6050:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6067:1:30","nodeType":"YulLiteral","src":"6067:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6070:77:30","nodeType":"YulLiteral","src":"6070:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6060:6:30","nodeType":"YulIdentifier","src":"6060:6:30"},"nativeSrc":"6060:88:30","nodeType":"YulFunctionCall","src":"6060:88:30"},"nativeSrc":"6060:88:30","nodeType":"YulExpressionStatement","src":"6060:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6164:1:30","nodeType":"YulLiteral","src":"6164:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"6167:4:30","nodeType":"YulLiteral","src":"6167:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6157:6:30","nodeType":"YulIdentifier","src":"6157:6:30"},"nativeSrc":"6157:15:30","nodeType":"YulFunctionCall","src":"6157:15:30"},"nativeSrc":"6157:15:30","nodeType":"YulExpressionStatement","src":"6157:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6188:1:30","nodeType":"YulLiteral","src":"6188:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6191:4:30","nodeType":"YulLiteral","src":"6191:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6181:6:30","nodeType":"YulIdentifier","src":"6181:6:30"},"nativeSrc":"6181:15:30","nodeType":"YulFunctionCall","src":"6181:15:30"},"nativeSrc":"6181:15:30","nodeType":"YulExpressionStatement","src":"6181:15:30"}]},"name":"panic_error_0x22","nativeSrc":"6022:180:30","nodeType":"YulFunctionDefinition","src":"6022:180:30"},{"body":{"nativeSrc":"6259:269:30","nodeType":"YulBlock","src":"6259:269:30","statements":[{"nativeSrc":"6269:22:30","nodeType":"YulAssignment","src":"6269:22:30","value":{"arguments":[{"name":"data","nativeSrc":"6283:4:30","nodeType":"YulIdentifier","src":"6283:4:30"},{"kind":"number","nativeSrc":"6289:1:30","nodeType":"YulLiteral","src":"6289:1:30","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"6279:3:30","nodeType":"YulIdentifier","src":"6279:3:30"},"nativeSrc":"6279:12:30","nodeType":"YulFunctionCall","src":"6279:12:30"},"variableNames":[{"name":"length","nativeSrc":"6269:6:30","nodeType":"YulIdentifier","src":"6269:6:30"}]},{"nativeSrc":"6300:38:30","nodeType":"YulVariableDeclaration","src":"6300:38:30","value":{"arguments":[{"name":"data","nativeSrc":"6330:4:30","nodeType":"YulIdentifier","src":"6330:4:30"},{"kind":"number","nativeSrc":"6336:1:30","nodeType":"YulLiteral","src":"6336:1:30","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6326:3:30","nodeType":"YulIdentifier","src":"6326:3:30"},"nativeSrc":"6326:12:30","nodeType":"YulFunctionCall","src":"6326:12:30"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6304:18:30","nodeType":"YulTypedName","src":"6304:18:30","type":""}]},{"body":{"nativeSrc":"6377:51:30","nodeType":"YulBlock","src":"6377:51:30","statements":[{"nativeSrc":"6391:27:30","nodeType":"YulAssignment","src":"6391:27:30","value":{"arguments":[{"name":"length","nativeSrc":"6405:6:30","nodeType":"YulIdentifier","src":"6405:6:30"},{"kind":"number","nativeSrc":"6413:4:30","nodeType":"YulLiteral","src":"6413:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6401:3:30","nodeType":"YulIdentifier","src":"6401:3:30"},"nativeSrc":"6401:17:30","nodeType":"YulFunctionCall","src":"6401:17:30"},"variableNames":[{"name":"length","nativeSrc":"6391:6:30","nodeType":"YulIdentifier","src":"6391:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6357:18:30","nodeType":"YulIdentifier","src":"6357:18:30"}],"functionName":{"name":"iszero","nativeSrc":"6350:6:30","nodeType":"YulIdentifier","src":"6350:6:30"},"nativeSrc":"6350:26:30","nodeType":"YulFunctionCall","src":"6350:26:30"},"nativeSrc":"6347:81:30","nodeType":"YulIf","src":"6347:81:30"},{"body":{"nativeSrc":"6480:42:30","nodeType":"YulBlock","src":"6480:42:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6494:16:30","nodeType":"YulIdentifier","src":"6494:16:30"},"nativeSrc":"6494:18:30","nodeType":"YulFunctionCall","src":"6494:18:30"},"nativeSrc":"6494:18:30","nodeType":"YulExpressionStatement","src":"6494:18:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6444:18:30","nodeType":"YulIdentifier","src":"6444:18:30"},{"arguments":[{"name":"length","nativeSrc":"6467:6:30","nodeType":"YulIdentifier","src":"6467:6:30"},{"kind":"number","nativeSrc":"6475:2:30","nodeType":"YulLiteral","src":"6475:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6464:2:30","nodeType":"YulIdentifier","src":"6464:2:30"},"nativeSrc":"6464:14:30","nodeType":"YulFunctionCall","src":"6464:14:30"}],"functionName":{"name":"eq","nativeSrc":"6441:2:30","nodeType":"YulIdentifier","src":"6441:2:30"},"nativeSrc":"6441:38:30","nodeType":"YulFunctionCall","src":"6441:38:30"},"nativeSrc":"6438:84:30","nodeType":"YulIf","src":"6438:84:30"}]},"name":"extract_byte_array_length","nativeSrc":"6208:320:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6243:4:30","nodeType":"YulTypedName","src":"6243:4:30","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6252:6:30","nodeType":"YulTypedName","src":"6252:6:30","type":""}],"src":"6208:320:30"},{"body":{"nativeSrc":"6688:288:30","nodeType":"YulBlock","src":"6688:288:30","statements":[{"nativeSrc":"6698:26:30","nodeType":"YulAssignment","src":"6698:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"6710:9:30","nodeType":"YulIdentifier","src":"6710:9:30"},{"kind":"number","nativeSrc":"6721:2:30","nodeType":"YulLiteral","src":"6721:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6706:3:30","nodeType":"YulIdentifier","src":"6706:3:30"},"nativeSrc":"6706:18:30","nodeType":"YulFunctionCall","src":"6706:18:30"},"variableNames":[{"name":"tail","nativeSrc":"6698:4:30","nodeType":"YulIdentifier","src":"6698:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6778:6:30","nodeType":"YulIdentifier","src":"6778:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6791:9:30","nodeType":"YulIdentifier","src":"6791:9:30"},{"kind":"number","nativeSrc":"6802:1:30","nodeType":"YulLiteral","src":"6802:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6787:3:30","nodeType":"YulIdentifier","src":"6787:3:30"},"nativeSrc":"6787:17:30","nodeType":"YulFunctionCall","src":"6787:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6734:43:30","nodeType":"YulIdentifier","src":"6734:43:30"},"nativeSrc":"6734:71:30","nodeType":"YulFunctionCall","src":"6734:71:30"},"nativeSrc":"6734:71:30","nodeType":"YulExpressionStatement","src":"6734:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6859:6:30","nodeType":"YulIdentifier","src":"6859:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6872:9:30","nodeType":"YulIdentifier","src":"6872:9:30"},{"kind":"number","nativeSrc":"6883:2:30","nodeType":"YulLiteral","src":"6883:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6868:3:30","nodeType":"YulIdentifier","src":"6868:3:30"},"nativeSrc":"6868:18:30","nodeType":"YulFunctionCall","src":"6868:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6815:43:30","nodeType":"YulIdentifier","src":"6815:43:30"},"nativeSrc":"6815:72:30","nodeType":"YulFunctionCall","src":"6815:72:30"},"nativeSrc":"6815:72:30","nodeType":"YulExpressionStatement","src":"6815:72:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6941:6:30","nodeType":"YulIdentifier","src":"6941:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6954:9:30","nodeType":"YulIdentifier","src":"6954:9:30"},{"kind":"number","nativeSrc":"6965:2:30","nodeType":"YulLiteral","src":"6965:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6950:3:30","nodeType":"YulIdentifier","src":"6950:3:30"},"nativeSrc":"6950:18:30","nodeType":"YulFunctionCall","src":"6950:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6897:43:30","nodeType":"YulIdentifier","src":"6897:43:30"},"nativeSrc":"6897:72:30","nodeType":"YulFunctionCall","src":"6897:72:30"},"nativeSrc":"6897:72:30","nodeType":"YulExpressionStatement","src":"6897:72:30"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6534:442:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6644:9:30","nodeType":"YulTypedName","src":"6644:9:30","type":""},{"name":"value2","nativeSrc":"6656:6:30","nodeType":"YulTypedName","src":"6656:6:30","type":""},{"name":"value1","nativeSrc":"6664:6:30","nodeType":"YulTypedName","src":"6664:6:30","type":""},{"name":"value0","nativeSrc":"6672:6:30","nodeType":"YulTypedName","src":"6672:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6683:4:30","nodeType":"YulTypedName","src":"6683:4:30","type":""}],"src":"6534:442:30"},{"body":{"nativeSrc":"7010:152:30","nodeType":"YulBlock","src":"7010:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7027:1:30","nodeType":"YulLiteral","src":"7027:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"7030:77:30","nodeType":"YulLiteral","src":"7030:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7020:6:30","nodeType":"YulIdentifier","src":"7020:6:30"},"nativeSrc":"7020:88:30","nodeType":"YulFunctionCall","src":"7020:88:30"},"nativeSrc":"7020:88:30","nodeType":"YulExpressionStatement","src":"7020:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7124:1:30","nodeType":"YulLiteral","src":"7124:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"7127:4:30","nodeType":"YulLiteral","src":"7127:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7117:6:30","nodeType":"YulIdentifier","src":"7117:6:30"},"nativeSrc":"7117:15:30","nodeType":"YulFunctionCall","src":"7117:15:30"},"nativeSrc":"7117:15:30","nodeType":"YulExpressionStatement","src":"7117:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7148:1:30","nodeType":"YulLiteral","src":"7148:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"7151:4:30","nodeType":"YulLiteral","src":"7151:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7141:6:30","nodeType":"YulIdentifier","src":"7141:6:30"},"nativeSrc":"7141:15:30","nodeType":"YulFunctionCall","src":"7141:15:30"},"nativeSrc":"7141:15:30","nodeType":"YulExpressionStatement","src":"7141:15:30"}]},"name":"panic_error_0x11","nativeSrc":"6982:180:30","nodeType":"YulFunctionDefinition","src":"6982:180:30"},{"body":{"nativeSrc":"7212:147:30","nodeType":"YulBlock","src":"7212:147:30","statements":[{"nativeSrc":"7222:25:30","nodeType":"YulAssignment","src":"7222:25:30","value":{"arguments":[{"name":"x","nativeSrc":"7245:1:30","nodeType":"YulIdentifier","src":"7245:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7227:17:30","nodeType":"YulIdentifier","src":"7227:17:30"},"nativeSrc":"7227:20:30","nodeType":"YulFunctionCall","src":"7227:20:30"},"variableNames":[{"name":"x","nativeSrc":"7222:1:30","nodeType":"YulIdentifier","src":"7222:1:30"}]},{"nativeSrc":"7256:25:30","nodeType":"YulAssignment","src":"7256:25:30","value":{"arguments":[{"name":"y","nativeSrc":"7279:1:30","nodeType":"YulIdentifier","src":"7279:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7261:17:30","nodeType":"YulIdentifier","src":"7261:17:30"},"nativeSrc":"7261:20:30","nodeType":"YulFunctionCall","src":"7261:20:30"},"variableNames":[{"name":"y","nativeSrc":"7256:1:30","nodeType":"YulIdentifier","src":"7256:1:30"}]},{"nativeSrc":"7290:16:30","nodeType":"YulAssignment","src":"7290:16:30","value":{"arguments":[{"name":"x","nativeSrc":"7301:1:30","nodeType":"YulIdentifier","src":"7301:1:30"},{"name":"y","nativeSrc":"7304:1:30","nodeType":"YulIdentifier","src":"7304:1:30"}],"functionName":{"name":"add","nativeSrc":"7297:3:30","nodeType":"YulIdentifier","src":"7297:3:30"},"nativeSrc":"7297:9:30","nodeType":"YulFunctionCall","src":"7297:9:30"},"variableNames":[{"name":"sum","nativeSrc":"7290:3:30","nodeType":"YulIdentifier","src":"7290:3:30"}]},{"body":{"nativeSrc":"7330:22:30","nodeType":"YulBlock","src":"7330:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7332:16:30","nodeType":"YulIdentifier","src":"7332:16:30"},"nativeSrc":"7332:18:30","nodeType":"YulFunctionCall","src":"7332:18:30"},"nativeSrc":"7332:18:30","nodeType":"YulExpressionStatement","src":"7332:18:30"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7322:1:30","nodeType":"YulIdentifier","src":"7322:1:30"},{"name":"sum","nativeSrc":"7325:3:30","nodeType":"YulIdentifier","src":"7325:3:30"}],"functionName":{"name":"gt","nativeSrc":"7319:2:30","nodeType":"YulIdentifier","src":"7319:2:30"},"nativeSrc":"7319:10:30","nodeType":"YulFunctionCall","src":"7319:10:30"},"nativeSrc":"7316:36:30","nodeType":"YulIf","src":"7316:36:30"}]},"name":"checked_add_t_uint256","nativeSrc":"7168:191:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7199:1:30","nodeType":"YulTypedName","src":"7199:1:30","type":""},{"name":"y","nativeSrc":"7202:1:30","nodeType":"YulTypedName","src":"7202:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7208:3:30","nodeType":"YulTypedName","src":"7208:3:30","type":""}],"src":"7168:191:30"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610def565b60405180910390f35b61010c60048036038101906101079190610eaa565b61032e565b6040516101199190610f05565b60405180910390f35b61012a610351565b6040516101379190610f2f565b60405180910390f35b61015a60048036038101906101559190610f4a565b61035b565b6040516101679190610f05565b60405180910390f35b61017861038a565b6040516101859190610fb9565b60405180910390f35b6101a860048036038101906101a39190610eaa565b610393565b005b6101c460048036038101906101bf9190610fd4565b6103a9565b6040516101d19190610f2f565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f99190611010565b60405180910390f35b61020a61042f565b6040516102179190610def565b60405180910390f35b61023a60048036038101906102359190610eaa565b6104c1565b6040516102479190610f05565b60405180910390f35b61026a6004803603810190610265919061102b565b6104e4565b6040516102779190610f2f565b60405180910390f35b61029a60048036038101906102959190610fd4565b61056b565b005b6060600380546102ab9061109a565b80601f01602080910402602001604051908101604052809291908181526020018280546102d79061109a565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e8585856106a0565b60019150509392505050565b60006012905090565b61039b610794565b6103a5828261081b565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610794565b610403600061089d565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e9061109a565b80601f016020809104026020016040519081016040528092919081815260200182805461046a9061109a565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d98185856106a0565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610794565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc9190611010565b60405180910390fd5b6105ee8161089d565b50565b600033905090565b6106068383836001610963565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561069a578181101561068a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610681939291906110cb565b60405180910390fd5b61069984848484036000610963565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107125760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107099190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107845760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077b9190611010565b60405180910390fd5b61078f838383610b3a565b505050565b61079c6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107ba610405565b73ffffffffffffffffffffffffffffffffffffffff1614610819576107dd6105f1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108109190611010565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108849190611010565b60405180910390fd5b61089960008383610b3a565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d55760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cc9190611010565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a475760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3e9190611010565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b34578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2b9190610f2f565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8c578060026000828254610b809190611131565b92505081905550610c5f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c18578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0f939291906110cb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca85780600260008282540392505081905550610cf5565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d529190610f2f565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d99578082015181840152602081019050610d7e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc182610d5f565b610dcb8185610d6a565b9350610ddb818560208601610d7b565b610de481610da5565b840191505092915050565b60006020820190508181036000830152610e098184610db6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4182610e16565b9050919050565b610e5181610e36565b8114610e5c57600080fd5b50565b600081359050610e6e81610e48565b92915050565b6000819050919050565b610e8781610e74565b8114610e9257600080fd5b50565b600081359050610ea481610e7e565b92915050565b60008060408385031215610ec157610ec0610e11565b5b6000610ecf85828601610e5f565b9250506020610ee085828601610e95565b9150509250929050565b60008115159050919050565b610eff81610eea565b82525050565b6000602082019050610f1a6000830184610ef6565b92915050565b610f2981610e74565b82525050565b6000602082019050610f446000830184610f20565b92915050565b600080600060608486031215610f6357610f62610e11565b5b6000610f7186828701610e5f565b9350506020610f8286828701610e5f565b9250506040610f9386828701610e95565b9150509250925092565b600060ff82169050919050565b610fb381610f9d565b82525050565b6000602082019050610fce6000830184610faa565b92915050565b600060208284031215610fea57610fe9610e11565b5b6000610ff884828501610e5f565b91505092915050565b61100a81610e36565b82525050565b60006020820190506110256000830184611001565b92915050565b6000806040838503121561104257611041610e11565b5b600061105085828601610e5f565b925050602061106185828601610e5f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b257607f821691505b6020821081036110c5576110c461106b565b5b50919050565b60006060820190506110e06000830186611001565b6110ed6020830185610f20565b6110fa6040830184610f20565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113c82610e74565b915061114783610e74565b925082820190508082111561115f5761115e611102565b5b9291505056fea264697066735822122058639067ad72ba310e122a047c6544264afb02579bf33dc40d935d0c3dc3114b64736f6c634300081e0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x794 JUMP JUMPDEST PUSH2 0x3A5 DUP3 DUP3 PUSH2 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x0 PUSH2 0x89D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x109A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CC PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP2 DUP6 DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x89D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x963 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x69A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x68A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x699 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x963 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x712 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x784 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78F DUP4 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x79C PUSH2 0x5F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7BA PUSH2 0x405 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x819 JUMPI PUSH2 0x7DD PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x899 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB3A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA47 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB34 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCF5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD52 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD99 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC1 DUP3 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xDCB DUP2 DUP6 PUSH2 0xD6A JUMP JUMPDEST SWAP4 POP PUSH2 0xDDB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE09 DUP2 DUP5 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE41 DUP3 PUSH2 0xE16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE51 DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6E DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE87 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP2 EQ PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA4 DUP2 PUSH2 0xE7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH2 0xEC0 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE0 DUP6 DUP3 DUP7 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFF DUP2 PUSH2 0xEEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF29 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF62 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF71 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF82 DUP7 DUP3 DUP8 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF93 DUP7 DUP3 DUP8 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB3 DUP2 PUSH2 0xF9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH2 0xFE9 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF8 DUP5 DUP3 DUP6 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100A DUP2 PUSH2 0xE36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1025 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1001 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1041 PUSH2 0xE11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1050 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1061 DUP6 DUP3 DUP7 ADD PUSH2 0xE5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0x106B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10E0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x10ED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x10FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF20 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113C DUP3 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0x1147 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x115F JUMPI PUSH2 0x115E PUSH2 0x1102 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC PUSH4 0x9067AD72 0xBA BALANCE 0xE SLT 0x2A DIV PUSH29 0x6544264AFB02579BF33DC40D935D0C3DC3114B64736F6C634300081E00 CALLER ","sourceMap":"175:260:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;338:95:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:116:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:7;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;338:95:27:-;1531:13:0;:11;:13::i;:::-;409:17:27::1;415:2;419:6;409:5;:17::i;:::-;338:95:::0;;:::o;2933:116:7:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:7:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;3455:140::-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;8630:128:7:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7362:208:7:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9605:432:7:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:30:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:118::-;5277:24;5295:5;5277:24;:::i;:::-;5272:3;5265:37;5190:118;;:::o;5314:222::-;5407:4;5445:2;5434:9;5430:18;5422:26;;5458:71;5526:1;5515:9;5511:17;5502:6;5458:71;:::i;:::-;5314:222;;;;:::o;5542:474::-;5610:6;5618;5667:2;5655:9;5646:7;5642:23;5638:32;5635:119;;;5673:79;;:::i;:::-;5635:119;5793:1;5818:53;5863:7;5854:6;5843:9;5839:22;5818:53;:::i;:::-;5808:63;;5764:117;5920:2;5946:53;5991:7;5982:6;5971:9;5967:22;5946:53;:::i;:::-;5936:63;;5891:118;5542:474;;;;;:::o;6022:180::-;6070:77;6067:1;6060:88;6167:4;6164:1;6157:15;6191:4;6188:1;6181:15;6208:320;6252:6;6289:1;6283:4;6279:12;6269:22;;6336:1;6330:4;6326:12;6357:18;6347:81;;6413:4;6405:6;6401:17;6391:27;;6347:81;6475:2;6467:6;6464:14;6444:18;6441:38;6438:84;;6494:18;;:::i;:::-;6438:84;6259:269;6208:320;;;:::o;6534:442::-;6683:4;6721:2;6710:9;6706:18;6698:26;;6734:71;6802:1;6791:9;6787:17;6778:6;6734:71;:::i;:::-;6815:72;6883:2;6872:9;6868:18;6859:6;6815:72;:::i;:::-;6897;6965:2;6954:9;6950:18;6941:6;6897:72;:::i;:::-;6534:442;;;;;;:::o;6982:180::-;7030:77;7027:1;7020:88;7127:4;7124:1;7117:15;7151:4;7148:1;7141:15;7168:191;7208:3;7227:20;7245:1;7227:20;:::i;:::-;7222:25;;7261:20;7279:1;7261:20;:::i;:::-;7256:25;;7304:1;7301;7297:9;7290:16;;7325:3;7322:1;7319:10;7316:36;;;7332:18;;:::i;:::-;7316:36;7168:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BridgedToken.sol\":\"WrappedERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/BridgedToken.sol\":{\"keccak256\":\"0xdf7d27f7f6d5460b0acf0e303693c5504d18f118e75822227c70a570f962557b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b22995ddeb1f788ccf58a294e727c060facac4c83e42a98e03d1f3a1f9c8cf5f\",\"dweb:/ipfs/QmWm3cF19ZMFQ8i3RW83KMTYnrUPFvMuKdGkhZiApju8J5\"]}},\"version\":1}"}},"contracts/Dest_Bridge.sol":{"Dest_Bridge":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"doneNonces","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"mintTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9727":{"entryPoint":null,"id":9727,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":187,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":527,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":542,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":420,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":388,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":383,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":438,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1551:30","nodeType":"YulBlock","src":"0:1551:30","statements":[{"body":{"nativeSrc":"47:35:30","nodeType":"YulBlock","src":"47:35:30","statements":[{"nativeSrc":"57:19:30","nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:30","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:30","nodeType":"YulIdentifier","src":"67:5:30"},"nativeSrc":"67:9:30","nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:30","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:30","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nativeSrc":"177:28:30","nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:30","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:30","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:12:30","nodeType":"YulFunctionCall","src":"187:12:30"},"nativeSrc":"187:12:30","nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:30","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nativeSrc":"300:28:30","nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:30","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:30","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:30","nodeType":"YulIdentifier","src":"310:6:30"},"nativeSrc":"310:12:30","nodeType":"YulFunctionCall","src":"310:12:30"},"nativeSrc":"310:12:30","nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:30","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nativeSrc":"379:81:30","nodeType":"YulBlock","src":"379:81:30","statements":[{"nativeSrc":"389:65:30","nodeType":"YulAssignment","src":"389:65:30","value":{"arguments":[{"name":"value","nativeSrc":"404:5:30","nodeType":"YulIdentifier","src":"404:5:30"},{"kind":"number","nativeSrc":"411:42:30","nodeType":"YulLiteral","src":"411:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:30","nodeType":"YulIdentifier","src":"400:3:30"},"nativeSrc":"400:54:30","nodeType":"YulFunctionCall","src":"400:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:30","nodeType":"YulIdentifier","src":"389:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:30","nodeType":"YulTypedName","src":"361:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:30","nodeType":"YulTypedName","src":"371:7:30","type":""}],"src":"334:126:30"},{"body":{"nativeSrc":"511:51:30","nodeType":"YulBlock","src":"511:51:30","statements":[{"nativeSrc":"521:35:30","nodeType":"YulAssignment","src":"521:35:30","value":{"arguments":[{"name":"value","nativeSrc":"550:5:30","nodeType":"YulIdentifier","src":"550:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:30","nodeType":"YulIdentifier","src":"532:17:30"},"nativeSrc":"532:24:30","nodeType":"YulFunctionCall","src":"532:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:30","nodeType":"YulIdentifier","src":"521:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:30","nodeType":"YulTypedName","src":"493:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:30","nodeType":"YulTypedName","src":"503:7:30","type":""}],"src":"466:96:30"},{"body":{"nativeSrc":"611:79:30","nodeType":"YulBlock","src":"611:79:30","statements":[{"body":{"nativeSrc":"668:16:30","nodeType":"YulBlock","src":"668:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:30","nodeType":"YulLiteral","src":"677:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:30","nodeType":"YulLiteral","src":"680:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:30","nodeType":"YulIdentifier","src":"670:6:30"},"nativeSrc":"670:12:30","nodeType":"YulFunctionCall","src":"670:12:30"},"nativeSrc":"670:12:30","nodeType":"YulExpressionStatement","src":"670:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:30","nodeType":"YulIdentifier","src":"634:5:30"},{"arguments":[{"name":"value","nativeSrc":"659:5:30","nodeType":"YulIdentifier","src":"659:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:30","nodeType":"YulIdentifier","src":"641:17:30"},"nativeSrc":"641:24:30","nodeType":"YulFunctionCall","src":"641:24:30"}],"functionName":{"name":"eq","nativeSrc":"631:2:30","nodeType":"YulIdentifier","src":"631:2:30"},"nativeSrc":"631:35:30","nodeType":"YulFunctionCall","src":"631:35:30"}],"functionName":{"name":"iszero","nativeSrc":"624:6:30","nodeType":"YulIdentifier","src":"624:6:30"},"nativeSrc":"624:43:30","nodeType":"YulFunctionCall","src":"624:43:30"},"nativeSrc":"621:63:30","nodeType":"YulIf","src":"621:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:30","nodeType":"YulTypedName","src":"604:5:30","type":""}],"src":"568:122:30"},{"body":{"nativeSrc":"759:80:30","nodeType":"YulBlock","src":"759:80:30","statements":[{"nativeSrc":"769:22:30","nodeType":"YulAssignment","src":"769:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:30","nodeType":"YulIdentifier","src":"784:6:30"}],"functionName":{"name":"mload","nativeSrc":"778:5:30","nodeType":"YulIdentifier","src":"778:5:30"},"nativeSrc":"778:13:30","nodeType":"YulFunctionCall","src":"778:13:30"},"variableNames":[{"name":"value","nativeSrc":"769:5:30","nodeType":"YulIdentifier","src":"769:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:30","nodeType":"YulIdentifier","src":"827:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:30","nodeType":"YulIdentifier","src":"800:26:30"},"nativeSrc":"800:33:30","nodeType":"YulFunctionCall","src":"800:33:30"},"nativeSrc":"800:33:30","nodeType":"YulExpressionStatement","src":"800:33:30"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:30","nodeType":"YulTypedName","src":"737:6:30","type":""},{"name":"end","nativeSrc":"745:3:30","nodeType":"YulTypedName","src":"745:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:30","nodeType":"YulTypedName","src":"753:5:30","type":""}],"src":"696:143:30"},{"body":{"nativeSrc":"922:274:30","nodeType":"YulBlock","src":"922:274:30","statements":[{"body":{"nativeSrc":"968:83:30","nodeType":"YulBlock","src":"968:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:30","nodeType":"YulIdentifier","src":"970:77:30"},"nativeSrc":"970:79:30","nodeType":"YulFunctionCall","src":"970:79:30"},"nativeSrc":"970:79:30","nodeType":"YulExpressionStatement","src":"970:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:30","nodeType":"YulIdentifier","src":"943:7:30"},{"name":"headStart","nativeSrc":"952:9:30","nodeType":"YulIdentifier","src":"952:9:30"}],"functionName":{"name":"sub","nativeSrc":"939:3:30","nodeType":"YulIdentifier","src":"939:3:30"},"nativeSrc":"939:23:30","nodeType":"YulFunctionCall","src":"939:23:30"},{"kind":"number","nativeSrc":"964:2:30","nodeType":"YulLiteral","src":"964:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:30","nodeType":"YulIdentifier","src":"935:3:30"},"nativeSrc":"935:32:30","nodeType":"YulFunctionCall","src":"935:32:30"},"nativeSrc":"932:119:30","nodeType":"YulIf","src":"932:119:30"},{"nativeSrc":"1061:128:30","nodeType":"YulBlock","src":"1061:128:30","statements":[{"nativeSrc":"1076:15:30","nodeType":"YulVariableDeclaration","src":"1076:15:30","value":{"kind":"number","nativeSrc":"1090:1:30","nodeType":"YulLiteral","src":"1090:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:30","nodeType":"YulTypedName","src":"1080:6:30","type":""}]},{"nativeSrc":"1105:74:30","nodeType":"YulAssignment","src":"1105:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:30","nodeType":"YulIdentifier","src":"1151:9:30"},{"name":"offset","nativeSrc":"1162:6:30","nodeType":"YulIdentifier","src":"1162:6:30"}],"functionName":{"name":"add","nativeSrc":"1147:3:30","nodeType":"YulIdentifier","src":"1147:3:30"},"nativeSrc":"1147:22:30","nodeType":"YulFunctionCall","src":"1147:22:30"},{"name":"dataEnd","nativeSrc":"1171:7:30","nodeType":"YulIdentifier","src":"1171:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:30","nodeType":"YulIdentifier","src":"1115:31:30"},"nativeSrc":"1115:64:30","nodeType":"YulFunctionCall","src":"1115:64:30"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:30","nodeType":"YulIdentifier","src":"1105:6:30"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:30","nodeType":"YulTypedName","src":"892:9:30","type":""},{"name":"dataEnd","nativeSrc":"903:7:30","nodeType":"YulTypedName","src":"903:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:30","nodeType":"YulTypedName","src":"915:6:30","type":""}],"src":"845:351:30"},{"body":{"nativeSrc":"1267:53:30","nodeType":"YulBlock","src":"1267:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1284:3:30","nodeType":"YulIdentifier","src":"1284:3:30"},{"arguments":[{"name":"value","nativeSrc":"1307:5:30","nodeType":"YulIdentifier","src":"1307:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1289:17:30","nodeType":"YulIdentifier","src":"1289:17:30"},"nativeSrc":"1289:24:30","nodeType":"YulFunctionCall","src":"1289:24:30"}],"functionName":{"name":"mstore","nativeSrc":"1277:6:30","nodeType":"YulIdentifier","src":"1277:6:30"},"nativeSrc":"1277:37:30","nodeType":"YulFunctionCall","src":"1277:37:30"},"nativeSrc":"1277:37:30","nodeType":"YulExpressionStatement","src":"1277:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1202:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1255:5:30","nodeType":"YulTypedName","src":"1255:5:30","type":""},{"name":"pos","nativeSrc":"1262:3:30","nodeType":"YulTypedName","src":"1262:3:30","type":""}],"src":"1202:118:30"},{"body":{"nativeSrc":"1424:124:30","nodeType":"YulBlock","src":"1424:124:30","statements":[{"nativeSrc":"1434:26:30","nodeType":"YulAssignment","src":"1434:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1446:9:30","nodeType":"YulIdentifier","src":"1446:9:30"},{"kind":"number","nativeSrc":"1457:2:30","nodeType":"YulLiteral","src":"1457:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1442:3:30","nodeType":"YulIdentifier","src":"1442:3:30"},"nativeSrc":"1442:18:30","nodeType":"YulFunctionCall","src":"1442:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1434:4:30","nodeType":"YulIdentifier","src":"1434:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1514:6:30","nodeType":"YulIdentifier","src":"1514:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"1527:9:30","nodeType":"YulIdentifier","src":"1527:9:30"},{"kind":"number","nativeSrc":"1538:1:30","nodeType":"YulLiteral","src":"1538:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1523:3:30","nodeType":"YulIdentifier","src":"1523:3:30"},"nativeSrc":"1523:17:30","nodeType":"YulFunctionCall","src":"1523:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1470:43:30","nodeType":"YulIdentifier","src":"1470:43:30"},"nativeSrc":"1470:71:30","nodeType":"YulFunctionCall","src":"1470:71:30"},"nativeSrc":"1470:71:30","nodeType":"YulExpressionStatement","src":"1470:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1326:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1396:9:30","nodeType":"YulTypedName","src":"1396:9:30","type":""},{"name":"value0","nativeSrc":"1408:6:30","nodeType":"YulTypedName","src":"1408:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1419:4:30","nodeType":"YulTypedName","src":"1419:4:30","type":""}],"src":"1326:222:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a81380380610a81833981810160405281019061003291906101e2565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c919061021e565b60405180910390fd5b6100b4816100bb60201b60201c565b5050610239565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101af82610184565b9050919050565b6101bf816101a4565b81146101ca57600080fd5b50565b6000815190506101dc816101b6565b92915050565b6000602082840312156101f8576101f761017f565b5b6000610206848285016101cd565b91505092915050565b610218816101a4565b82525050565b6000602082019050610233600083018461020f565b92915050565b610839806102486000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b1461006657806392322ab114610084578063c00fb782146100b4578063f2fde38b146100d0575b600080fd5b6100646100ec565b005b61006e610100565b60405161007b9190610540565b60405180910390f35b61009e60048036038101906100999190610596565b610129565b6040516100ab91906105de565b60405180910390f35b6100ce60048036038101906100c99190610625565b610149565b005b6100ea60048036038101906100e5919061068c565b610326565b005b6100f46103ac565b6100fe6000610433565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6101516103ac565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610716565b60405180910390fd5b6001600082815260200190815260200160002060009054906101000a900460ff1615610221576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021890610782565b60405180910390fd5b600180600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff166340c10f1985846040518363ffffffff1660e01b81526004016102879291906107b1565b600060405180830381600087803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee84846040516103189291906107da565b60405180910390a350505050565b61032e6103ac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a05760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103979190610540565b60405180910390fd5b6103a981610433565b50565b6103b46104f7565b73ffffffffffffffffffffffffffffffffffffffff166103d2610100565b73ffffffffffffffffffffffffffffffffffffffff1614610431576103f56104f7565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104289190610540565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061052a826104ff565b9050919050565b61053a8161051f565b82525050565b60006020820190506105556000830184610531565b92915050565b600080fd5b6000819050919050565b61057381610560565b811461057e57600080fd5b50565b6000813590506105908161056a565b92915050565b6000602082840312156105ac576105ab61055b565b5b60006105ba84828501610581565b91505092915050565b60008115159050919050565b6105d8816105c3565b82525050565b60006020820190506105f360008301846105cf565b92915050565b6106028161051f565b811461060d57600080fd5b50565b60008135905061061f816105f9565b92915050565b6000806000806080858703121561063f5761063e61055b565b5b600061064d87828801610610565b945050602061065e87828801610610565b935050604061066f87828801610581565b925050606061068087828801610581565b91505092959194509250565b6000602082840312156106a2576106a161055b565b5b60006106b084828501610610565b91505092915050565b600082825260208201905092915050565b7f4d696e744272696467653a20696e76616c696420757365720000000000000000600082015250565b60006107006018836106b9565b915061070b826106ca565b602082019050919050565b6000602082019050818103600083015261072f816106f3565b9050919050565b7f4d696e744272696467653a206e6f6e636520616c726561647920757365640000600082015250565b600061076c601e836106b9565b915061077782610736565b602082019050919050565b6000602082019050818103600083015261079b8161075f565b9050919050565b6107ab81610560565b82525050565b60006040820190506107c66000830185610531565b6107d360208301846107a2565b9392505050565b60006040820190506107ef60008301856107a2565b6107fc60208301846107a2565b939250505056fea26469706673582212206c4f5b1b92b986469a5bedce45cd57a44580889b8a4b6b7d404705333fef02c464736f6c634300081e0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA81 CODESIZE SUB DUP1 PUSH2 0xA81 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4 DUP2 PUSH2 0xBB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x239 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF DUP3 PUSH2 0x184 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF DUP2 PUSH2 0x1A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DC DUP2 PUSH2 0x1B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8 JUMPI PUSH2 0x1F7 PUSH2 0x17F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x206 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x218 DUP2 PUSH2 0x1A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x233 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x839 DUP1 PUSH2 0x248 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x92322AB1 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xC00FB782 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x596 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x625 JUMP JUMPDEST PUSH2 0x149 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x3AC JUMP JUMPDEST PUSH2 0xFE PUSH1 0x0 PUSH2 0x433 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x221 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0x782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x287 SWAP3 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F00E3CDD69A77BE7ED215EC7B2A36784DD158F921FCA79AC29DEFFA353FE6EE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x318 SWAP3 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x32E PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A9 DUP2 PUSH2 0x433 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x4F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D2 PUSH2 0x100 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x431 JUMPI PUSH2 0x3F5 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A DUP3 PUSH2 0x4FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53A DUP2 PUSH2 0x51F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x555 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x531 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x573 DUP2 PUSH2 0x560 JUMP JUMPDEST DUP2 EQ PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x590 DUP2 PUSH2 0x56A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5AC JUMPI PUSH2 0x5AB PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP5 DUP3 DUP6 ADD PUSH2 0x581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x602 DUP2 PUSH2 0x51F JUMP JUMPDEST DUP2 EQ PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x61F DUP2 PUSH2 0x5F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x63F JUMPI PUSH2 0x63E PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x64D DUP8 DUP3 DUP9 ADD PUSH2 0x610 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x65E DUP8 DUP3 DUP9 ADD PUSH2 0x610 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x66F DUP8 DUP3 DUP9 ADD PUSH2 0x581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x680 DUP8 DUP3 DUP9 ADD PUSH2 0x581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6B0 DUP5 DUP3 DUP6 ADD PUSH2 0x610 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E744272696467653A20696E76616C696420757365720000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x700 PUSH1 0x18 DUP4 PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x70B DUP3 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x72F DUP2 PUSH2 0x6F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E744272696467653A206E6F6E636520616C726561647920757365640000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76C PUSH1 0x1E DUP4 PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x777 DUP3 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x79B DUP2 PUSH2 0x75F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AB DUP2 PUSH2 0x560 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7C6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x7D3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x7FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x4F5B1B92B986469A5BEDCE45CD JUMPI LOG4 GASLIMIT DUP1 DUP9 SWAP12 DUP11 0x4B PUSH12 0x7D404705333FEF02C464736F PUSH13 0x634300081E0033000000000000 ","sourceMap":"548:1478:28:-:0;;;751:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;793:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;751:58:28;548:1478;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:30:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;548:1478:28:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":940,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_4374":{"entryPoint":1271,"id":4374,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1075,"id":146,"parameterSlots":1,"returnSlots":0},"@doneNonces_9732":{"entryPoint":297,"id":9732,"parameterSlots":0,"returnSlots":0},"@mintTokens_9797":{"entryPoint":329,"id":9797,"parameterSlots":4,"returnSlots":0},"@owner_67":{"entryPoint":256,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":236,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":806,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1552,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1409,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256":{"entryPoint":1573,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":1430,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1329,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":1487,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1887,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201_to_t_string_memory_ptr_fromStack":{"entryPoint":1779,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1954,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1344,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":1969,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":1502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1922,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1814,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2010,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1721,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1311,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1475,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1279,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1376,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1371,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2":{"entryPoint":1846,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201":{"entryPoint":1738,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1529,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1386,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:6349:30","nodeType":"YulBlock","src":"0:6349:30","statements":[{"body":{"nativeSrc":"52:81:30","nodeType":"YulBlock","src":"52:81:30","statements":[{"nativeSrc":"62:65:30","nodeType":"YulAssignment","src":"62:65:30","value":{"arguments":[{"name":"value","nativeSrc":"77:5:30","nodeType":"YulIdentifier","src":"77:5:30"},{"kind":"number","nativeSrc":"84:42:30","nodeType":"YulLiteral","src":"84:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:30","nodeType":"YulIdentifier","src":"73:3:30"},"nativeSrc":"73:54:30","nodeType":"YulFunctionCall","src":"73:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:30","nodeType":"YulIdentifier","src":"62:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:30","nodeType":"YulTypedName","src":"34:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:30","nodeType":"YulTypedName","src":"44:7:30","type":""}],"src":"7:126:30"},{"body":{"nativeSrc":"184:51:30","nodeType":"YulBlock","src":"184:51:30","statements":[{"nativeSrc":"194:35:30","nodeType":"YulAssignment","src":"194:35:30","value":{"arguments":[{"name":"value","nativeSrc":"223:5:30","nodeType":"YulIdentifier","src":"223:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:30","nodeType":"YulIdentifier","src":"205:17:30"},"nativeSrc":"205:24:30","nodeType":"YulFunctionCall","src":"205:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:30","nodeType":"YulIdentifier","src":"194:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:30","nodeType":"YulTypedName","src":"166:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:30","nodeType":"YulTypedName","src":"176:7:30","type":""}],"src":"139:96:30"},{"body":{"nativeSrc":"306:53:30","nodeType":"YulBlock","src":"306:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:30","nodeType":"YulIdentifier","src":"323:3:30"},{"arguments":[{"name":"value","nativeSrc":"346:5:30","nodeType":"YulIdentifier","src":"346:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:30","nodeType":"YulIdentifier","src":"328:17:30"},"nativeSrc":"328:24:30","nodeType":"YulFunctionCall","src":"328:24:30"}],"functionName":{"name":"mstore","nativeSrc":"316:6:30","nodeType":"YulIdentifier","src":"316:6:30"},"nativeSrc":"316:37:30","nodeType":"YulFunctionCall","src":"316:37:30"},"nativeSrc":"316:37:30","nodeType":"YulExpressionStatement","src":"316:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:30","nodeType":"YulTypedName","src":"294:5:30","type":""},{"name":"pos","nativeSrc":"301:3:30","nodeType":"YulTypedName","src":"301:3:30","type":""}],"src":"241:118:30"},{"body":{"nativeSrc":"463:124:30","nodeType":"YulBlock","src":"463:124:30","statements":[{"nativeSrc":"473:26:30","nodeType":"YulAssignment","src":"473:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:30","nodeType":"YulIdentifier","src":"485:9:30"},{"kind":"number","nativeSrc":"496:2:30","nodeType":"YulLiteral","src":"496:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:30","nodeType":"YulIdentifier","src":"481:3:30"},"nativeSrc":"481:18:30","nodeType":"YulFunctionCall","src":"481:18:30"},"variableNames":[{"name":"tail","nativeSrc":"473:4:30","nodeType":"YulIdentifier","src":"473:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:30","nodeType":"YulIdentifier","src":"553:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:30","nodeType":"YulIdentifier","src":"566:9:30"},{"kind":"number","nativeSrc":"577:1:30","nodeType":"YulLiteral","src":"577:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:30","nodeType":"YulIdentifier","src":"562:3:30"},"nativeSrc":"562:17:30","nodeType":"YulFunctionCall","src":"562:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:30","nodeType":"YulIdentifier","src":"509:43:30"},"nativeSrc":"509:71:30","nodeType":"YulFunctionCall","src":"509:71:30"},"nativeSrc":"509:71:30","nodeType":"YulExpressionStatement","src":"509:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:30","nodeType":"YulTypedName","src":"435:9:30","type":""},{"name":"value0","nativeSrc":"447:6:30","nodeType":"YulTypedName","src":"447:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:30","nodeType":"YulTypedName","src":"458:4:30","type":""}],"src":"365:222:30"},{"body":{"nativeSrc":"633:35:30","nodeType":"YulBlock","src":"633:35:30","statements":[{"nativeSrc":"643:19:30","nodeType":"YulAssignment","src":"643:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"659:2:30","nodeType":"YulLiteral","src":"659:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"653:5:30","nodeType":"YulIdentifier","src":"653:5:30"},"nativeSrc":"653:9:30","nodeType":"YulFunctionCall","src":"653:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"643:6:30","nodeType":"YulIdentifier","src":"643:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"593:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"626:6:30","nodeType":"YulTypedName","src":"626:6:30","type":""}],"src":"593:75:30"},{"body":{"nativeSrc":"763:28:30","nodeType":"YulBlock","src":"763:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"780:1:30","nodeType":"YulLiteral","src":"780:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"783:1:30","nodeType":"YulLiteral","src":"783:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"773:6:30","nodeType":"YulIdentifier","src":"773:6:30"},"nativeSrc":"773:12:30","nodeType":"YulFunctionCall","src":"773:12:30"},"nativeSrc":"773:12:30","nodeType":"YulExpressionStatement","src":"773:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"674:117:30","nodeType":"YulFunctionDefinition","src":"674:117:30"},{"body":{"nativeSrc":"886:28:30","nodeType":"YulBlock","src":"886:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"903:1:30","nodeType":"YulLiteral","src":"903:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"906:1:30","nodeType":"YulLiteral","src":"906:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"896:6:30","nodeType":"YulIdentifier","src":"896:6:30"},"nativeSrc":"896:12:30","nodeType":"YulFunctionCall","src":"896:12:30"},"nativeSrc":"896:12:30","nodeType":"YulExpressionStatement","src":"896:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"797:117:30","nodeType":"YulFunctionDefinition","src":"797:117:30"},{"body":{"nativeSrc":"965:32:30","nodeType":"YulBlock","src":"965:32:30","statements":[{"nativeSrc":"975:16:30","nodeType":"YulAssignment","src":"975:16:30","value":{"name":"value","nativeSrc":"986:5:30","nodeType":"YulIdentifier","src":"986:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"975:7:30","nodeType":"YulIdentifier","src":"975:7:30"}]}]},"name":"cleanup_t_uint256","nativeSrc":"920:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"947:5:30","nodeType":"YulTypedName","src":"947:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"957:7:30","nodeType":"YulTypedName","src":"957:7:30","type":""}],"src":"920:77:30"},{"body":{"nativeSrc":"1046:79:30","nodeType":"YulBlock","src":"1046:79:30","statements":[{"body":{"nativeSrc":"1103:16:30","nodeType":"YulBlock","src":"1103:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1112:1:30","nodeType":"YulLiteral","src":"1112:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1115:1:30","nodeType":"YulLiteral","src":"1115:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1105:6:30","nodeType":"YulIdentifier","src":"1105:6:30"},"nativeSrc":"1105:12:30","nodeType":"YulFunctionCall","src":"1105:12:30"},"nativeSrc":"1105:12:30","nodeType":"YulExpressionStatement","src":"1105:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1069:5:30","nodeType":"YulIdentifier","src":"1069:5:30"},{"arguments":[{"name":"value","nativeSrc":"1094:5:30","nodeType":"YulIdentifier","src":"1094:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1076:17:30","nodeType":"YulIdentifier","src":"1076:17:30"},"nativeSrc":"1076:24:30","nodeType":"YulFunctionCall","src":"1076:24:30"}],"functionName":{"name":"eq","nativeSrc":"1066:2:30","nodeType":"YulIdentifier","src":"1066:2:30"},"nativeSrc":"1066:35:30","nodeType":"YulFunctionCall","src":"1066:35:30"}],"functionName":{"name":"iszero","nativeSrc":"1059:6:30","nodeType":"YulIdentifier","src":"1059:6:30"},"nativeSrc":"1059:43:30","nodeType":"YulFunctionCall","src":"1059:43:30"},"nativeSrc":"1056:63:30","nodeType":"YulIf","src":"1056:63:30"}]},"name":"validator_revert_t_uint256","nativeSrc":"1003:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1039:5:30","nodeType":"YulTypedName","src":"1039:5:30","type":""}],"src":"1003:122:30"},{"body":{"nativeSrc":"1183:87:30","nodeType":"YulBlock","src":"1183:87:30","statements":[{"nativeSrc":"1193:29:30","nodeType":"YulAssignment","src":"1193:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"1215:6:30","nodeType":"YulIdentifier","src":"1215:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"1202:12:30","nodeType":"YulIdentifier","src":"1202:12:30"},"nativeSrc":"1202:20:30","nodeType":"YulFunctionCall","src":"1202:20:30"},"variableNames":[{"name":"value","nativeSrc":"1193:5:30","nodeType":"YulIdentifier","src":"1193:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1258:5:30","nodeType":"YulIdentifier","src":"1258:5:30"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1231:26:30","nodeType":"YulIdentifier","src":"1231:26:30"},"nativeSrc":"1231:33:30","nodeType":"YulFunctionCall","src":"1231:33:30"},"nativeSrc":"1231:33:30","nodeType":"YulExpressionStatement","src":"1231:33:30"}]},"name":"abi_decode_t_uint256","nativeSrc":"1131:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1161:6:30","nodeType":"YulTypedName","src":"1161:6:30","type":""},{"name":"end","nativeSrc":"1169:3:30","nodeType":"YulTypedName","src":"1169:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1177:5:30","nodeType":"YulTypedName","src":"1177:5:30","type":""}],"src":"1131:139:30"},{"body":{"nativeSrc":"1342:263:30","nodeType":"YulBlock","src":"1342:263:30","statements":[{"body":{"nativeSrc":"1388:83:30","nodeType":"YulBlock","src":"1388:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1390:77:30","nodeType":"YulIdentifier","src":"1390:77:30"},"nativeSrc":"1390:79:30","nodeType":"YulFunctionCall","src":"1390:79:30"},"nativeSrc":"1390:79:30","nodeType":"YulExpressionStatement","src":"1390:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1363:7:30","nodeType":"YulIdentifier","src":"1363:7:30"},{"name":"headStart","nativeSrc":"1372:9:30","nodeType":"YulIdentifier","src":"1372:9:30"}],"functionName":{"name":"sub","nativeSrc":"1359:3:30","nodeType":"YulIdentifier","src":"1359:3:30"},"nativeSrc":"1359:23:30","nodeType":"YulFunctionCall","src":"1359:23:30"},{"kind":"number","nativeSrc":"1384:2:30","nodeType":"YulLiteral","src":"1384:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1355:3:30","nodeType":"YulIdentifier","src":"1355:3:30"},"nativeSrc":"1355:32:30","nodeType":"YulFunctionCall","src":"1355:32:30"},"nativeSrc":"1352:119:30","nodeType":"YulIf","src":"1352:119:30"},{"nativeSrc":"1481:117:30","nodeType":"YulBlock","src":"1481:117:30","statements":[{"nativeSrc":"1496:15:30","nodeType":"YulVariableDeclaration","src":"1496:15:30","value":{"kind":"number","nativeSrc":"1510:1:30","nodeType":"YulLiteral","src":"1510:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1500:6:30","nodeType":"YulTypedName","src":"1500:6:30","type":""}]},{"nativeSrc":"1525:63:30","nodeType":"YulAssignment","src":"1525:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1560:9:30","nodeType":"YulIdentifier","src":"1560:9:30"},{"name":"offset","nativeSrc":"1571:6:30","nodeType":"YulIdentifier","src":"1571:6:30"}],"functionName":{"name":"add","nativeSrc":"1556:3:30","nodeType":"YulIdentifier","src":"1556:3:30"},"nativeSrc":"1556:22:30","nodeType":"YulFunctionCall","src":"1556:22:30"},{"name":"dataEnd","nativeSrc":"1580:7:30","nodeType":"YulIdentifier","src":"1580:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1535:20:30","nodeType":"YulIdentifier","src":"1535:20:30"},"nativeSrc":"1535:53:30","nodeType":"YulFunctionCall","src":"1535:53:30"},"variableNames":[{"name":"value0","nativeSrc":"1525:6:30","nodeType":"YulIdentifier","src":"1525:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1276:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1312:9:30","nodeType":"YulTypedName","src":"1312:9:30","type":""},{"name":"dataEnd","nativeSrc":"1323:7:30","nodeType":"YulTypedName","src":"1323:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1335:6:30","nodeType":"YulTypedName","src":"1335:6:30","type":""}],"src":"1276:329:30"},{"body":{"nativeSrc":"1653:48:30","nodeType":"YulBlock","src":"1653:48:30","statements":[{"nativeSrc":"1663:32:30","nodeType":"YulAssignment","src":"1663:32:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1688:5:30","nodeType":"YulIdentifier","src":"1688:5:30"}],"functionName":{"name":"iszero","nativeSrc":"1681:6:30","nodeType":"YulIdentifier","src":"1681:6:30"},"nativeSrc":"1681:13:30","nodeType":"YulFunctionCall","src":"1681:13:30"}],"functionName":{"name":"iszero","nativeSrc":"1674:6:30","nodeType":"YulIdentifier","src":"1674:6:30"},"nativeSrc":"1674:21:30","nodeType":"YulFunctionCall","src":"1674:21:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1663:7:30","nodeType":"YulIdentifier","src":"1663:7:30"}]}]},"name":"cleanup_t_bool","nativeSrc":"1611:90:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1635:5:30","nodeType":"YulTypedName","src":"1635:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1645:7:30","nodeType":"YulTypedName","src":"1645:7:30","type":""}],"src":"1611:90:30"},{"body":{"nativeSrc":"1766:50:30","nodeType":"YulBlock","src":"1766:50:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1783:3:30","nodeType":"YulIdentifier","src":"1783:3:30"},{"arguments":[{"name":"value","nativeSrc":"1803:5:30","nodeType":"YulIdentifier","src":"1803:5:30"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1788:14:30","nodeType":"YulIdentifier","src":"1788:14:30"},"nativeSrc":"1788:21:30","nodeType":"YulFunctionCall","src":"1788:21:30"}],"functionName":{"name":"mstore","nativeSrc":"1776:6:30","nodeType":"YulIdentifier","src":"1776:6:30"},"nativeSrc":"1776:34:30","nodeType":"YulFunctionCall","src":"1776:34:30"},"nativeSrc":"1776:34:30","nodeType":"YulExpressionStatement","src":"1776:34:30"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1707:109:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1754:5:30","nodeType":"YulTypedName","src":"1754:5:30","type":""},{"name":"pos","nativeSrc":"1761:3:30","nodeType":"YulTypedName","src":"1761:3:30","type":""}],"src":"1707:109:30"},{"body":{"nativeSrc":"1914:118:30","nodeType":"YulBlock","src":"1914:118:30","statements":[{"nativeSrc":"1924:26:30","nodeType":"YulAssignment","src":"1924:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1936:9:30","nodeType":"YulIdentifier","src":"1936:9:30"},{"kind":"number","nativeSrc":"1947:2:30","nodeType":"YulLiteral","src":"1947:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1932:3:30","nodeType":"YulIdentifier","src":"1932:3:30"},"nativeSrc":"1932:18:30","nodeType":"YulFunctionCall","src":"1932:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1924:4:30","nodeType":"YulIdentifier","src":"1924:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1998:6:30","nodeType":"YulIdentifier","src":"1998:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"2011:9:30","nodeType":"YulIdentifier","src":"2011:9:30"},{"kind":"number","nativeSrc":"2022:1:30","nodeType":"YulLiteral","src":"2022:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2007:3:30","nodeType":"YulIdentifier","src":"2007:3:30"},"nativeSrc":"2007:17:30","nodeType":"YulFunctionCall","src":"2007:17:30"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1960:37:30","nodeType":"YulIdentifier","src":"1960:37:30"},"nativeSrc":"1960:65:30","nodeType":"YulFunctionCall","src":"1960:65:30"},"nativeSrc":"1960:65:30","nodeType":"YulExpressionStatement","src":"1960:65:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1822:210:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1886:9:30","nodeType":"YulTypedName","src":"1886:9:30","type":""},{"name":"value0","nativeSrc":"1898:6:30","nodeType":"YulTypedName","src":"1898:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1909:4:30","nodeType":"YulTypedName","src":"1909:4:30","type":""}],"src":"1822:210:30"},{"body":{"nativeSrc":"2081:79:30","nodeType":"YulBlock","src":"2081:79:30","statements":[{"body":{"nativeSrc":"2138:16:30","nodeType":"YulBlock","src":"2138:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2147:1:30","nodeType":"YulLiteral","src":"2147:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"2150:1:30","nodeType":"YulLiteral","src":"2150:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2140:6:30","nodeType":"YulIdentifier","src":"2140:6:30"},"nativeSrc":"2140:12:30","nodeType":"YulFunctionCall","src":"2140:12:30"},"nativeSrc":"2140:12:30","nodeType":"YulExpressionStatement","src":"2140:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2104:5:30","nodeType":"YulIdentifier","src":"2104:5:30"},{"arguments":[{"name":"value","nativeSrc":"2129:5:30","nodeType":"YulIdentifier","src":"2129:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2111:17:30","nodeType":"YulIdentifier","src":"2111:17:30"},"nativeSrc":"2111:24:30","nodeType":"YulFunctionCall","src":"2111:24:30"}],"functionName":{"name":"eq","nativeSrc":"2101:2:30","nodeType":"YulIdentifier","src":"2101:2:30"},"nativeSrc":"2101:35:30","nodeType":"YulFunctionCall","src":"2101:35:30"}],"functionName":{"name":"iszero","nativeSrc":"2094:6:30","nodeType":"YulIdentifier","src":"2094:6:30"},"nativeSrc":"2094:43:30","nodeType":"YulFunctionCall","src":"2094:43:30"},"nativeSrc":"2091:63:30","nodeType":"YulIf","src":"2091:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"2038:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2074:5:30","nodeType":"YulTypedName","src":"2074:5:30","type":""}],"src":"2038:122:30"},{"body":{"nativeSrc":"2218:87:30","nodeType":"YulBlock","src":"2218:87:30","statements":[{"nativeSrc":"2228:29:30","nodeType":"YulAssignment","src":"2228:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"2250:6:30","nodeType":"YulIdentifier","src":"2250:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"2237:12:30","nodeType":"YulIdentifier","src":"2237:12:30"},"nativeSrc":"2237:20:30","nodeType":"YulFunctionCall","src":"2237:20:30"},"variableNames":[{"name":"value","nativeSrc":"2228:5:30","nodeType":"YulIdentifier","src":"2228:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2293:5:30","nodeType":"YulIdentifier","src":"2293:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2266:26:30","nodeType":"YulIdentifier","src":"2266:26:30"},"nativeSrc":"2266:33:30","nodeType":"YulFunctionCall","src":"2266:33:30"},"nativeSrc":"2266:33:30","nodeType":"YulExpressionStatement","src":"2266:33:30"}]},"name":"abi_decode_t_address","nativeSrc":"2166:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2196:6:30","nodeType":"YulTypedName","src":"2196:6:30","type":""},{"name":"end","nativeSrc":"2204:3:30","nodeType":"YulTypedName","src":"2204:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2212:5:30","nodeType":"YulTypedName","src":"2212:5:30","type":""}],"src":"2166:139:30"},{"body":{"nativeSrc":"2428:648:30","nodeType":"YulBlock","src":"2428:648:30","statements":[{"body":{"nativeSrc":"2475:83:30","nodeType":"YulBlock","src":"2475:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2477:77:30","nodeType":"YulIdentifier","src":"2477:77:30"},"nativeSrc":"2477:79:30","nodeType":"YulFunctionCall","src":"2477:79:30"},"nativeSrc":"2477:79:30","nodeType":"YulExpressionStatement","src":"2477:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2449:7:30","nodeType":"YulIdentifier","src":"2449:7:30"},{"name":"headStart","nativeSrc":"2458:9:30","nodeType":"YulIdentifier","src":"2458:9:30"}],"functionName":{"name":"sub","nativeSrc":"2445:3:30","nodeType":"YulIdentifier","src":"2445:3:30"},"nativeSrc":"2445:23:30","nodeType":"YulFunctionCall","src":"2445:23:30"},{"kind":"number","nativeSrc":"2470:3:30","nodeType":"YulLiteral","src":"2470:3:30","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"2441:3:30","nodeType":"YulIdentifier","src":"2441:3:30"},"nativeSrc":"2441:33:30","nodeType":"YulFunctionCall","src":"2441:33:30"},"nativeSrc":"2438:120:30","nodeType":"YulIf","src":"2438:120:30"},{"nativeSrc":"2568:117:30","nodeType":"YulBlock","src":"2568:117:30","statements":[{"nativeSrc":"2583:15:30","nodeType":"YulVariableDeclaration","src":"2583:15:30","value":{"kind":"number","nativeSrc":"2597:1:30","nodeType":"YulLiteral","src":"2597:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2587:6:30","nodeType":"YulTypedName","src":"2587:6:30","type":""}]},{"nativeSrc":"2612:63:30","nodeType":"YulAssignment","src":"2612:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2647:9:30","nodeType":"YulIdentifier","src":"2647:9:30"},{"name":"offset","nativeSrc":"2658:6:30","nodeType":"YulIdentifier","src":"2658:6:30"}],"functionName":{"name":"add","nativeSrc":"2643:3:30","nodeType":"YulIdentifier","src":"2643:3:30"},"nativeSrc":"2643:22:30","nodeType":"YulFunctionCall","src":"2643:22:30"},{"name":"dataEnd","nativeSrc":"2667:7:30","nodeType":"YulIdentifier","src":"2667:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2622:20:30","nodeType":"YulIdentifier","src":"2622:20:30"},"nativeSrc":"2622:53:30","nodeType":"YulFunctionCall","src":"2622:53:30"},"variableNames":[{"name":"value0","nativeSrc":"2612:6:30","nodeType":"YulIdentifier","src":"2612:6:30"}]}]},{"nativeSrc":"2695:118:30","nodeType":"YulBlock","src":"2695:118:30","statements":[{"nativeSrc":"2710:16:30","nodeType":"YulVariableDeclaration","src":"2710:16:30","value":{"kind":"number","nativeSrc":"2724:2:30","nodeType":"YulLiteral","src":"2724:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2714:6:30","nodeType":"YulTypedName","src":"2714:6:30","type":""}]},{"nativeSrc":"2740:63:30","nodeType":"YulAssignment","src":"2740:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2775:9:30","nodeType":"YulIdentifier","src":"2775:9:30"},{"name":"offset","nativeSrc":"2786:6:30","nodeType":"YulIdentifier","src":"2786:6:30"}],"functionName":{"name":"add","nativeSrc":"2771:3:30","nodeType":"YulIdentifier","src":"2771:3:30"},"nativeSrc":"2771:22:30","nodeType":"YulFunctionCall","src":"2771:22:30"},{"name":"dataEnd","nativeSrc":"2795:7:30","nodeType":"YulIdentifier","src":"2795:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2750:20:30","nodeType":"YulIdentifier","src":"2750:20:30"},"nativeSrc":"2750:53:30","nodeType":"YulFunctionCall","src":"2750:53:30"},"variableNames":[{"name":"value1","nativeSrc":"2740:6:30","nodeType":"YulIdentifier","src":"2740:6:30"}]}]},{"nativeSrc":"2823:118:30","nodeType":"YulBlock","src":"2823:118:30","statements":[{"nativeSrc":"2838:16:30","nodeType":"YulVariableDeclaration","src":"2838:16:30","value":{"kind":"number","nativeSrc":"2852:2:30","nodeType":"YulLiteral","src":"2852:2:30","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"2842:6:30","nodeType":"YulTypedName","src":"2842:6:30","type":""}]},{"nativeSrc":"2868:63:30","nodeType":"YulAssignment","src":"2868:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2903:9:30","nodeType":"YulIdentifier","src":"2903:9:30"},{"name":"offset","nativeSrc":"2914:6:30","nodeType":"YulIdentifier","src":"2914:6:30"}],"functionName":{"name":"add","nativeSrc":"2899:3:30","nodeType":"YulIdentifier","src":"2899:3:30"},"nativeSrc":"2899:22:30","nodeType":"YulFunctionCall","src":"2899:22:30"},{"name":"dataEnd","nativeSrc":"2923:7:30","nodeType":"YulIdentifier","src":"2923:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2878:20:30","nodeType":"YulIdentifier","src":"2878:20:30"},"nativeSrc":"2878:53:30","nodeType":"YulFunctionCall","src":"2878:53:30"},"variableNames":[{"name":"value2","nativeSrc":"2868:6:30","nodeType":"YulIdentifier","src":"2868:6:30"}]}]},{"nativeSrc":"2951:118:30","nodeType":"YulBlock","src":"2951:118:30","statements":[{"nativeSrc":"2966:16:30","nodeType":"YulVariableDeclaration","src":"2966:16:30","value":{"kind":"number","nativeSrc":"2980:2:30","nodeType":"YulLiteral","src":"2980:2:30","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"2970:6:30","nodeType":"YulTypedName","src":"2970:6:30","type":""}]},{"nativeSrc":"2996:63:30","nodeType":"YulAssignment","src":"2996:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3031:9:30","nodeType":"YulIdentifier","src":"3031:9:30"},{"name":"offset","nativeSrc":"3042:6:30","nodeType":"YulIdentifier","src":"3042:6:30"}],"functionName":{"name":"add","nativeSrc":"3027:3:30","nodeType":"YulIdentifier","src":"3027:3:30"},"nativeSrc":"3027:22:30","nodeType":"YulFunctionCall","src":"3027:22:30"},{"name":"dataEnd","nativeSrc":"3051:7:30","nodeType":"YulIdentifier","src":"3051:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3006:20:30","nodeType":"YulIdentifier","src":"3006:20:30"},"nativeSrc":"3006:53:30","nodeType":"YulFunctionCall","src":"3006:53:30"},"variableNames":[{"name":"value3","nativeSrc":"2996:6:30","nodeType":"YulIdentifier","src":"2996:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256","nativeSrc":"2311:765:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2374:9:30","nodeType":"YulTypedName","src":"2374:9:30","type":""},{"name":"dataEnd","nativeSrc":"2385:7:30","nodeType":"YulTypedName","src":"2385:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2397:6:30","nodeType":"YulTypedName","src":"2397:6:30","type":""},{"name":"value1","nativeSrc":"2405:6:30","nodeType":"YulTypedName","src":"2405:6:30","type":""},{"name":"value2","nativeSrc":"2413:6:30","nodeType":"YulTypedName","src":"2413:6:30","type":""},{"name":"value3","nativeSrc":"2421:6:30","nodeType":"YulTypedName","src":"2421:6:30","type":""}],"src":"2311:765:30"},{"body":{"nativeSrc":"3148:263:30","nodeType":"YulBlock","src":"3148:263:30","statements":[{"body":{"nativeSrc":"3194:83:30","nodeType":"YulBlock","src":"3194:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3196:77:30","nodeType":"YulIdentifier","src":"3196:77:30"},"nativeSrc":"3196:79:30","nodeType":"YulFunctionCall","src":"3196:79:30"},"nativeSrc":"3196:79:30","nodeType":"YulExpressionStatement","src":"3196:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3169:7:30","nodeType":"YulIdentifier","src":"3169:7:30"},{"name":"headStart","nativeSrc":"3178:9:30","nodeType":"YulIdentifier","src":"3178:9:30"}],"functionName":{"name":"sub","nativeSrc":"3165:3:30","nodeType":"YulIdentifier","src":"3165:3:30"},"nativeSrc":"3165:23:30","nodeType":"YulFunctionCall","src":"3165:23:30"},{"kind":"number","nativeSrc":"3190:2:30","nodeType":"YulLiteral","src":"3190:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3161:3:30","nodeType":"YulIdentifier","src":"3161:3:30"},"nativeSrc":"3161:32:30","nodeType":"YulFunctionCall","src":"3161:32:30"},"nativeSrc":"3158:119:30","nodeType":"YulIf","src":"3158:119:30"},{"nativeSrc":"3287:117:30","nodeType":"YulBlock","src":"3287:117:30","statements":[{"nativeSrc":"3302:15:30","nodeType":"YulVariableDeclaration","src":"3302:15:30","value":{"kind":"number","nativeSrc":"3316:1:30","nodeType":"YulLiteral","src":"3316:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3306:6:30","nodeType":"YulTypedName","src":"3306:6:30","type":""}]},{"nativeSrc":"3331:63:30","nodeType":"YulAssignment","src":"3331:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3366:9:30","nodeType":"YulIdentifier","src":"3366:9:30"},{"name":"offset","nativeSrc":"3377:6:30","nodeType":"YulIdentifier","src":"3377:6:30"}],"functionName":{"name":"add","nativeSrc":"3362:3:30","nodeType":"YulIdentifier","src":"3362:3:30"},"nativeSrc":"3362:22:30","nodeType":"YulFunctionCall","src":"3362:22:30"},{"name":"dataEnd","nativeSrc":"3386:7:30","nodeType":"YulIdentifier","src":"3386:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3341:20:30","nodeType":"YulIdentifier","src":"3341:20:30"},"nativeSrc":"3341:53:30","nodeType":"YulFunctionCall","src":"3341:53:30"},"variableNames":[{"name":"value0","nativeSrc":"3331:6:30","nodeType":"YulIdentifier","src":"3331:6:30"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3082:329:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3118:9:30","nodeType":"YulTypedName","src":"3118:9:30","type":""},{"name":"dataEnd","nativeSrc":"3129:7:30","nodeType":"YulTypedName","src":"3129:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3141:6:30","nodeType":"YulTypedName","src":"3141:6:30","type":""}],"src":"3082:329:30"},{"body":{"nativeSrc":"3513:73:30","nodeType":"YulBlock","src":"3513:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:30","nodeType":"YulIdentifier","src":"3530:3:30"},{"name":"length","nativeSrc":"3535:6:30","nodeType":"YulIdentifier","src":"3535:6:30"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:30","nodeType":"YulIdentifier","src":"3523:6:30"},"nativeSrc":"3523:19:30","nodeType":"YulFunctionCall","src":"3523:19:30"},"nativeSrc":"3523:19:30","nodeType":"YulExpressionStatement","src":"3523:19:30"},{"nativeSrc":"3551:29:30","nodeType":"YulAssignment","src":"3551:29:30","value":{"arguments":[{"name":"pos","nativeSrc":"3570:3:30","nodeType":"YulIdentifier","src":"3570:3:30"},{"kind":"number","nativeSrc":"3575:4:30","nodeType":"YulLiteral","src":"3575:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3566:3:30","nodeType":"YulIdentifier","src":"3566:3:30"},"nativeSrc":"3566:14:30","nodeType":"YulFunctionCall","src":"3566:14:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"3551:11:30","nodeType":"YulIdentifier","src":"3551:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3417:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3485:3:30","nodeType":"YulTypedName","src":"3485:3:30","type":""},{"name":"length","nativeSrc":"3490:6:30","nodeType":"YulTypedName","src":"3490:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3501:11:30","nodeType":"YulTypedName","src":"3501:11:30","type":""}],"src":"3417:169:30"},{"body":{"nativeSrc":"3698:68:30","nodeType":"YulBlock","src":"3698:68:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3720:6:30","nodeType":"YulIdentifier","src":"3720:6:30"},{"kind":"number","nativeSrc":"3728:1:30","nodeType":"YulLiteral","src":"3728:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3716:3:30","nodeType":"YulIdentifier","src":"3716:3:30"},"nativeSrc":"3716:14:30","nodeType":"YulFunctionCall","src":"3716:14:30"},{"hexValue":"4d696e744272696467653a20696e76616c69642075736572","kind":"string","nativeSrc":"3732:26:30","nodeType":"YulLiteral","src":"3732:26:30","type":"","value":"MintBridge: invalid user"}],"functionName":{"name":"mstore","nativeSrc":"3709:6:30","nodeType":"YulIdentifier","src":"3709:6:30"},"nativeSrc":"3709:50:30","nodeType":"YulFunctionCall","src":"3709:50:30"},"nativeSrc":"3709:50:30","nodeType":"YulExpressionStatement","src":"3709:50:30"}]},"name":"store_literal_in_memory_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201","nativeSrc":"3592:174:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3690:6:30","nodeType":"YulTypedName","src":"3690:6:30","type":""}],"src":"3592:174:30"},{"body":{"nativeSrc":"3918:220:30","nodeType":"YulBlock","src":"3918:220:30","statements":[{"nativeSrc":"3928:74:30","nodeType":"YulAssignment","src":"3928:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"3994:3:30","nodeType":"YulIdentifier","src":"3994:3:30"},{"kind":"number","nativeSrc":"3999:2:30","nodeType":"YulLiteral","src":"3999:2:30","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3935:58:30","nodeType":"YulIdentifier","src":"3935:58:30"},"nativeSrc":"3935:67:30","nodeType":"YulFunctionCall","src":"3935:67:30"},"variableNames":[{"name":"pos","nativeSrc":"3928:3:30","nodeType":"YulIdentifier","src":"3928:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4100:3:30","nodeType":"YulIdentifier","src":"4100:3:30"}],"functionName":{"name":"store_literal_in_memory_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201","nativeSrc":"4011:88:30","nodeType":"YulIdentifier","src":"4011:88:30"},"nativeSrc":"4011:93:30","nodeType":"YulFunctionCall","src":"4011:93:30"},"nativeSrc":"4011:93:30","nodeType":"YulExpressionStatement","src":"4011:93:30"},{"nativeSrc":"4113:19:30","nodeType":"YulAssignment","src":"4113:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"4124:3:30","nodeType":"YulIdentifier","src":"4124:3:30"},{"kind":"number","nativeSrc":"4129:2:30","nodeType":"YulLiteral","src":"4129:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4120:3:30","nodeType":"YulIdentifier","src":"4120:3:30"},"nativeSrc":"4120:12:30","nodeType":"YulFunctionCall","src":"4120:12:30"},"variableNames":[{"name":"end","nativeSrc":"4113:3:30","nodeType":"YulIdentifier","src":"4113:3:30"}]}]},"name":"abi_encode_t_stringliteral_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201_to_t_string_memory_ptr_fromStack","nativeSrc":"3772:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3906:3:30","nodeType":"YulTypedName","src":"3906:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3914:3:30","nodeType":"YulTypedName","src":"3914:3:30","type":""}],"src":"3772:366:30"},{"body":{"nativeSrc":"4315:248:30","nodeType":"YulBlock","src":"4315:248:30","statements":[{"nativeSrc":"4325:26:30","nodeType":"YulAssignment","src":"4325:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"4337:9:30","nodeType":"YulIdentifier","src":"4337:9:30"},{"kind":"number","nativeSrc":"4348:2:30","nodeType":"YulLiteral","src":"4348:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4333:3:30","nodeType":"YulIdentifier","src":"4333:3:30"},"nativeSrc":"4333:18:30","nodeType":"YulFunctionCall","src":"4333:18:30"},"variableNames":[{"name":"tail","nativeSrc":"4325:4:30","nodeType":"YulIdentifier","src":"4325:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:30","nodeType":"YulIdentifier","src":"4372:9:30"},{"kind":"number","nativeSrc":"4383:1:30","nodeType":"YulLiteral","src":"4383:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4368:3:30","nodeType":"YulIdentifier","src":"4368:3:30"},"nativeSrc":"4368:17:30","nodeType":"YulFunctionCall","src":"4368:17:30"},{"arguments":[{"name":"tail","nativeSrc":"4391:4:30","nodeType":"YulIdentifier","src":"4391:4:30"},{"name":"headStart","nativeSrc":"4397:9:30","nodeType":"YulIdentifier","src":"4397:9:30"}],"functionName":{"name":"sub","nativeSrc":"4387:3:30","nodeType":"YulIdentifier","src":"4387:3:30"},"nativeSrc":"4387:20:30","nodeType":"YulFunctionCall","src":"4387:20:30"}],"functionName":{"name":"mstore","nativeSrc":"4361:6:30","nodeType":"YulIdentifier","src":"4361:6:30"},"nativeSrc":"4361:47:30","nodeType":"YulFunctionCall","src":"4361:47:30"},"nativeSrc":"4361:47:30","nodeType":"YulExpressionStatement","src":"4361:47:30"},{"nativeSrc":"4417:139:30","nodeType":"YulAssignment","src":"4417:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"4551:4:30","nodeType":"YulIdentifier","src":"4551:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201_to_t_string_memory_ptr_fromStack","nativeSrc":"4425:124:30","nodeType":"YulIdentifier","src":"4425:124:30"},"nativeSrc":"4425:131:30","nodeType":"YulFunctionCall","src":"4425:131:30"},"variableNames":[{"name":"tail","nativeSrc":"4417:4:30","nodeType":"YulIdentifier","src":"4417:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4144:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4295:9:30","nodeType":"YulTypedName","src":"4295:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4310:4:30","nodeType":"YulTypedName","src":"4310:4:30","type":""}],"src":"4144:419:30"},{"body":{"nativeSrc":"4675:74:30","nodeType":"YulBlock","src":"4675:74:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4697:6:30","nodeType":"YulIdentifier","src":"4697:6:30"},{"kind":"number","nativeSrc":"4705:1:30","nodeType":"YulLiteral","src":"4705:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4693:3:30","nodeType":"YulIdentifier","src":"4693:3:30"},"nativeSrc":"4693:14:30","nodeType":"YulFunctionCall","src":"4693:14:30"},{"hexValue":"4d696e744272696467653a206e6f6e636520616c72656164792075736564","kind":"string","nativeSrc":"4709:32:30","nodeType":"YulLiteral","src":"4709:32:30","type":"","value":"MintBridge: nonce already used"}],"functionName":{"name":"mstore","nativeSrc":"4686:6:30","nodeType":"YulIdentifier","src":"4686:6:30"},"nativeSrc":"4686:56:30","nodeType":"YulFunctionCall","src":"4686:56:30"},"nativeSrc":"4686:56:30","nodeType":"YulExpressionStatement","src":"4686:56:30"}]},"name":"store_literal_in_memory_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2","nativeSrc":"4569:180:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4667:6:30","nodeType":"YulTypedName","src":"4667:6:30","type":""}],"src":"4569:180:30"},{"body":{"nativeSrc":"4901:220:30","nodeType":"YulBlock","src":"4901:220:30","statements":[{"nativeSrc":"4911:74:30","nodeType":"YulAssignment","src":"4911:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"4977:3:30","nodeType":"YulIdentifier","src":"4977:3:30"},{"kind":"number","nativeSrc":"4982:2:30","nodeType":"YulLiteral","src":"4982:2:30","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4918:58:30","nodeType":"YulIdentifier","src":"4918:58:30"},"nativeSrc":"4918:67:30","nodeType":"YulFunctionCall","src":"4918:67:30"},"variableNames":[{"name":"pos","nativeSrc":"4911:3:30","nodeType":"YulIdentifier","src":"4911:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5083:3:30","nodeType":"YulIdentifier","src":"5083:3:30"}],"functionName":{"name":"store_literal_in_memory_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2","nativeSrc":"4994:88:30","nodeType":"YulIdentifier","src":"4994:88:30"},"nativeSrc":"4994:93:30","nodeType":"YulFunctionCall","src":"4994:93:30"},"nativeSrc":"4994:93:30","nodeType":"YulExpressionStatement","src":"4994:93:30"},{"nativeSrc":"5096:19:30","nodeType":"YulAssignment","src":"5096:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"5107:3:30","nodeType":"YulIdentifier","src":"5107:3:30"},{"kind":"number","nativeSrc":"5112:2:30","nodeType":"YulLiteral","src":"5112:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5103:3:30","nodeType":"YulIdentifier","src":"5103:3:30"},"nativeSrc":"5103:12:30","nodeType":"YulFunctionCall","src":"5103:12:30"},"variableNames":[{"name":"end","nativeSrc":"5096:3:30","nodeType":"YulIdentifier","src":"5096:3:30"}]}]},"name":"abi_encode_t_stringliteral_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2_to_t_string_memory_ptr_fromStack","nativeSrc":"4755:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4889:3:30","nodeType":"YulTypedName","src":"4889:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4897:3:30","nodeType":"YulTypedName","src":"4897:3:30","type":""}],"src":"4755:366:30"},{"body":{"nativeSrc":"5298:248:30","nodeType":"YulBlock","src":"5298:248:30","statements":[{"nativeSrc":"5308:26:30","nodeType":"YulAssignment","src":"5308:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"5320:9:30","nodeType":"YulIdentifier","src":"5320:9:30"},{"kind":"number","nativeSrc":"5331:2:30","nodeType":"YulLiteral","src":"5331:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5316:3:30","nodeType":"YulIdentifier","src":"5316:3:30"},"nativeSrc":"5316:18:30","nodeType":"YulFunctionCall","src":"5316:18:30"},"variableNames":[{"name":"tail","nativeSrc":"5308:4:30","nodeType":"YulIdentifier","src":"5308:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5355:9:30","nodeType":"YulIdentifier","src":"5355:9:30"},{"kind":"number","nativeSrc":"5366:1:30","nodeType":"YulLiteral","src":"5366:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5351:3:30","nodeType":"YulIdentifier","src":"5351:3:30"},"nativeSrc":"5351:17:30","nodeType":"YulFunctionCall","src":"5351:17:30"},{"arguments":[{"name":"tail","nativeSrc":"5374:4:30","nodeType":"YulIdentifier","src":"5374:4:30"},{"name":"headStart","nativeSrc":"5380:9:30","nodeType":"YulIdentifier","src":"5380:9:30"}],"functionName":{"name":"sub","nativeSrc":"5370:3:30","nodeType":"YulIdentifier","src":"5370:3:30"},"nativeSrc":"5370:20:30","nodeType":"YulFunctionCall","src":"5370:20:30"}],"functionName":{"name":"mstore","nativeSrc":"5344:6:30","nodeType":"YulIdentifier","src":"5344:6:30"},"nativeSrc":"5344:47:30","nodeType":"YulFunctionCall","src":"5344:47:30"},"nativeSrc":"5344:47:30","nodeType":"YulExpressionStatement","src":"5344:47:30"},{"nativeSrc":"5400:139:30","nodeType":"YulAssignment","src":"5400:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"5534:4:30","nodeType":"YulIdentifier","src":"5534:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2_to_t_string_memory_ptr_fromStack","nativeSrc":"5408:124:30","nodeType":"YulIdentifier","src":"5408:124:30"},"nativeSrc":"5408:131:30","nodeType":"YulFunctionCall","src":"5408:131:30"},"variableNames":[{"name":"tail","nativeSrc":"5400:4:30","nodeType":"YulIdentifier","src":"5400:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5127:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5278:9:30","nodeType":"YulTypedName","src":"5278:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5293:4:30","nodeType":"YulTypedName","src":"5293:4:30","type":""}],"src":"5127:419:30"},{"body":{"nativeSrc":"5617:53:30","nodeType":"YulBlock","src":"5617:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5634:3:30","nodeType":"YulIdentifier","src":"5634:3:30"},{"arguments":[{"name":"value","nativeSrc":"5657:5:30","nodeType":"YulIdentifier","src":"5657:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5639:17:30","nodeType":"YulIdentifier","src":"5639:17:30"},"nativeSrc":"5639:24:30","nodeType":"YulFunctionCall","src":"5639:24:30"}],"functionName":{"name":"mstore","nativeSrc":"5627:6:30","nodeType":"YulIdentifier","src":"5627:6:30"},"nativeSrc":"5627:37:30","nodeType":"YulFunctionCall","src":"5627:37:30"},"nativeSrc":"5627:37:30","nodeType":"YulExpressionStatement","src":"5627:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5552:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5605:5:30","nodeType":"YulTypedName","src":"5605:5:30","type":""},{"name":"pos","nativeSrc":"5612:3:30","nodeType":"YulTypedName","src":"5612:3:30","type":""}],"src":"5552:118:30"},{"body":{"nativeSrc":"5802:206:30","nodeType":"YulBlock","src":"5802:206:30","statements":[{"nativeSrc":"5812:26:30","nodeType":"YulAssignment","src":"5812:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"5824:9:30","nodeType":"YulIdentifier","src":"5824:9:30"},{"kind":"number","nativeSrc":"5835:2:30","nodeType":"YulLiteral","src":"5835:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5820:3:30","nodeType":"YulIdentifier","src":"5820:3:30"},"nativeSrc":"5820:18:30","nodeType":"YulFunctionCall","src":"5820:18:30"},"variableNames":[{"name":"tail","nativeSrc":"5812:4:30","nodeType":"YulIdentifier","src":"5812:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5892:6:30","nodeType":"YulIdentifier","src":"5892:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"5905:9:30","nodeType":"YulIdentifier","src":"5905:9:30"},{"kind":"number","nativeSrc":"5916:1:30","nodeType":"YulLiteral","src":"5916:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5901:3:30","nodeType":"YulIdentifier","src":"5901:3:30"},"nativeSrc":"5901:17:30","nodeType":"YulFunctionCall","src":"5901:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5848:43:30","nodeType":"YulIdentifier","src":"5848:43:30"},"nativeSrc":"5848:71:30","nodeType":"YulFunctionCall","src":"5848:71:30"},"nativeSrc":"5848:71:30","nodeType":"YulExpressionStatement","src":"5848:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"5973:6:30","nodeType":"YulIdentifier","src":"5973:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"5986:9:30","nodeType":"YulIdentifier","src":"5986:9:30"},{"kind":"number","nativeSrc":"5997:2:30","nodeType":"YulLiteral","src":"5997:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5982:3:30","nodeType":"YulIdentifier","src":"5982:3:30"},"nativeSrc":"5982:18:30","nodeType":"YulFunctionCall","src":"5982:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5929:43:30","nodeType":"YulIdentifier","src":"5929:43:30"},"nativeSrc":"5929:72:30","nodeType":"YulFunctionCall","src":"5929:72:30"},"nativeSrc":"5929:72:30","nodeType":"YulExpressionStatement","src":"5929:72:30"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"5676:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5766:9:30","nodeType":"YulTypedName","src":"5766:9:30","type":""},{"name":"value1","nativeSrc":"5778:6:30","nodeType":"YulTypedName","src":"5778:6:30","type":""},{"name":"value0","nativeSrc":"5786:6:30","nodeType":"YulTypedName","src":"5786:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5797:4:30","nodeType":"YulTypedName","src":"5797:4:30","type":""}],"src":"5676:332:30"},{"body":{"nativeSrc":"6140:206:30","nodeType":"YulBlock","src":"6140:206:30","statements":[{"nativeSrc":"6150:26:30","nodeType":"YulAssignment","src":"6150:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"6162:9:30","nodeType":"YulIdentifier","src":"6162:9:30"},{"kind":"number","nativeSrc":"6173:2:30","nodeType":"YulLiteral","src":"6173:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6158:3:30","nodeType":"YulIdentifier","src":"6158:3:30"},"nativeSrc":"6158:18:30","nodeType":"YulFunctionCall","src":"6158:18:30"},"variableNames":[{"name":"tail","nativeSrc":"6150:4:30","nodeType":"YulIdentifier","src":"6150:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6230:6:30","nodeType":"YulIdentifier","src":"6230:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6243:9:30","nodeType":"YulIdentifier","src":"6243:9:30"},{"kind":"number","nativeSrc":"6254:1:30","nodeType":"YulLiteral","src":"6254:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6239:3:30","nodeType":"YulIdentifier","src":"6239:3:30"},"nativeSrc":"6239:17:30","nodeType":"YulFunctionCall","src":"6239:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6186:43:30","nodeType":"YulIdentifier","src":"6186:43:30"},"nativeSrc":"6186:71:30","nodeType":"YulFunctionCall","src":"6186:71:30"},"nativeSrc":"6186:71:30","nodeType":"YulExpressionStatement","src":"6186:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6311:6:30","nodeType":"YulIdentifier","src":"6311:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6324:9:30","nodeType":"YulIdentifier","src":"6324:9:30"},{"kind":"number","nativeSrc":"6335:2:30","nodeType":"YulLiteral","src":"6335:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6320:3:30","nodeType":"YulIdentifier","src":"6320:3:30"},"nativeSrc":"6320:18:30","nodeType":"YulFunctionCall","src":"6320:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6267:43:30","nodeType":"YulIdentifier","src":"6267:43:30"},"nativeSrc":"6267:72:30","nodeType":"YulFunctionCall","src":"6267:72:30"},"nativeSrc":"6267:72:30","nodeType":"YulExpressionStatement","src":"6267:72:30"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6014:332:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6104:9:30","nodeType":"YulTypedName","src":"6104:9:30","type":""},{"name":"value1","nativeSrc":"6116:6:30","nodeType":"YulTypedName","src":"6116:6:30","type":""},{"name":"value0","nativeSrc":"6124:6:30","nodeType":"YulTypedName","src":"6124:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6135:4:30","nodeType":"YulTypedName","src":"6135:4:30","type":""}],"src":"6014:332:30"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201(memPtr) {\n\n        mstore(add(memPtr, 0), \"MintBridge: invalid user\")\n\n    }\n\n    function abi_encode_t_stringliteral_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d72952196da8602568c5c4d0bad676c6faba2a2258e39d14d92f56176915d201_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"MintBridge: nonce already used\")\n\n    }\n\n    function abi_encode_t_stringliteral_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4071c9f46fc719dbb78d9732e63c93b1006ea65f9253b1ec9e5eae54ed1af7e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b1461006657806392322ab114610084578063c00fb782146100b4578063f2fde38b146100d0575b600080fd5b6100646100ec565b005b61006e610100565b60405161007b9190610540565b60405180910390f35b61009e60048036038101906100999190610596565b610129565b6040516100ab91906105de565b60405180910390f35b6100ce60048036038101906100c99190610625565b610149565b005b6100ea60048036038101906100e5919061068c565b610326565b005b6100f46103ac565b6100fe6000610433565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6101516103ac565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610716565b60405180910390fd5b6001600082815260200190815260200160002060009054906101000a900460ff1615610221576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021890610782565b60405180910390fd5b600180600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff166340c10f1985846040518363ffffffff1660e01b81526004016102879291906107b1565b600060405180830381600087803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee84846040516103189291906107da565b60405180910390a350505050565b61032e6103ac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a05760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103979190610540565b60405180910390fd5b6103a981610433565b50565b6103b46104f7565b73ffffffffffffffffffffffffffffffffffffffff166103d2610100565b73ffffffffffffffffffffffffffffffffffffffff1614610431576103f56104f7565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104289190610540565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061052a826104ff565b9050919050565b61053a8161051f565b82525050565b60006020820190506105556000830184610531565b92915050565b600080fd5b6000819050919050565b61057381610560565b811461057e57600080fd5b50565b6000813590506105908161056a565b92915050565b6000602082840312156105ac576105ab61055b565b5b60006105ba84828501610581565b91505092915050565b60008115159050919050565b6105d8816105c3565b82525050565b60006020820190506105f360008301846105cf565b92915050565b6106028161051f565b811461060d57600080fd5b50565b60008135905061061f816105f9565b92915050565b6000806000806080858703121561063f5761063e61055b565b5b600061064d87828801610610565b945050602061065e87828801610610565b935050604061066f87828801610581565b925050606061068087828801610581565b91505092959194509250565b6000602082840312156106a2576106a161055b565b5b60006106b084828501610610565b91505092915050565b600082825260208201905092915050565b7f4d696e744272696467653a20696e76616c696420757365720000000000000000600082015250565b60006107006018836106b9565b915061070b826106ca565b602082019050919050565b6000602082019050818103600083015261072f816106f3565b9050919050565b7f4d696e744272696467653a206e6f6e636520616c726561647920757365640000600082015250565b600061076c601e836106b9565b915061077782610736565b602082019050919050565b6000602082019050818103600083015261079b8161075f565b9050919050565b6107ab81610560565b82525050565b60006040820190506107c66000830185610531565b6107d360208301846107a2565b9392505050565b60006040820190506107ef60008301856107a2565b6107fc60208301846107a2565b939250505056fea26469706673582212206c4f5b1b92b986469a5bedce45cd57a44580889b8a4b6b7d404705333fef02c464736f6c634300081e0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x92322AB1 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xC00FB782 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x596 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x625 JUMP JUMPDEST PUSH2 0x149 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x3AC JUMP JUMPDEST PUSH2 0xFE PUSH1 0x0 PUSH2 0x433 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x221 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218 SWAP1 PUSH2 0x782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x287 SWAP3 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2F00E3CDD69A77BE7ED215EC7B2A36784DD158F921FCA79AC29DEFFA353FE6EE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x318 SWAP3 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x32E PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A9 DUP2 PUSH2 0x433 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x4F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3D2 PUSH2 0x100 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x431 JUMPI PUSH2 0x3F5 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A DUP3 PUSH2 0x4FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53A DUP2 PUSH2 0x51F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x555 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x531 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x573 DUP2 PUSH2 0x560 JUMP JUMPDEST DUP2 EQ PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x590 DUP2 PUSH2 0x56A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5AC JUMPI PUSH2 0x5AB PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5BA DUP5 DUP3 DUP6 ADD PUSH2 0x581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x602 DUP2 PUSH2 0x51F JUMP JUMPDEST DUP2 EQ PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x61F DUP2 PUSH2 0x5F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x63F JUMPI PUSH2 0x63E PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x64D DUP8 DUP3 DUP9 ADD PUSH2 0x610 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x65E DUP8 DUP3 DUP9 ADD PUSH2 0x610 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x66F DUP8 DUP3 DUP9 ADD PUSH2 0x581 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x680 DUP8 DUP3 DUP9 ADD PUSH2 0x581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6B0 DUP5 DUP3 DUP6 ADD PUSH2 0x610 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E744272696467653A20696E76616C696420757365720000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x700 PUSH1 0x18 DUP4 PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x70B DUP3 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x72F DUP2 PUSH2 0x6F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E744272696467653A206E6F6E636520616C726561647920757365640000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76C PUSH1 0x1E DUP4 PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x777 DUP3 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x79B DUP2 PUSH2 0x75F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AB DUP2 PUSH2 0x560 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7C6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x7D3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x7FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x4F5B1B92B986469A5BEDCE45CD JUMPI LOG4 GASLIMIT DUP1 DUP9 SWAP12 DUP11 0x4B PUSH12 0x7D404705333FEF02C464736F PUSH13 0x634300081E0033000000000000 ","sourceMap":"548:1478:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;873:40:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1662:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;873:40:28:-;;;;;;;;;;;;;;;;;;;;;;:::o;1662:362::-;1531:13:0;:11;:13::i;:::-;1788:1:28::1;1772:18;;:4;:18;;::::0;1764:55:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1838:10;:17;1849:5;1838:17;;;;;;;;;;;;;;;;;;;;;1837:18;1829:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1918:4;1900:10:::0;:17:::1;1911:5;1900:17;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1945:5;1932:24;;;1957:4;1963:6;1932:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1996:5;1985:32;;1990:4;1985:32;;;2003:6;2011:5;1985:32;;;;;;;:::i;:::-;;;;;;;;1662:362:::0;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:17:-;709:7;735:10;728:17;;656:96;:::o;7:126:30:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:109::-;1788:21;1803:5;1788:21;:::i;:::-;1783:3;1776:34;1707:109;;:::o;1822:210::-;1909:4;1947:2;1936:9;1932:18;1924:26;;1960:65;2022:1;2011:9;2007:17;1998:6;1960:65;:::i;:::-;1822:210;;;;:::o;2038:122::-;2111:24;2129:5;2111:24;:::i;:::-;2104:5;2101:35;2091:63;;2150:1;2147;2140:12;2091:63;2038:122;:::o;2166:139::-;2212:5;2250:6;2237:20;2228:29;;2266:33;2293:5;2266:33;:::i;:::-;2166:139;;;;:::o;2311:765::-;2397:6;2405;2413;2421;2470:3;2458:9;2449:7;2445:23;2441:33;2438:120;;;2477:79;;:::i;:::-;2438:120;2597:1;2622:53;2667:7;2658:6;2647:9;2643:22;2622:53;:::i;:::-;2612:63;;2568:117;2724:2;2750:53;2795:7;2786:6;2775:9;2771:22;2750:53;:::i;:::-;2740:63;;2695:118;2852:2;2878:53;2923:7;2914:6;2903:9;2899:22;2878:53;:::i;:::-;2868:63;;2823:118;2980:2;3006:53;3051:7;3042:6;3031:9;3027:22;3006:53;:::i;:::-;2996:63;;2951:118;2311:765;;;;;;;:::o;3082:329::-;3141:6;3190:2;3178:9;3169:7;3165:23;3161:32;3158:119;;;3196:79;;:::i;:::-;3158:119;3316:1;3341:53;3386:7;3377:6;3366:9;3362:22;3341:53;:::i;:::-;3331:63;;3287:117;3082:329;;;;:::o;3417:169::-;3501:11;3535:6;3530:3;3523:19;3575:4;3570:3;3566:14;3551:29;;3417:169;;;;:::o;3592:174::-;3732:26;3728:1;3720:6;3716:14;3709:50;3592:174;:::o;3772:366::-;3914:3;3935:67;3999:2;3994:3;3935:67;:::i;:::-;3928:74;;4011:93;4100:3;4011:93;:::i;:::-;4129:2;4124:3;4120:12;4113:19;;3772:366;;;:::o;4144:419::-;4310:4;4348:2;4337:9;4333:18;4325:26;;4397:9;4391:4;4387:20;4383:1;4372:9;4368:17;4361:47;4425:131;4551:4;4425:131;:::i;:::-;4417:139;;4144:419;;;:::o;4569:180::-;4709:32;4705:1;4697:6;4693:14;4686:56;4569:180;:::o;4755:366::-;4897:3;4918:67;4982:2;4977:3;4918:67;:::i;:::-;4911:74;;4994:93;5083:3;4994:93;:::i;:::-;5112:2;5107:3;5103:12;5096:19;;4755:366;;;:::o;5127:419::-;5293:4;5331:2;5320:9;5316:18;5308:26;;5380:9;5374:4;5370:20;5366:1;5355:9;5351:17;5344:47;5408:131;5534:4;5408:131;:::i;:::-;5400:139;;5127:419;;;:::o;5552:118::-;5639:24;5657:5;5639:24;:::i;:::-;5634:3;5627:37;5552:118;;:::o;5676:332::-;5797:4;5835:2;5824:9;5820:18;5812:26;;5848:71;5916:1;5905:9;5901:17;5892:6;5848:71;:::i;:::-;5929:72;5997:2;5986:9;5982:18;5973:6;5929:72;:::i;:::-;5676:332;;;;;:::o;6014:::-;6135:4;6173:2;6162:9;6158:18;6150:26;;6186:71;6254:1;6243:9;6239:17;6230:6;6186:71;:::i;:::-;6267:72;6335:2;6324:9;6320:18;6311:6;6267:72;:::i;:::-;6014:332;;;;;:::o"},"methodIdentifiers":{"doneNonces(uint256)":"92322ab1","mintTokens(address,address,uint256,uint256)":"c00fb782","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"doneNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Owner-restricted mint with nonce replay protection. The relayer (owner) calls `mintTokens`.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Mint(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount minted\",\"nonce\":\"The corresponding source-chain lock nonce\",\"token\":\"The wrapped token contract that minted\",\"user\":\"The recipient of the wrapped tokens\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"initialOwner\":\"The address that will have permission to mint\"}},\"mintTokens(address,address,uint256,uint256)\":{\"details\":\"Only the contract owner can call. Caller is expected to be an off-chain relayer.\",\"params\":{\"amount\":\"The amount to mint\",\"nonce\":\"The source-chain nonce ensuring idempotence\",\"token\":\"The wrapped token contract to mint\",\"user\":\"The destination recipient\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Destination Bridge Contract\",\"version\":1},\"userdoc\":{\"events\":{\"Mint(address,address,uint256,uint256)\":{\"notice\":\"Emitted after successful mint on destination\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initialize ownership; set to a relayer or governance address in deployment\"},\"doneNonces(uint256)\":{\"notice\":\"Tracks processed nonces to prevent replay\"},\"mintTokens(address,address,uint256,uint256)\":{\"notice\":\"Mint wrapped tokens to a user for a specific nonce\"}},\"notice\":\"Mints wrapped tokens on the destination chain upon validated lock events\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dest_Bridge.sol\":\"Dest_Bridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/BridgedToken.sol\":{\"keccak256\":\"0xdf7d27f7f6d5460b0acf0e303693c5504d18f118e75822227c70a570f962557b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b22995ddeb1f788ccf58a294e727c060facac4c83e42a98e03d1f3a1f9c8cf5f\",\"dweb:/ipfs/QmWm3cF19ZMFQ8i3RW83KMTYnrUPFvMuKdGkhZiApju8J5\"]},\"contracts/Dest_Bridge.sol\":{\"keccak256\":\"0xd5c037d482944fd6bce44333bc228d47e9d3066b5a9f5b34163d2b2301d87466\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0d7a39bd57a3b7ac5ea66b0b0a8d08b9f9d51c9bf0ce01904a879986f6b5e58a\",\"dweb:/ipfs/QmZgiC7n5zsYDfaWv3BUuHxfZ9XE9RaFfmBDZneKC7xNay\"]}},\"version\":1}"}},"contracts/Source_bridge.sol":{"Source_bridge":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"Locked","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"LockAmtStore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"lockTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_9834":{"entryPoint":null,"id":9834,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50600080819055506106cd806100266000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063151a631214610046578063affed0e014610076578063b1c2558614610094575b600080fd5b610060600480360381019061005b9190610333565b6100b0565b60405161006d919061038c565b60405180910390f35b61007e6100d5565b60405161008b919061038c565b60405180910390f35b6100ae60048036038101906100a991906103d3565b6100db565b005b6001602052816000526040600020602052806000526040600020600091509150505481565b60005481565b6000811161011e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011590610470565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161015d9392919061049f565b6020604051808303816000875af115801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a0919061050e565b9050806101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d990610587565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026e91906105d6565b925050819055507f967ad762aa9070ada8db64577288e214771e89667066ae38e8750cb8a86c54293384846000546040516102ac949392919061060a565b60405180910390a16000808154809291906102c69061064f565b9190505550505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610300826102d5565b9050919050565b610310816102f5565b811461031b57600080fd5b50565b60008135905061032d81610307565b92915050565b6000806040838503121561034a576103496102d0565b5b60006103588582860161031e565b92505060206103698582860161031e565b9150509250929050565b6000819050919050565b61038681610373565b82525050565b60006020820190506103a1600083018461037d565b92915050565b6103b081610373565b81146103bb57600080fd5b50565b6000813590506103cd816103a7565b92915050565b600080604083850312156103ea576103e96102d0565b5b60006103f88582860161031e565b9250506020610409858286016103be565b9150509250929050565b600082825260208201905092915050565b7f416d6f756e74206d757374206265203e30000000000000000000000000000000600082015250565b600061045a601183610413565b915061046582610424565b602082019050919050565b600060208201905081810360008301526104898161044d565b9050919050565b610499816102f5565b82525050565b60006060820190506104b46000830186610490565b6104c16020830185610490565b6104ce604083018461037d565b949350505050565b60008115159050919050565b6104eb816104d6565b81146104f657600080fd5b50565b600081519050610508816104e2565b92915050565b600060208284031215610524576105236102d0565b5b6000610532848285016104f9565b91505092915050565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b6000610571600f83610413565b915061057c8261053b565b602082019050919050565b600060208201905081810360008301526105a081610564565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105e182610373565b91506105ec83610373565b9250828201905080821115610604576106036105a7565b5b92915050565b600060808201905061061f6000830187610490565b61062c6020830186610490565b610639604083018561037d565b610646606083018461037d565b95945050505050565b600061065a82610373565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361068c5761068b6105a7565b5b60018201905091905056fea26469706673582212208988431cc475bb42cdd32f32e5476f7c923b6cdd33271109eb7ee7de5ef801ae64736f6c634300081e0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x6CD DUP1 PUSH2 0x26 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x151A6312 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xB1C25586 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x333 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0xDB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP1 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x5D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x967AD762AA9070ADA8DB64577288E214771E89667066AE38E8750CB8A86C5429 CALLER DUP5 DUP5 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2C6 SWAP1 PUSH2 0x64F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x300 DUP3 PUSH2 0x2D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x310 DUP2 PUSH2 0x2F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32D DUP2 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34A JUMPI PUSH2 0x349 PUSH2 0x2D0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x358 DUP6 DUP3 DUP7 ADD PUSH2 0x31E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x369 DUP6 DUP3 DUP7 ADD PUSH2 0x31E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x386 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B0 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP2 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CD DUP2 PUSH2 0x3A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3EA JUMPI PUSH2 0x3E9 PUSH2 0x2D0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F8 DUP6 DUP3 DUP7 ADD PUSH2 0x31E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x409 DUP6 DUP3 DUP7 ADD PUSH2 0x3BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E30000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45A PUSH1 0x11 DUP4 PUSH2 0x413 JUMP JUMPDEST SWAP2 POP PUSH2 0x465 DUP3 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x489 DUP2 PUSH2 0x44D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x499 DUP2 PUSH2 0x2F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4B4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x4C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x4CE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x37D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EB DUP2 PUSH2 0x4D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x508 DUP2 PUSH2 0x4E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x524 JUMPI PUSH2 0x523 PUSH2 0x2D0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x532 DUP5 DUP3 DUP6 ADD PUSH2 0x4F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x571 PUSH1 0xF DUP4 PUSH2 0x413 JUMP JUMPDEST SWAP2 POP PUSH2 0x57C DUP3 PUSH2 0x53B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A0 DUP2 PUSH2 0x564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5E1 DUP3 PUSH2 0x373 JUMP JUMPDEST SWAP2 POP PUSH2 0x5EC DUP4 PUSH2 0x373 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x604 JUMPI PUSH2 0x603 PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x61F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x62C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x639 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x646 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x37D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65A DUP3 PUSH2 0x373 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x68C JUMPI PUSH2 0x68B PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 DUP9 NUMBER SHR 0xC4 PUSH22 0xBB42CDD32F32E5476F7C923B6CDD33271109EB7EE7DE MCOPY EXTCALL ADD 0xAE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"476:1398:29:-:0;;;1204:37;;;;;;;;;;1233:1;1227:5;:7;;;;476:1398;;;;;;"},"deployedBytecode":{"functionDebugData":{"@LockAmtStore_9814":{"entryPoint":176,"id":9814,"parameterSlots":0,"returnSlots":0},"@lockTokens_9890":{"entryPoint":219,"id":9890,"parameterSlots":2,"returnSlots":0},"@nonce_9807":{"entryPoint":213,"id":9807,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":1273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":819,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":979,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab_to_t_string_memory_ptr_fromStack":{"entryPoint":1101,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack":{"entryPoint":1380,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":893,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":1183,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":1546,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1136,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1415,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":908,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1043,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1494,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":757,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1238,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":725,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":883,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1615,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1447,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":720,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab":{"entryPoint":1060,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f":{"entryPoint":1339,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":775,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":1250,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":935,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7084:30","nodeType":"YulBlock","src":"0:7084:30","statements":[{"body":{"nativeSrc":"47:35:30","nodeType":"YulBlock","src":"47:35:30","statements":[{"nativeSrc":"57:19:30","nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:30","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:30","nodeType":"YulIdentifier","src":"67:5:30"},"nativeSrc":"67:9:30","nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:30","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:30","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:30","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nativeSrc":"177:28:30","nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:30","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:30","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:30","nodeType":"YulIdentifier","src":"187:6:30"},"nativeSrc":"187:12:30","nodeType":"YulFunctionCall","src":"187:12:30"},"nativeSrc":"187:12:30","nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:30","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nativeSrc":"300:28:30","nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:30","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:30","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:30","nodeType":"YulIdentifier","src":"310:6:30"},"nativeSrc":"310:12:30","nodeType":"YulFunctionCall","src":"310:12:30"},"nativeSrc":"310:12:30","nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:30","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nativeSrc":"379:81:30","nodeType":"YulBlock","src":"379:81:30","statements":[{"nativeSrc":"389:65:30","nodeType":"YulAssignment","src":"389:65:30","value":{"arguments":[{"name":"value","nativeSrc":"404:5:30","nodeType":"YulIdentifier","src":"404:5:30"},{"kind":"number","nativeSrc":"411:42:30","nodeType":"YulLiteral","src":"411:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:30","nodeType":"YulIdentifier","src":"400:3:30"},"nativeSrc":"400:54:30","nodeType":"YulFunctionCall","src":"400:54:30"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:30","nodeType":"YulIdentifier","src":"389:7:30"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:30","nodeType":"YulTypedName","src":"361:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:30","nodeType":"YulTypedName","src":"371:7:30","type":""}],"src":"334:126:30"},{"body":{"nativeSrc":"511:51:30","nodeType":"YulBlock","src":"511:51:30","statements":[{"nativeSrc":"521:35:30","nodeType":"YulAssignment","src":"521:35:30","value":{"arguments":[{"name":"value","nativeSrc":"550:5:30","nodeType":"YulIdentifier","src":"550:5:30"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:30","nodeType":"YulIdentifier","src":"532:17:30"},"nativeSrc":"532:24:30","nodeType":"YulFunctionCall","src":"532:24:30"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:30","nodeType":"YulIdentifier","src":"521:7:30"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:30","nodeType":"YulTypedName","src":"493:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:30","nodeType":"YulTypedName","src":"503:7:30","type":""}],"src":"466:96:30"},{"body":{"nativeSrc":"611:79:30","nodeType":"YulBlock","src":"611:79:30","statements":[{"body":{"nativeSrc":"668:16:30","nodeType":"YulBlock","src":"668:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:30","nodeType":"YulLiteral","src":"677:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:30","nodeType":"YulLiteral","src":"680:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:30","nodeType":"YulIdentifier","src":"670:6:30"},"nativeSrc":"670:12:30","nodeType":"YulFunctionCall","src":"670:12:30"},"nativeSrc":"670:12:30","nodeType":"YulExpressionStatement","src":"670:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:30","nodeType":"YulIdentifier","src":"634:5:30"},{"arguments":[{"name":"value","nativeSrc":"659:5:30","nodeType":"YulIdentifier","src":"659:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:30","nodeType":"YulIdentifier","src":"641:17:30"},"nativeSrc":"641:24:30","nodeType":"YulFunctionCall","src":"641:24:30"}],"functionName":{"name":"eq","nativeSrc":"631:2:30","nodeType":"YulIdentifier","src":"631:2:30"},"nativeSrc":"631:35:30","nodeType":"YulFunctionCall","src":"631:35:30"}],"functionName":{"name":"iszero","nativeSrc":"624:6:30","nodeType":"YulIdentifier","src":"624:6:30"},"nativeSrc":"624:43:30","nodeType":"YulFunctionCall","src":"624:43:30"},"nativeSrc":"621:63:30","nodeType":"YulIf","src":"621:63:30"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:30","nodeType":"YulTypedName","src":"604:5:30","type":""}],"src":"568:122:30"},{"body":{"nativeSrc":"748:87:30","nodeType":"YulBlock","src":"748:87:30","statements":[{"nativeSrc":"758:29:30","nodeType":"YulAssignment","src":"758:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:30","nodeType":"YulIdentifier","src":"780:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:30","nodeType":"YulIdentifier","src":"767:12:30"},"nativeSrc":"767:20:30","nodeType":"YulFunctionCall","src":"767:20:30"},"variableNames":[{"name":"value","nativeSrc":"758:5:30","nodeType":"YulIdentifier","src":"758:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:30","nodeType":"YulIdentifier","src":"823:5:30"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:30","nodeType":"YulIdentifier","src":"796:26:30"},"nativeSrc":"796:33:30","nodeType":"YulFunctionCall","src":"796:33:30"},"nativeSrc":"796:33:30","nodeType":"YulExpressionStatement","src":"796:33:30"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:30","nodeType":"YulTypedName","src":"726:6:30","type":""},{"name":"end","nativeSrc":"734:3:30","nodeType":"YulTypedName","src":"734:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:30","nodeType":"YulTypedName","src":"742:5:30","type":""}],"src":"696:139:30"},{"body":{"nativeSrc":"924:391:30","nodeType":"YulBlock","src":"924:391:30","statements":[{"body":{"nativeSrc":"970:83:30","nodeType":"YulBlock","src":"970:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"972:77:30","nodeType":"YulIdentifier","src":"972:77:30"},"nativeSrc":"972:79:30","nodeType":"YulFunctionCall","src":"972:79:30"},"nativeSrc":"972:79:30","nodeType":"YulExpressionStatement","src":"972:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"945:7:30","nodeType":"YulIdentifier","src":"945:7:30"},{"name":"headStart","nativeSrc":"954:9:30","nodeType":"YulIdentifier","src":"954:9:30"}],"functionName":{"name":"sub","nativeSrc":"941:3:30","nodeType":"YulIdentifier","src":"941:3:30"},"nativeSrc":"941:23:30","nodeType":"YulFunctionCall","src":"941:23:30"},{"kind":"number","nativeSrc":"966:2:30","nodeType":"YulLiteral","src":"966:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"937:3:30","nodeType":"YulIdentifier","src":"937:3:30"},"nativeSrc":"937:32:30","nodeType":"YulFunctionCall","src":"937:32:30"},"nativeSrc":"934:119:30","nodeType":"YulIf","src":"934:119:30"},{"nativeSrc":"1063:117:30","nodeType":"YulBlock","src":"1063:117:30","statements":[{"nativeSrc":"1078:15:30","nodeType":"YulVariableDeclaration","src":"1078:15:30","value":{"kind":"number","nativeSrc":"1092:1:30","nodeType":"YulLiteral","src":"1092:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1082:6:30","nodeType":"YulTypedName","src":"1082:6:30","type":""}]},{"nativeSrc":"1107:63:30","nodeType":"YulAssignment","src":"1107:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1142:9:30","nodeType":"YulIdentifier","src":"1142:9:30"},{"name":"offset","nativeSrc":"1153:6:30","nodeType":"YulIdentifier","src":"1153:6:30"}],"functionName":{"name":"add","nativeSrc":"1138:3:30","nodeType":"YulIdentifier","src":"1138:3:30"},"nativeSrc":"1138:22:30","nodeType":"YulFunctionCall","src":"1138:22:30"},{"name":"dataEnd","nativeSrc":"1162:7:30","nodeType":"YulIdentifier","src":"1162:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1117:20:30","nodeType":"YulIdentifier","src":"1117:20:30"},"nativeSrc":"1117:53:30","nodeType":"YulFunctionCall","src":"1117:53:30"},"variableNames":[{"name":"value0","nativeSrc":"1107:6:30","nodeType":"YulIdentifier","src":"1107:6:30"}]}]},{"nativeSrc":"1190:118:30","nodeType":"YulBlock","src":"1190:118:30","statements":[{"nativeSrc":"1205:16:30","nodeType":"YulVariableDeclaration","src":"1205:16:30","value":{"kind":"number","nativeSrc":"1219:2:30","nodeType":"YulLiteral","src":"1219:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1209:6:30","nodeType":"YulTypedName","src":"1209:6:30","type":""}]},{"nativeSrc":"1235:63:30","nodeType":"YulAssignment","src":"1235:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1270:9:30","nodeType":"YulIdentifier","src":"1270:9:30"},{"name":"offset","nativeSrc":"1281:6:30","nodeType":"YulIdentifier","src":"1281:6:30"}],"functionName":{"name":"add","nativeSrc":"1266:3:30","nodeType":"YulIdentifier","src":"1266:3:30"},"nativeSrc":"1266:22:30","nodeType":"YulFunctionCall","src":"1266:22:30"},{"name":"dataEnd","nativeSrc":"1290:7:30","nodeType":"YulIdentifier","src":"1290:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1245:20:30","nodeType":"YulIdentifier","src":"1245:20:30"},"nativeSrc":"1245:53:30","nodeType":"YulFunctionCall","src":"1245:53:30"},"variableNames":[{"name":"value1","nativeSrc":"1235:6:30","nodeType":"YulIdentifier","src":"1235:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"841:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"886:9:30","nodeType":"YulTypedName","src":"886:9:30","type":""},{"name":"dataEnd","nativeSrc":"897:7:30","nodeType":"YulTypedName","src":"897:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"909:6:30","nodeType":"YulTypedName","src":"909:6:30","type":""},{"name":"value1","nativeSrc":"917:6:30","nodeType":"YulTypedName","src":"917:6:30","type":""}],"src":"841:474:30"},{"body":{"nativeSrc":"1366:32:30","nodeType":"YulBlock","src":"1366:32:30","statements":[{"nativeSrc":"1376:16:30","nodeType":"YulAssignment","src":"1376:16:30","value":{"name":"value","nativeSrc":"1387:5:30","nodeType":"YulIdentifier","src":"1387:5:30"},"variableNames":[{"name":"cleaned","nativeSrc":"1376:7:30","nodeType":"YulIdentifier","src":"1376:7:30"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1321:77:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1348:5:30","nodeType":"YulTypedName","src":"1348:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1358:7:30","nodeType":"YulTypedName","src":"1358:7:30","type":""}],"src":"1321:77:30"},{"body":{"nativeSrc":"1469:53:30","nodeType":"YulBlock","src":"1469:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1486:3:30","nodeType":"YulIdentifier","src":"1486:3:30"},{"arguments":[{"name":"value","nativeSrc":"1509:5:30","nodeType":"YulIdentifier","src":"1509:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1491:17:30","nodeType":"YulIdentifier","src":"1491:17:30"},"nativeSrc":"1491:24:30","nodeType":"YulFunctionCall","src":"1491:24:30"}],"functionName":{"name":"mstore","nativeSrc":"1479:6:30","nodeType":"YulIdentifier","src":"1479:6:30"},"nativeSrc":"1479:37:30","nodeType":"YulFunctionCall","src":"1479:37:30"},"nativeSrc":"1479:37:30","nodeType":"YulExpressionStatement","src":"1479:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1404:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1457:5:30","nodeType":"YulTypedName","src":"1457:5:30","type":""},{"name":"pos","nativeSrc":"1464:3:30","nodeType":"YulTypedName","src":"1464:3:30","type":""}],"src":"1404:118:30"},{"body":{"nativeSrc":"1626:124:30","nodeType":"YulBlock","src":"1626:124:30","statements":[{"nativeSrc":"1636:26:30","nodeType":"YulAssignment","src":"1636:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"1648:9:30","nodeType":"YulIdentifier","src":"1648:9:30"},{"kind":"number","nativeSrc":"1659:2:30","nodeType":"YulLiteral","src":"1659:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1644:3:30","nodeType":"YulIdentifier","src":"1644:3:30"},"nativeSrc":"1644:18:30","nodeType":"YulFunctionCall","src":"1644:18:30"},"variableNames":[{"name":"tail","nativeSrc":"1636:4:30","nodeType":"YulIdentifier","src":"1636:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1716:6:30","nodeType":"YulIdentifier","src":"1716:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"1729:9:30","nodeType":"YulIdentifier","src":"1729:9:30"},{"kind":"number","nativeSrc":"1740:1:30","nodeType":"YulLiteral","src":"1740:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1725:3:30","nodeType":"YulIdentifier","src":"1725:3:30"},"nativeSrc":"1725:17:30","nodeType":"YulFunctionCall","src":"1725:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1672:43:30","nodeType":"YulIdentifier","src":"1672:43:30"},"nativeSrc":"1672:71:30","nodeType":"YulFunctionCall","src":"1672:71:30"},"nativeSrc":"1672:71:30","nodeType":"YulExpressionStatement","src":"1672:71:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1528:222:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1598:9:30","nodeType":"YulTypedName","src":"1598:9:30","type":""},{"name":"value0","nativeSrc":"1610:6:30","nodeType":"YulTypedName","src":"1610:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1621:4:30","nodeType":"YulTypedName","src":"1621:4:30","type":""}],"src":"1528:222:30"},{"body":{"nativeSrc":"1799:79:30","nodeType":"YulBlock","src":"1799:79:30","statements":[{"body":{"nativeSrc":"1856:16:30","nodeType":"YulBlock","src":"1856:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1865:1:30","nodeType":"YulLiteral","src":"1865:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"1868:1:30","nodeType":"YulLiteral","src":"1868:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1858:6:30","nodeType":"YulIdentifier","src":"1858:6:30"},"nativeSrc":"1858:12:30","nodeType":"YulFunctionCall","src":"1858:12:30"},"nativeSrc":"1858:12:30","nodeType":"YulExpressionStatement","src":"1858:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1822:5:30","nodeType":"YulIdentifier","src":"1822:5:30"},{"arguments":[{"name":"value","nativeSrc":"1847:5:30","nodeType":"YulIdentifier","src":"1847:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1829:17:30","nodeType":"YulIdentifier","src":"1829:17:30"},"nativeSrc":"1829:24:30","nodeType":"YulFunctionCall","src":"1829:24:30"}],"functionName":{"name":"eq","nativeSrc":"1819:2:30","nodeType":"YulIdentifier","src":"1819:2:30"},"nativeSrc":"1819:35:30","nodeType":"YulFunctionCall","src":"1819:35:30"}],"functionName":{"name":"iszero","nativeSrc":"1812:6:30","nodeType":"YulIdentifier","src":"1812:6:30"},"nativeSrc":"1812:43:30","nodeType":"YulFunctionCall","src":"1812:43:30"},"nativeSrc":"1809:63:30","nodeType":"YulIf","src":"1809:63:30"}]},"name":"validator_revert_t_uint256","nativeSrc":"1756:122:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1792:5:30","nodeType":"YulTypedName","src":"1792:5:30","type":""}],"src":"1756:122:30"},{"body":{"nativeSrc":"1936:87:30","nodeType":"YulBlock","src":"1936:87:30","statements":[{"nativeSrc":"1946:29:30","nodeType":"YulAssignment","src":"1946:29:30","value":{"arguments":[{"name":"offset","nativeSrc":"1968:6:30","nodeType":"YulIdentifier","src":"1968:6:30"}],"functionName":{"name":"calldataload","nativeSrc":"1955:12:30","nodeType":"YulIdentifier","src":"1955:12:30"},"nativeSrc":"1955:20:30","nodeType":"YulFunctionCall","src":"1955:20:30"},"variableNames":[{"name":"value","nativeSrc":"1946:5:30","nodeType":"YulIdentifier","src":"1946:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2011:5:30","nodeType":"YulIdentifier","src":"2011:5:30"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1984:26:30","nodeType":"YulIdentifier","src":"1984:26:30"},"nativeSrc":"1984:33:30","nodeType":"YulFunctionCall","src":"1984:33:30"},"nativeSrc":"1984:33:30","nodeType":"YulExpressionStatement","src":"1984:33:30"}]},"name":"abi_decode_t_uint256","nativeSrc":"1884:139:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1914:6:30","nodeType":"YulTypedName","src":"1914:6:30","type":""},{"name":"end","nativeSrc":"1922:3:30","nodeType":"YulTypedName","src":"1922:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1930:5:30","nodeType":"YulTypedName","src":"1930:5:30","type":""}],"src":"1884:139:30"},{"body":{"nativeSrc":"2112:391:30","nodeType":"YulBlock","src":"2112:391:30","statements":[{"body":{"nativeSrc":"2158:83:30","nodeType":"YulBlock","src":"2158:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2160:77:30","nodeType":"YulIdentifier","src":"2160:77:30"},"nativeSrc":"2160:79:30","nodeType":"YulFunctionCall","src":"2160:79:30"},"nativeSrc":"2160:79:30","nodeType":"YulExpressionStatement","src":"2160:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2133:7:30","nodeType":"YulIdentifier","src":"2133:7:30"},{"name":"headStart","nativeSrc":"2142:9:30","nodeType":"YulIdentifier","src":"2142:9:30"}],"functionName":{"name":"sub","nativeSrc":"2129:3:30","nodeType":"YulIdentifier","src":"2129:3:30"},"nativeSrc":"2129:23:30","nodeType":"YulFunctionCall","src":"2129:23:30"},{"kind":"number","nativeSrc":"2154:2:30","nodeType":"YulLiteral","src":"2154:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2125:3:30","nodeType":"YulIdentifier","src":"2125:3:30"},"nativeSrc":"2125:32:30","nodeType":"YulFunctionCall","src":"2125:32:30"},"nativeSrc":"2122:119:30","nodeType":"YulIf","src":"2122:119:30"},{"nativeSrc":"2251:117:30","nodeType":"YulBlock","src":"2251:117:30","statements":[{"nativeSrc":"2266:15:30","nodeType":"YulVariableDeclaration","src":"2266:15:30","value":{"kind":"number","nativeSrc":"2280:1:30","nodeType":"YulLiteral","src":"2280:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2270:6:30","nodeType":"YulTypedName","src":"2270:6:30","type":""}]},{"nativeSrc":"2295:63:30","nodeType":"YulAssignment","src":"2295:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2330:9:30","nodeType":"YulIdentifier","src":"2330:9:30"},{"name":"offset","nativeSrc":"2341:6:30","nodeType":"YulIdentifier","src":"2341:6:30"}],"functionName":{"name":"add","nativeSrc":"2326:3:30","nodeType":"YulIdentifier","src":"2326:3:30"},"nativeSrc":"2326:22:30","nodeType":"YulFunctionCall","src":"2326:22:30"},{"name":"dataEnd","nativeSrc":"2350:7:30","nodeType":"YulIdentifier","src":"2350:7:30"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2305:20:30","nodeType":"YulIdentifier","src":"2305:20:30"},"nativeSrc":"2305:53:30","nodeType":"YulFunctionCall","src":"2305:53:30"},"variableNames":[{"name":"value0","nativeSrc":"2295:6:30","nodeType":"YulIdentifier","src":"2295:6:30"}]}]},{"nativeSrc":"2378:118:30","nodeType":"YulBlock","src":"2378:118:30","statements":[{"nativeSrc":"2393:16:30","nodeType":"YulVariableDeclaration","src":"2393:16:30","value":{"kind":"number","nativeSrc":"2407:2:30","nodeType":"YulLiteral","src":"2407:2:30","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2397:6:30","nodeType":"YulTypedName","src":"2397:6:30","type":""}]},{"nativeSrc":"2423:63:30","nodeType":"YulAssignment","src":"2423:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2458:9:30","nodeType":"YulIdentifier","src":"2458:9:30"},{"name":"offset","nativeSrc":"2469:6:30","nodeType":"YulIdentifier","src":"2469:6:30"}],"functionName":{"name":"add","nativeSrc":"2454:3:30","nodeType":"YulIdentifier","src":"2454:3:30"},"nativeSrc":"2454:22:30","nodeType":"YulFunctionCall","src":"2454:22:30"},{"name":"dataEnd","nativeSrc":"2478:7:30","nodeType":"YulIdentifier","src":"2478:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2433:20:30","nodeType":"YulIdentifier","src":"2433:20:30"},"nativeSrc":"2433:53:30","nodeType":"YulFunctionCall","src":"2433:53:30"},"variableNames":[{"name":"value1","nativeSrc":"2423:6:30","nodeType":"YulIdentifier","src":"2423:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2029:474:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2074:9:30","nodeType":"YulTypedName","src":"2074:9:30","type":""},{"name":"dataEnd","nativeSrc":"2085:7:30","nodeType":"YulTypedName","src":"2085:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2097:6:30","nodeType":"YulTypedName","src":"2097:6:30","type":""},{"name":"value1","nativeSrc":"2105:6:30","nodeType":"YulTypedName","src":"2105:6:30","type":""}],"src":"2029:474:30"},{"body":{"nativeSrc":"2605:73:30","nodeType":"YulBlock","src":"2605:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2622:3:30","nodeType":"YulIdentifier","src":"2622:3:30"},{"name":"length","nativeSrc":"2627:6:30","nodeType":"YulIdentifier","src":"2627:6:30"}],"functionName":{"name":"mstore","nativeSrc":"2615:6:30","nodeType":"YulIdentifier","src":"2615:6:30"},"nativeSrc":"2615:19:30","nodeType":"YulFunctionCall","src":"2615:19:30"},"nativeSrc":"2615:19:30","nodeType":"YulExpressionStatement","src":"2615:19:30"},{"nativeSrc":"2643:29:30","nodeType":"YulAssignment","src":"2643:29:30","value":{"arguments":[{"name":"pos","nativeSrc":"2662:3:30","nodeType":"YulIdentifier","src":"2662:3:30"},{"kind":"number","nativeSrc":"2667:4:30","nodeType":"YulLiteral","src":"2667:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2658:3:30","nodeType":"YulIdentifier","src":"2658:3:30"},"nativeSrc":"2658:14:30","nodeType":"YulFunctionCall","src":"2658:14:30"},"variableNames":[{"name":"updated_pos","nativeSrc":"2643:11:30","nodeType":"YulIdentifier","src":"2643:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2509:169:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2577:3:30","nodeType":"YulTypedName","src":"2577:3:30","type":""},{"name":"length","nativeSrc":"2582:6:30","nodeType":"YulTypedName","src":"2582:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"2593:11:30","nodeType":"YulTypedName","src":"2593:11:30","type":""}],"src":"2509:169:30"},{"body":{"nativeSrc":"2790:61:30","nodeType":"YulBlock","src":"2790:61:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2812:6:30","nodeType":"YulIdentifier","src":"2812:6:30"},{"kind":"number","nativeSrc":"2820:1:30","nodeType":"YulLiteral","src":"2820:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2808:3:30","nodeType":"YulIdentifier","src":"2808:3:30"},"nativeSrc":"2808:14:30","nodeType":"YulFunctionCall","src":"2808:14:30"},{"hexValue":"416d6f756e74206d757374206265203e30","kind":"string","nativeSrc":"2824:19:30","nodeType":"YulLiteral","src":"2824:19:30","type":"","value":"Amount must be >0"}],"functionName":{"name":"mstore","nativeSrc":"2801:6:30","nodeType":"YulIdentifier","src":"2801:6:30"},"nativeSrc":"2801:43:30","nodeType":"YulFunctionCall","src":"2801:43:30"},"nativeSrc":"2801:43:30","nodeType":"YulExpressionStatement","src":"2801:43:30"}]},"name":"store_literal_in_memory_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab","nativeSrc":"2684:167:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2782:6:30","nodeType":"YulTypedName","src":"2782:6:30","type":""}],"src":"2684:167:30"},{"body":{"nativeSrc":"3003:220:30","nodeType":"YulBlock","src":"3003:220:30","statements":[{"nativeSrc":"3013:74:30","nodeType":"YulAssignment","src":"3013:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"3079:3:30","nodeType":"YulIdentifier","src":"3079:3:30"},{"kind":"number","nativeSrc":"3084:2:30","nodeType":"YulLiteral","src":"3084:2:30","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3020:58:30","nodeType":"YulIdentifier","src":"3020:58:30"},"nativeSrc":"3020:67:30","nodeType":"YulFunctionCall","src":"3020:67:30"},"variableNames":[{"name":"pos","nativeSrc":"3013:3:30","nodeType":"YulIdentifier","src":"3013:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3185:3:30","nodeType":"YulIdentifier","src":"3185:3:30"}],"functionName":{"name":"store_literal_in_memory_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab","nativeSrc":"3096:88:30","nodeType":"YulIdentifier","src":"3096:88:30"},"nativeSrc":"3096:93:30","nodeType":"YulFunctionCall","src":"3096:93:30"},"nativeSrc":"3096:93:30","nodeType":"YulExpressionStatement","src":"3096:93:30"},{"nativeSrc":"3198:19:30","nodeType":"YulAssignment","src":"3198:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"3209:3:30","nodeType":"YulIdentifier","src":"3209:3:30"},{"kind":"number","nativeSrc":"3214:2:30","nodeType":"YulLiteral","src":"3214:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3205:3:30","nodeType":"YulIdentifier","src":"3205:3:30"},"nativeSrc":"3205:12:30","nodeType":"YulFunctionCall","src":"3205:12:30"},"variableNames":[{"name":"end","nativeSrc":"3198:3:30","nodeType":"YulIdentifier","src":"3198:3:30"}]}]},"name":"abi_encode_t_stringliteral_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab_to_t_string_memory_ptr_fromStack","nativeSrc":"2857:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2991:3:30","nodeType":"YulTypedName","src":"2991:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2999:3:30","nodeType":"YulTypedName","src":"2999:3:30","type":""}],"src":"2857:366:30"},{"body":{"nativeSrc":"3400:248:30","nodeType":"YulBlock","src":"3400:248:30","statements":[{"nativeSrc":"3410:26:30","nodeType":"YulAssignment","src":"3410:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3422:9:30","nodeType":"YulIdentifier","src":"3422:9:30"},{"kind":"number","nativeSrc":"3433:2:30","nodeType":"YulLiteral","src":"3433:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3418:3:30","nodeType":"YulIdentifier","src":"3418:3:30"},"nativeSrc":"3418:18:30","nodeType":"YulFunctionCall","src":"3418:18:30"},"variableNames":[{"name":"tail","nativeSrc":"3410:4:30","nodeType":"YulIdentifier","src":"3410:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3457:9:30","nodeType":"YulIdentifier","src":"3457:9:30"},{"kind":"number","nativeSrc":"3468:1:30","nodeType":"YulLiteral","src":"3468:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3453:3:30","nodeType":"YulIdentifier","src":"3453:3:30"},"nativeSrc":"3453:17:30","nodeType":"YulFunctionCall","src":"3453:17:30"},{"arguments":[{"name":"tail","nativeSrc":"3476:4:30","nodeType":"YulIdentifier","src":"3476:4:30"},{"name":"headStart","nativeSrc":"3482:9:30","nodeType":"YulIdentifier","src":"3482:9:30"}],"functionName":{"name":"sub","nativeSrc":"3472:3:30","nodeType":"YulIdentifier","src":"3472:3:30"},"nativeSrc":"3472:20:30","nodeType":"YulFunctionCall","src":"3472:20:30"}],"functionName":{"name":"mstore","nativeSrc":"3446:6:30","nodeType":"YulIdentifier","src":"3446:6:30"},"nativeSrc":"3446:47:30","nodeType":"YulFunctionCall","src":"3446:47:30"},"nativeSrc":"3446:47:30","nodeType":"YulExpressionStatement","src":"3446:47:30"},{"nativeSrc":"3502:139:30","nodeType":"YulAssignment","src":"3502:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"3636:4:30","nodeType":"YulIdentifier","src":"3636:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab_to_t_string_memory_ptr_fromStack","nativeSrc":"3510:124:30","nodeType":"YulIdentifier","src":"3510:124:30"},"nativeSrc":"3510:131:30","nodeType":"YulFunctionCall","src":"3510:131:30"},"variableNames":[{"name":"tail","nativeSrc":"3502:4:30","nodeType":"YulIdentifier","src":"3502:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3229:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3380:9:30","nodeType":"YulTypedName","src":"3380:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3395:4:30","nodeType":"YulTypedName","src":"3395:4:30","type":""}],"src":"3229:419:30"},{"body":{"nativeSrc":"3719:53:30","nodeType":"YulBlock","src":"3719:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3736:3:30","nodeType":"YulIdentifier","src":"3736:3:30"},{"arguments":[{"name":"value","nativeSrc":"3759:5:30","nodeType":"YulIdentifier","src":"3759:5:30"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3741:17:30","nodeType":"YulIdentifier","src":"3741:17:30"},"nativeSrc":"3741:24:30","nodeType":"YulFunctionCall","src":"3741:24:30"}],"functionName":{"name":"mstore","nativeSrc":"3729:6:30","nodeType":"YulIdentifier","src":"3729:6:30"},"nativeSrc":"3729:37:30","nodeType":"YulFunctionCall","src":"3729:37:30"},"nativeSrc":"3729:37:30","nodeType":"YulExpressionStatement","src":"3729:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3654:118:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3707:5:30","nodeType":"YulTypedName","src":"3707:5:30","type":""},{"name":"pos","nativeSrc":"3714:3:30","nodeType":"YulTypedName","src":"3714:3:30","type":""}],"src":"3654:118:30"},{"body":{"nativeSrc":"3932:288:30","nodeType":"YulBlock","src":"3932:288:30","statements":[{"nativeSrc":"3942:26:30","nodeType":"YulAssignment","src":"3942:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"3954:9:30","nodeType":"YulIdentifier","src":"3954:9:30"},{"kind":"number","nativeSrc":"3965:2:30","nodeType":"YulLiteral","src":"3965:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3950:3:30","nodeType":"YulIdentifier","src":"3950:3:30"},"nativeSrc":"3950:18:30","nodeType":"YulFunctionCall","src":"3950:18:30"},"variableNames":[{"name":"tail","nativeSrc":"3942:4:30","nodeType":"YulIdentifier","src":"3942:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4022:6:30","nodeType":"YulIdentifier","src":"4022:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"4035:9:30","nodeType":"YulIdentifier","src":"4035:9:30"},{"kind":"number","nativeSrc":"4046:1:30","nodeType":"YulLiteral","src":"4046:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4031:3:30","nodeType":"YulIdentifier","src":"4031:3:30"},"nativeSrc":"4031:17:30","nodeType":"YulFunctionCall","src":"4031:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3978:43:30","nodeType":"YulIdentifier","src":"3978:43:30"},"nativeSrc":"3978:71:30","nodeType":"YulFunctionCall","src":"3978:71:30"},"nativeSrc":"3978:71:30","nodeType":"YulExpressionStatement","src":"3978:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"4103:6:30","nodeType":"YulIdentifier","src":"4103:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"4116:9:30","nodeType":"YulIdentifier","src":"4116:9:30"},{"kind":"number","nativeSrc":"4127:2:30","nodeType":"YulLiteral","src":"4127:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4112:3:30","nodeType":"YulIdentifier","src":"4112:3:30"},"nativeSrc":"4112:18:30","nodeType":"YulFunctionCall","src":"4112:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4059:43:30","nodeType":"YulIdentifier","src":"4059:43:30"},"nativeSrc":"4059:72:30","nodeType":"YulFunctionCall","src":"4059:72:30"},"nativeSrc":"4059:72:30","nodeType":"YulExpressionStatement","src":"4059:72:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"4185:6:30","nodeType":"YulIdentifier","src":"4185:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"4198:9:30","nodeType":"YulIdentifier","src":"4198:9:30"},{"kind":"number","nativeSrc":"4209:2:30","nodeType":"YulLiteral","src":"4209:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4194:3:30","nodeType":"YulIdentifier","src":"4194:3:30"},"nativeSrc":"4194:18:30","nodeType":"YulFunctionCall","src":"4194:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4141:43:30","nodeType":"YulIdentifier","src":"4141:43:30"},"nativeSrc":"4141:72:30","nodeType":"YulFunctionCall","src":"4141:72:30"},"nativeSrc":"4141:72:30","nodeType":"YulExpressionStatement","src":"4141:72:30"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"3778:442:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3888:9:30","nodeType":"YulTypedName","src":"3888:9:30","type":""},{"name":"value2","nativeSrc":"3900:6:30","nodeType":"YulTypedName","src":"3900:6:30","type":""},{"name":"value1","nativeSrc":"3908:6:30","nodeType":"YulTypedName","src":"3908:6:30","type":""},{"name":"value0","nativeSrc":"3916:6:30","nodeType":"YulTypedName","src":"3916:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3927:4:30","nodeType":"YulTypedName","src":"3927:4:30","type":""}],"src":"3778:442:30"},{"body":{"nativeSrc":"4268:48:30","nodeType":"YulBlock","src":"4268:48:30","statements":[{"nativeSrc":"4278:32:30","nodeType":"YulAssignment","src":"4278:32:30","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4303:5:30","nodeType":"YulIdentifier","src":"4303:5:30"}],"functionName":{"name":"iszero","nativeSrc":"4296:6:30","nodeType":"YulIdentifier","src":"4296:6:30"},"nativeSrc":"4296:13:30","nodeType":"YulFunctionCall","src":"4296:13:30"}],"functionName":{"name":"iszero","nativeSrc":"4289:6:30","nodeType":"YulIdentifier","src":"4289:6:30"},"nativeSrc":"4289:21:30","nodeType":"YulFunctionCall","src":"4289:21:30"},"variableNames":[{"name":"cleaned","nativeSrc":"4278:7:30","nodeType":"YulIdentifier","src":"4278:7:30"}]}]},"name":"cleanup_t_bool","nativeSrc":"4226:90:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4250:5:30","nodeType":"YulTypedName","src":"4250:5:30","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4260:7:30","nodeType":"YulTypedName","src":"4260:7:30","type":""}],"src":"4226:90:30"},{"body":{"nativeSrc":"4362:76:30","nodeType":"YulBlock","src":"4362:76:30","statements":[{"body":{"nativeSrc":"4416:16:30","nodeType":"YulBlock","src":"4416:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4425:1:30","nodeType":"YulLiteral","src":"4425:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"4428:1:30","nodeType":"YulLiteral","src":"4428:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4418:6:30","nodeType":"YulIdentifier","src":"4418:6:30"},"nativeSrc":"4418:12:30","nodeType":"YulFunctionCall","src":"4418:12:30"},"nativeSrc":"4418:12:30","nodeType":"YulExpressionStatement","src":"4418:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4385:5:30","nodeType":"YulIdentifier","src":"4385:5:30"},{"arguments":[{"name":"value","nativeSrc":"4407:5:30","nodeType":"YulIdentifier","src":"4407:5:30"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"4392:14:30","nodeType":"YulIdentifier","src":"4392:14:30"},"nativeSrc":"4392:21:30","nodeType":"YulFunctionCall","src":"4392:21:30"}],"functionName":{"name":"eq","nativeSrc":"4382:2:30","nodeType":"YulIdentifier","src":"4382:2:30"},"nativeSrc":"4382:32:30","nodeType":"YulFunctionCall","src":"4382:32:30"}],"functionName":{"name":"iszero","nativeSrc":"4375:6:30","nodeType":"YulIdentifier","src":"4375:6:30"},"nativeSrc":"4375:40:30","nodeType":"YulFunctionCall","src":"4375:40:30"},"nativeSrc":"4372:60:30","nodeType":"YulIf","src":"4372:60:30"}]},"name":"validator_revert_t_bool","nativeSrc":"4322:116:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4355:5:30","nodeType":"YulTypedName","src":"4355:5:30","type":""}],"src":"4322:116:30"},{"body":{"nativeSrc":"4504:77:30","nodeType":"YulBlock","src":"4504:77:30","statements":[{"nativeSrc":"4514:22:30","nodeType":"YulAssignment","src":"4514:22:30","value":{"arguments":[{"name":"offset","nativeSrc":"4529:6:30","nodeType":"YulIdentifier","src":"4529:6:30"}],"functionName":{"name":"mload","nativeSrc":"4523:5:30","nodeType":"YulIdentifier","src":"4523:5:30"},"nativeSrc":"4523:13:30","nodeType":"YulFunctionCall","src":"4523:13:30"},"variableNames":[{"name":"value","nativeSrc":"4514:5:30","nodeType":"YulIdentifier","src":"4514:5:30"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4569:5:30","nodeType":"YulIdentifier","src":"4569:5:30"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"4545:23:30","nodeType":"YulIdentifier","src":"4545:23:30"},"nativeSrc":"4545:30:30","nodeType":"YulFunctionCall","src":"4545:30:30"},"nativeSrc":"4545:30:30","nodeType":"YulExpressionStatement","src":"4545:30:30"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"4444:137:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4482:6:30","nodeType":"YulTypedName","src":"4482:6:30","type":""},{"name":"end","nativeSrc":"4490:3:30","nodeType":"YulTypedName","src":"4490:3:30","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4498:5:30","nodeType":"YulTypedName","src":"4498:5:30","type":""}],"src":"4444:137:30"},{"body":{"nativeSrc":"4661:271:30","nodeType":"YulBlock","src":"4661:271:30","statements":[{"body":{"nativeSrc":"4707:83:30","nodeType":"YulBlock","src":"4707:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4709:77:30","nodeType":"YulIdentifier","src":"4709:77:30"},"nativeSrc":"4709:79:30","nodeType":"YulFunctionCall","src":"4709:79:30"},"nativeSrc":"4709:79:30","nodeType":"YulExpressionStatement","src":"4709:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4682:7:30","nodeType":"YulIdentifier","src":"4682:7:30"},{"name":"headStart","nativeSrc":"4691:9:30","nodeType":"YulIdentifier","src":"4691:9:30"}],"functionName":{"name":"sub","nativeSrc":"4678:3:30","nodeType":"YulIdentifier","src":"4678:3:30"},"nativeSrc":"4678:23:30","nodeType":"YulFunctionCall","src":"4678:23:30"},{"kind":"number","nativeSrc":"4703:2:30","nodeType":"YulLiteral","src":"4703:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4674:3:30","nodeType":"YulIdentifier","src":"4674:3:30"},"nativeSrc":"4674:32:30","nodeType":"YulFunctionCall","src":"4674:32:30"},"nativeSrc":"4671:119:30","nodeType":"YulIf","src":"4671:119:30"},{"nativeSrc":"4800:125:30","nodeType":"YulBlock","src":"4800:125:30","statements":[{"nativeSrc":"4815:15:30","nodeType":"YulVariableDeclaration","src":"4815:15:30","value":{"kind":"number","nativeSrc":"4829:1:30","nodeType":"YulLiteral","src":"4829:1:30","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4819:6:30","nodeType":"YulTypedName","src":"4819:6:30","type":""}]},{"nativeSrc":"4844:71:30","nodeType":"YulAssignment","src":"4844:71:30","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4887:9:30","nodeType":"YulIdentifier","src":"4887:9:30"},{"name":"offset","nativeSrc":"4898:6:30","nodeType":"YulIdentifier","src":"4898:6:30"}],"functionName":{"name":"add","nativeSrc":"4883:3:30","nodeType":"YulIdentifier","src":"4883:3:30"},"nativeSrc":"4883:22:30","nodeType":"YulFunctionCall","src":"4883:22:30"},{"name":"dataEnd","nativeSrc":"4907:7:30","nodeType":"YulIdentifier","src":"4907:7:30"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"4854:28:30","nodeType":"YulIdentifier","src":"4854:28:30"},"nativeSrc":"4854:61:30","nodeType":"YulFunctionCall","src":"4854:61:30"},"variableNames":[{"name":"value0","nativeSrc":"4844:6:30","nodeType":"YulIdentifier","src":"4844:6:30"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"4587:345:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4631:9:30","nodeType":"YulTypedName","src":"4631:9:30","type":""},{"name":"dataEnd","nativeSrc":"4642:7:30","nodeType":"YulTypedName","src":"4642:7:30","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4654:6:30","nodeType":"YulTypedName","src":"4654:6:30","type":""}],"src":"4587:345:30"},{"body":{"nativeSrc":"5044:59:30","nodeType":"YulBlock","src":"5044:59:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5066:6:30","nodeType":"YulIdentifier","src":"5066:6:30"},{"kind":"number","nativeSrc":"5074:1:30","nodeType":"YulLiteral","src":"5074:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5062:3:30","nodeType":"YulIdentifier","src":"5062:3:30"},"nativeSrc":"5062:14:30","nodeType":"YulFunctionCall","src":"5062:14:30"},{"hexValue":"5472616e73666572204661696c6564","kind":"string","nativeSrc":"5078:17:30","nodeType":"YulLiteral","src":"5078:17:30","type":"","value":"Transfer Failed"}],"functionName":{"name":"mstore","nativeSrc":"5055:6:30","nodeType":"YulIdentifier","src":"5055:6:30"},"nativeSrc":"5055:41:30","nodeType":"YulFunctionCall","src":"5055:41:30"},"nativeSrc":"5055:41:30","nodeType":"YulExpressionStatement","src":"5055:41:30"}]},"name":"store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f","nativeSrc":"4938:165:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5036:6:30","nodeType":"YulTypedName","src":"5036:6:30","type":""}],"src":"4938:165:30"},{"body":{"nativeSrc":"5255:220:30","nodeType":"YulBlock","src":"5255:220:30","statements":[{"nativeSrc":"5265:74:30","nodeType":"YulAssignment","src":"5265:74:30","value":{"arguments":[{"name":"pos","nativeSrc":"5331:3:30","nodeType":"YulIdentifier","src":"5331:3:30"},{"kind":"number","nativeSrc":"5336:2:30","nodeType":"YulLiteral","src":"5336:2:30","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"5272:58:30","nodeType":"YulIdentifier","src":"5272:58:30"},"nativeSrc":"5272:67:30","nodeType":"YulFunctionCall","src":"5272:67:30"},"variableNames":[{"name":"pos","nativeSrc":"5265:3:30","nodeType":"YulIdentifier","src":"5265:3:30"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5437:3:30","nodeType":"YulIdentifier","src":"5437:3:30"}],"functionName":{"name":"store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f","nativeSrc":"5348:88:30","nodeType":"YulIdentifier","src":"5348:88:30"},"nativeSrc":"5348:93:30","nodeType":"YulFunctionCall","src":"5348:93:30"},"nativeSrc":"5348:93:30","nodeType":"YulExpressionStatement","src":"5348:93:30"},{"nativeSrc":"5450:19:30","nodeType":"YulAssignment","src":"5450:19:30","value":{"arguments":[{"name":"pos","nativeSrc":"5461:3:30","nodeType":"YulIdentifier","src":"5461:3:30"},{"kind":"number","nativeSrc":"5466:2:30","nodeType":"YulLiteral","src":"5466:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5457:3:30","nodeType":"YulIdentifier","src":"5457:3:30"},"nativeSrc":"5457:12:30","nodeType":"YulFunctionCall","src":"5457:12:30"},"variableNames":[{"name":"end","nativeSrc":"5450:3:30","nodeType":"YulIdentifier","src":"5450:3:30"}]}]},"name":"abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack","nativeSrc":"5109:366:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5243:3:30","nodeType":"YulTypedName","src":"5243:3:30","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5251:3:30","nodeType":"YulTypedName","src":"5251:3:30","type":""}],"src":"5109:366:30"},{"body":{"nativeSrc":"5652:248:30","nodeType":"YulBlock","src":"5652:248:30","statements":[{"nativeSrc":"5662:26:30","nodeType":"YulAssignment","src":"5662:26:30","value":{"arguments":[{"name":"headStart","nativeSrc":"5674:9:30","nodeType":"YulIdentifier","src":"5674:9:30"},{"kind":"number","nativeSrc":"5685:2:30","nodeType":"YulLiteral","src":"5685:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5670:3:30","nodeType":"YulIdentifier","src":"5670:3:30"},"nativeSrc":"5670:18:30","nodeType":"YulFunctionCall","src":"5670:18:30"},"variableNames":[{"name":"tail","nativeSrc":"5662:4:30","nodeType":"YulIdentifier","src":"5662:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5709:9:30","nodeType":"YulIdentifier","src":"5709:9:30"},{"kind":"number","nativeSrc":"5720:1:30","nodeType":"YulLiteral","src":"5720:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5705:3:30","nodeType":"YulIdentifier","src":"5705:3:30"},"nativeSrc":"5705:17:30","nodeType":"YulFunctionCall","src":"5705:17:30"},{"arguments":[{"name":"tail","nativeSrc":"5728:4:30","nodeType":"YulIdentifier","src":"5728:4:30"},{"name":"headStart","nativeSrc":"5734:9:30","nodeType":"YulIdentifier","src":"5734:9:30"}],"functionName":{"name":"sub","nativeSrc":"5724:3:30","nodeType":"YulIdentifier","src":"5724:3:30"},"nativeSrc":"5724:20:30","nodeType":"YulFunctionCall","src":"5724:20:30"}],"functionName":{"name":"mstore","nativeSrc":"5698:6:30","nodeType":"YulIdentifier","src":"5698:6:30"},"nativeSrc":"5698:47:30","nodeType":"YulFunctionCall","src":"5698:47:30"},"nativeSrc":"5698:47:30","nodeType":"YulExpressionStatement","src":"5698:47:30"},{"nativeSrc":"5754:139:30","nodeType":"YulAssignment","src":"5754:139:30","value":{"arguments":[{"name":"tail","nativeSrc":"5888:4:30","nodeType":"YulIdentifier","src":"5888:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack","nativeSrc":"5762:124:30","nodeType":"YulIdentifier","src":"5762:124:30"},"nativeSrc":"5762:131:30","nodeType":"YulFunctionCall","src":"5762:131:30"},"variableNames":[{"name":"tail","nativeSrc":"5754:4:30","nodeType":"YulIdentifier","src":"5754:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5481:419:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5632:9:30","nodeType":"YulTypedName","src":"5632:9:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5647:4:30","nodeType":"YulTypedName","src":"5647:4:30","type":""}],"src":"5481:419:30"},{"body":{"nativeSrc":"5934:152:30","nodeType":"YulBlock","src":"5934:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5951:1:30","nodeType":"YulLiteral","src":"5951:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"5954:77:30","nodeType":"YulLiteral","src":"5954:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5944:6:30","nodeType":"YulIdentifier","src":"5944:6:30"},"nativeSrc":"5944:88:30","nodeType":"YulFunctionCall","src":"5944:88:30"},"nativeSrc":"5944:88:30","nodeType":"YulExpressionStatement","src":"5944:88:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6048:1:30","nodeType":"YulLiteral","src":"6048:1:30","type":"","value":"4"},{"kind":"number","nativeSrc":"6051:4:30","nodeType":"YulLiteral","src":"6051:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6041:6:30","nodeType":"YulIdentifier","src":"6041:6:30"},"nativeSrc":"6041:15:30","nodeType":"YulFunctionCall","src":"6041:15:30"},"nativeSrc":"6041:15:30","nodeType":"YulExpressionStatement","src":"6041:15:30"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6072:1:30","nodeType":"YulLiteral","src":"6072:1:30","type":"","value":"0"},{"kind":"number","nativeSrc":"6075:4:30","nodeType":"YulLiteral","src":"6075:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6065:6:30","nodeType":"YulIdentifier","src":"6065:6:30"},"nativeSrc":"6065:15:30","nodeType":"YulFunctionCall","src":"6065:15:30"},"nativeSrc":"6065:15:30","nodeType":"YulExpressionStatement","src":"6065:15:30"}]},"name":"panic_error_0x11","nativeSrc":"5906:180:30","nodeType":"YulFunctionDefinition","src":"5906:180:30"},{"body":{"nativeSrc":"6136:147:30","nodeType":"YulBlock","src":"6136:147:30","statements":[{"nativeSrc":"6146:25:30","nodeType":"YulAssignment","src":"6146:25:30","value":{"arguments":[{"name":"x","nativeSrc":"6169:1:30","nodeType":"YulIdentifier","src":"6169:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6151:17:30","nodeType":"YulIdentifier","src":"6151:17:30"},"nativeSrc":"6151:20:30","nodeType":"YulFunctionCall","src":"6151:20:30"},"variableNames":[{"name":"x","nativeSrc":"6146:1:30","nodeType":"YulIdentifier","src":"6146:1:30"}]},{"nativeSrc":"6180:25:30","nodeType":"YulAssignment","src":"6180:25:30","value":{"arguments":[{"name":"y","nativeSrc":"6203:1:30","nodeType":"YulIdentifier","src":"6203:1:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6185:17:30","nodeType":"YulIdentifier","src":"6185:17:30"},"nativeSrc":"6185:20:30","nodeType":"YulFunctionCall","src":"6185:20:30"},"variableNames":[{"name":"y","nativeSrc":"6180:1:30","nodeType":"YulIdentifier","src":"6180:1:30"}]},{"nativeSrc":"6214:16:30","nodeType":"YulAssignment","src":"6214:16:30","value":{"arguments":[{"name":"x","nativeSrc":"6225:1:30","nodeType":"YulIdentifier","src":"6225:1:30"},{"name":"y","nativeSrc":"6228:1:30","nodeType":"YulIdentifier","src":"6228:1:30"}],"functionName":{"name":"add","nativeSrc":"6221:3:30","nodeType":"YulIdentifier","src":"6221:3:30"},"nativeSrc":"6221:9:30","nodeType":"YulFunctionCall","src":"6221:9:30"},"variableNames":[{"name":"sum","nativeSrc":"6214:3:30","nodeType":"YulIdentifier","src":"6214:3:30"}]},{"body":{"nativeSrc":"6254:22:30","nodeType":"YulBlock","src":"6254:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6256:16:30","nodeType":"YulIdentifier","src":"6256:16:30"},"nativeSrc":"6256:18:30","nodeType":"YulFunctionCall","src":"6256:18:30"},"nativeSrc":"6256:18:30","nodeType":"YulExpressionStatement","src":"6256:18:30"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6246:1:30","nodeType":"YulIdentifier","src":"6246:1:30"},{"name":"sum","nativeSrc":"6249:3:30","nodeType":"YulIdentifier","src":"6249:3:30"}],"functionName":{"name":"gt","nativeSrc":"6243:2:30","nodeType":"YulIdentifier","src":"6243:2:30"},"nativeSrc":"6243:10:30","nodeType":"YulFunctionCall","src":"6243:10:30"},"nativeSrc":"6240:36:30","nodeType":"YulIf","src":"6240:36:30"}]},"name":"checked_add_t_uint256","nativeSrc":"6092:191:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6123:1:30","nodeType":"YulTypedName","src":"6123:1:30","type":""},{"name":"y","nativeSrc":"6126:1:30","nodeType":"YulTypedName","src":"6126:1:30","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6132:3:30","nodeType":"YulTypedName","src":"6132:3:30","type":""}],"src":"6092:191:30"},{"body":{"nativeSrc":"6471:371:30","nodeType":"YulBlock","src":"6471:371:30","statements":[{"nativeSrc":"6481:27:30","nodeType":"YulAssignment","src":"6481:27:30","value":{"arguments":[{"name":"headStart","nativeSrc":"6493:9:30","nodeType":"YulIdentifier","src":"6493:9:30"},{"kind":"number","nativeSrc":"6504:3:30","nodeType":"YulLiteral","src":"6504:3:30","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6489:3:30","nodeType":"YulIdentifier","src":"6489:3:30"},"nativeSrc":"6489:19:30","nodeType":"YulFunctionCall","src":"6489:19:30"},"variableNames":[{"name":"tail","nativeSrc":"6481:4:30","nodeType":"YulIdentifier","src":"6481:4:30"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6562:6:30","nodeType":"YulIdentifier","src":"6562:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6575:9:30","nodeType":"YulIdentifier","src":"6575:9:30"},{"kind":"number","nativeSrc":"6586:1:30","nodeType":"YulLiteral","src":"6586:1:30","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6571:3:30","nodeType":"YulIdentifier","src":"6571:3:30"},"nativeSrc":"6571:17:30","nodeType":"YulFunctionCall","src":"6571:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6518:43:30","nodeType":"YulIdentifier","src":"6518:43:30"},"nativeSrc":"6518:71:30","nodeType":"YulFunctionCall","src":"6518:71:30"},"nativeSrc":"6518:71:30","nodeType":"YulExpressionStatement","src":"6518:71:30"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6643:6:30","nodeType":"YulIdentifier","src":"6643:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6656:9:30","nodeType":"YulIdentifier","src":"6656:9:30"},{"kind":"number","nativeSrc":"6667:2:30","nodeType":"YulLiteral","src":"6667:2:30","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6652:3:30","nodeType":"YulIdentifier","src":"6652:3:30"},"nativeSrc":"6652:18:30","nodeType":"YulFunctionCall","src":"6652:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6599:43:30","nodeType":"YulIdentifier","src":"6599:43:30"},"nativeSrc":"6599:72:30","nodeType":"YulFunctionCall","src":"6599:72:30"},"nativeSrc":"6599:72:30","nodeType":"YulExpressionStatement","src":"6599:72:30"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6725:6:30","nodeType":"YulIdentifier","src":"6725:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6738:9:30","nodeType":"YulIdentifier","src":"6738:9:30"},{"kind":"number","nativeSrc":"6749:2:30","nodeType":"YulLiteral","src":"6749:2:30","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6734:3:30","nodeType":"YulIdentifier","src":"6734:3:30"},"nativeSrc":"6734:18:30","nodeType":"YulFunctionCall","src":"6734:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6681:43:30","nodeType":"YulIdentifier","src":"6681:43:30"},"nativeSrc":"6681:72:30","nodeType":"YulFunctionCall","src":"6681:72:30"},"nativeSrc":"6681:72:30","nodeType":"YulExpressionStatement","src":"6681:72:30"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"6807:6:30","nodeType":"YulIdentifier","src":"6807:6:30"},{"arguments":[{"name":"headStart","nativeSrc":"6820:9:30","nodeType":"YulIdentifier","src":"6820:9:30"},{"kind":"number","nativeSrc":"6831:2:30","nodeType":"YulLiteral","src":"6831:2:30","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6816:3:30","nodeType":"YulIdentifier","src":"6816:3:30"},"nativeSrc":"6816:18:30","nodeType":"YulFunctionCall","src":"6816:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6763:43:30","nodeType":"YulIdentifier","src":"6763:43:30"},"nativeSrc":"6763:72:30","nodeType":"YulFunctionCall","src":"6763:72:30"},"nativeSrc":"6763:72:30","nodeType":"YulExpressionStatement","src":"6763:72:30"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6289:553:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6419:9:30","nodeType":"YulTypedName","src":"6419:9:30","type":""},{"name":"value3","nativeSrc":"6431:6:30","nodeType":"YulTypedName","src":"6431:6:30","type":""},{"name":"value2","nativeSrc":"6439:6:30","nodeType":"YulTypedName","src":"6439:6:30","type":""},{"name":"value1","nativeSrc":"6447:6:30","nodeType":"YulTypedName","src":"6447:6:30","type":""},{"name":"value0","nativeSrc":"6455:6:30","nodeType":"YulTypedName","src":"6455:6:30","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6466:4:30","nodeType":"YulTypedName","src":"6466:4:30","type":""}],"src":"6289:553:30"},{"body":{"nativeSrc":"6891:190:30","nodeType":"YulBlock","src":"6891:190:30","statements":[{"nativeSrc":"6901:33:30","nodeType":"YulAssignment","src":"6901:33:30","value":{"arguments":[{"name":"value","nativeSrc":"6928:5:30","nodeType":"YulIdentifier","src":"6928:5:30"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6910:17:30","nodeType":"YulIdentifier","src":"6910:17:30"},"nativeSrc":"6910:24:30","nodeType":"YulFunctionCall","src":"6910:24:30"},"variableNames":[{"name":"value","nativeSrc":"6901:5:30","nodeType":"YulIdentifier","src":"6901:5:30"}]},{"body":{"nativeSrc":"7024:22:30","nodeType":"YulBlock","src":"7024:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7026:16:30","nodeType":"YulIdentifier","src":"7026:16:30"},"nativeSrc":"7026:18:30","nodeType":"YulFunctionCall","src":"7026:18:30"},"nativeSrc":"7026:18:30","nodeType":"YulExpressionStatement","src":"7026:18:30"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"6949:5:30","nodeType":"YulIdentifier","src":"6949:5:30"},{"kind":"number","nativeSrc":"6956:66:30","nodeType":"YulLiteral","src":"6956:66:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"6946:2:30","nodeType":"YulIdentifier","src":"6946:2:30"},"nativeSrc":"6946:77:30","nodeType":"YulFunctionCall","src":"6946:77:30"},"nativeSrc":"6943:103:30","nodeType":"YulIf","src":"6943:103:30"},{"nativeSrc":"7055:20:30","nodeType":"YulAssignment","src":"7055:20:30","value":{"arguments":[{"name":"value","nativeSrc":"7066:5:30","nodeType":"YulIdentifier","src":"7066:5:30"},{"kind":"number","nativeSrc":"7073:1:30","nodeType":"YulLiteral","src":"7073:1:30","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7062:3:30","nodeType":"YulIdentifier","src":"7062:3:30"},"nativeSrc":"7062:13:30","nodeType":"YulFunctionCall","src":"7062:13:30"},"variableNames":[{"name":"ret","nativeSrc":"7055:3:30","nodeType":"YulIdentifier","src":"7055:3:30"}]}]},"name":"increment_t_uint256","nativeSrc":"6848:233:30","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6877:5:30","nodeType":"YulTypedName","src":"6877:5:30","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"6887:3:30","nodeType":"YulTypedName","src":"6887:3:30","type":""}],"src":"6848:233:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be >0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ec5297a8cca6abc7f664ce67ebefe3021fe9d54c302df242bd13cb56e6cdaab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer Failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063151a631214610046578063affed0e014610076578063b1c2558614610094575b600080fd5b610060600480360381019061005b9190610333565b6100b0565b60405161006d919061038c565b60405180910390f35b61007e6100d5565b60405161008b919061038c565b60405180910390f35b6100ae60048036038101906100a991906103d3565b6100db565b005b6001602052816000526040600020602052806000526040600020600091509150505481565b60005481565b6000811161011e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011590610470565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161015d9392919061049f565b6020604051808303816000875af115801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a0919061050e565b9050806101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d990610587565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026e91906105d6565b925050819055507f967ad762aa9070ada8db64577288e214771e89667066ae38e8750cb8a86c54293384846000546040516102ac949392919061060a565b60405180910390a16000808154809291906102c69061064f565b9190505550505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610300826102d5565b9050919050565b610310816102f5565b811461031b57600080fd5b50565b60008135905061032d81610307565b92915050565b6000806040838503121561034a576103496102d0565b5b60006103588582860161031e565b92505060206103698582860161031e565b9150509250929050565b6000819050919050565b61038681610373565b82525050565b60006020820190506103a1600083018461037d565b92915050565b6103b081610373565b81146103bb57600080fd5b50565b6000813590506103cd816103a7565b92915050565b600080604083850312156103ea576103e96102d0565b5b60006103f88582860161031e565b9250506020610409858286016103be565b9150509250929050565b600082825260208201905092915050565b7f416d6f756e74206d757374206265203e30000000000000000000000000000000600082015250565b600061045a601183610413565b915061046582610424565b602082019050919050565b600060208201905081810360008301526104898161044d565b9050919050565b610499816102f5565b82525050565b60006060820190506104b46000830186610490565b6104c16020830185610490565b6104ce604083018461037d565b949350505050565b60008115159050919050565b6104eb816104d6565b81146104f657600080fd5b50565b600081519050610508816104e2565b92915050565b600060208284031215610524576105236102d0565b5b6000610532848285016104f9565b91505092915050565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b6000610571600f83610413565b915061057c8261053b565b602082019050919050565b600060208201905081810360008301526105a081610564565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105e182610373565b91506105ec83610373565b9250828201905080821115610604576106036105a7565b5b92915050565b600060808201905061061f6000830187610490565b61062c6020830186610490565b610639604083018561037d565b610646606083018461037d565b95945050505050565b600061065a82610373565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361068c5761068b6105a7565b5b60018201905091905056fea26469706673582212208988431cc475bb42cdd32f32e5476f7c923b6cdd33271109eb7ee7de5ef801ae64736f6c634300081e0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x151A6312 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xB1C25586 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x333 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0xDB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP1 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x5D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x967AD762AA9070ADA8DB64577288E214771E89667066AE38E8750CB8A86C5429 CALLER DUP5 DUP5 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2C6 SWAP1 PUSH2 0x64F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x300 DUP3 PUSH2 0x2D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x310 DUP2 PUSH2 0x2F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32D DUP2 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34A JUMPI PUSH2 0x349 PUSH2 0x2D0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x358 DUP6 DUP3 DUP7 ADD PUSH2 0x31E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x369 DUP6 DUP3 DUP7 ADD PUSH2 0x31E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x386 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B0 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP2 EQ PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CD DUP2 PUSH2 0x3A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3EA JUMPI PUSH2 0x3E9 PUSH2 0x2D0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F8 DUP6 DUP3 DUP7 ADD PUSH2 0x31E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x409 DUP6 DUP3 DUP7 ADD PUSH2 0x3BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E30000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45A PUSH1 0x11 DUP4 PUSH2 0x413 JUMP JUMPDEST SWAP2 POP PUSH2 0x465 DUP3 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x489 DUP2 PUSH2 0x44D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x499 DUP2 PUSH2 0x2F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4B4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x4C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x4CE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x37D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EB DUP2 PUSH2 0x4D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x508 DUP2 PUSH2 0x4E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x524 JUMPI PUSH2 0x523 PUSH2 0x2D0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x532 DUP5 DUP3 DUP6 ADD PUSH2 0x4F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x571 PUSH1 0xF DUP4 PUSH2 0x413 JUMP JUMPDEST SWAP2 POP PUSH2 0x57C DUP3 PUSH2 0x53B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A0 DUP2 PUSH2 0x564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5E1 DUP3 PUSH2 0x373 JUMP JUMPDEST SWAP2 POP PUSH2 0x5EC DUP4 PUSH2 0x373 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x604 JUMPI PUSH2 0x603 PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x61F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x62C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x639 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x646 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x37D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65A DUP3 PUSH2 0x373 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x68C JUMPI PUSH2 0x68B PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 DUP9 NUMBER SHR 0xC4 PUSH22 0xBB42CDD32F32E5476F7C923B6CDD33271109EB7EE7DE MCOPY EXTCALL ADD 0xAE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ","sourceMap":"476:1398:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;726:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;581:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1518:354;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;726:64;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;581:20::-;;;;:::o;1518:354::-;1598:1;1591:6;:8;1583:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1630:12;1650:5;1644:25;;;1670:10;1689:4;1695:6;1644:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1630:72;;1720:7;1712:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;1789:6;1756:12;:24;1769:10;1756:24;;;;;;;;;;;;;;;:31;1781:5;1756:31;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;1810:37;1817:10;1828:5;1834:6;1841:5;;1810:37;;;;;;;;;:::i;:::-;;;;;;;;1857:5;;:7;;;;;;;;;:::i;:::-;;;;;;1573:299;1518:354;;:::o;88:117:30:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:77::-;1358:7;1387:5;1376:16;;1321:77;;;:::o;1404:118::-;1491:24;1509:5;1491:24;:::i;:::-;1486:3;1479:37;1404:118;;:::o;1528:222::-;1621:4;1659:2;1648:9;1644:18;1636:26;;1672:71;1740:1;1729:9;1725:17;1716:6;1672:71;:::i;:::-;1528:222;;;;:::o;1756:122::-;1829:24;1847:5;1829:24;:::i;:::-;1822:5;1819:35;1809:63;;1868:1;1865;1858:12;1809:63;1756:122;:::o;1884:139::-;1930:5;1968:6;1955:20;1946:29;;1984:33;2011:5;1984:33;:::i;:::-;1884:139;;;;:::o;2029:474::-;2097:6;2105;2154:2;2142:9;2133:7;2129:23;2125:32;2122:119;;;2160:79;;:::i;:::-;2122:119;2280:1;2305:53;2350:7;2341:6;2330:9;2326:22;2305:53;:::i;:::-;2295:63;;2251:117;2407:2;2433:53;2478:7;2469:6;2458:9;2454:22;2433:53;:::i;:::-;2423:63;;2378:118;2029:474;;;;;:::o;2509:169::-;2593:11;2627:6;2622:3;2615:19;2667:4;2662:3;2658:14;2643:29;;2509:169;;;;:::o;2684:167::-;2824:19;2820:1;2812:6;2808:14;2801:43;2684:167;:::o;2857:366::-;2999:3;3020:67;3084:2;3079:3;3020:67;:::i;:::-;3013:74;;3096:93;3185:3;3096:93;:::i;:::-;3214:2;3209:3;3205:12;3198:19;;2857:366;;;:::o;3229:419::-;3395:4;3433:2;3422:9;3418:18;3410:26;;3482:9;3476:4;3472:20;3468:1;3457:9;3453:17;3446:47;3510:131;3636:4;3510:131;:::i;:::-;3502:139;;3229:419;;;:::o;3654:118::-;3741:24;3759:5;3741:24;:::i;:::-;3736:3;3729:37;3654:118;;:::o;3778:442::-;3927:4;3965:2;3954:9;3950:18;3942:26;;3978:71;4046:1;4035:9;4031:17;4022:6;3978:71;:::i;:::-;4059:72;4127:2;4116:9;4112:18;4103:6;4059:72;:::i;:::-;4141;4209:2;4198:9;4194:18;4185:6;4141:72;:::i;:::-;3778:442;;;;;;:::o;4226:90::-;4260:7;4303:5;4296:13;4289:21;4278:32;;4226:90;;;:::o;4322:116::-;4392:21;4407:5;4392:21;:::i;:::-;4385:5;4382:32;4372:60;;4428:1;4425;4418:12;4372:60;4322:116;:::o;4444:137::-;4498:5;4529:6;4523:13;4514:22;;4545:30;4569:5;4545:30;:::i;:::-;4444:137;;;;:::o;4587:345::-;4654:6;4703:2;4691:9;4682:7;4678:23;4674:32;4671:119;;;4709:79;;:::i;:::-;4671:119;4829:1;4854:61;4907:7;4898:6;4887:9;4883:22;4854:61;:::i;:::-;4844:71;;4800:125;4587:345;;;;:::o;4938:165::-;5078:17;5074:1;5066:6;5062:14;5055:41;4938:165;:::o;5109:366::-;5251:3;5272:67;5336:2;5331:3;5272:67;:::i;:::-;5265:74;;5348:93;5437:3;5348:93;:::i;:::-;5466:2;5461:3;5457:12;5450:19;;5109:366;;;:::o;5481:419::-;5647:4;5685:2;5674:9;5670:18;5662:26;;5734:9;5728:4;5724:20;5720:1;5709:9;5705:17;5698:47;5762:131;5888:4;5762:131;:::i;:::-;5754:139;;5481:419;;;:::o;5906:180::-;5954:77;5951:1;5944:88;6051:4;6048:1;6041:15;6075:4;6072:1;6065:15;6092:191;6132:3;6151:20;6169:1;6151:20;:::i;:::-;6146:25;;6185:20;6203:1;6185:20;:::i;:::-;6180:25;;6228:1;6225;6221:9;6214:16;;6249:3;6246:1;6243:10;6240:36;;;6256:18;;:::i;:::-;6240:36;6092:191;;;;:::o;6289:553::-;6466:4;6504:3;6493:9;6489:19;6481:27;;6518:71;6586:1;6575:9;6571:17;6562:6;6518:71;:::i;:::-;6599:72;6667:2;6656:9;6652:18;6643:6;6599:72;:::i;:::-;6681;6749:2;6738:9;6734:18;6725:6;6681:72;:::i;:::-;6763;6831:2;6820:9;6816:18;6807:6;6763:72;:::i;:::-;6289:553;;;;;;;:::o;6848:233::-;6887:3;6910:24;6928:5;6910:24;:::i;:::-;6901:33;;6956:66;6949:5;6946:77;6943:103;;7026:18;;:::i;:::-;6943:103;7073:1;7066:5;7062:13;7055:20;;6848:233;;;:::o"},"methodIdentifiers":{"LockAmtStore(address,address)":"151a6312","lockTokens(address,uint256)":"b1c25586","nonce()":"affed0e0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"LockAmtStore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract only handles ERC20 locks; it emits the amount and a monotonically increasing nonce\",\"events\":{\"Locked(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens locked\",\"nonce\":\"Unique sequential identifier for this lock\",\"token\":\"The ERC20 token being locked\",\"user\":\"The address locking the tokens\"}}},\"kind\":\"dev\",\"methods\":{\"lockTokens(address,uint256)\":{\"details\":\"Requires prior ERC20 approval for this contract to transfer `amount` from msg.sender\",\"params\":{\"amount\":\"The amount of tokens to be locked\",\"token\":\"The address of the ERC20 token to be locked\"}}},\"stateVariables\":{\"LockAmtStore\":{\"details\":\"LockAmtStore[user][token] => amount locked\"}},\"title\":\"Source Bridge Contract\",\"version\":1},\"userdoc\":{\"events\":{\"Locked(address,address,uint256,uint256)\":{\"notice\":\"Emitted when a user locks tokens in the bridge\"}},\"kind\":\"user\",\"methods\":{\"LockAmtStore(address,address)\":{\"notice\":\"Tracks total amount locked per user per token\"},\"constructor\":{\"notice\":\"Initializes the bridge with nonce = 0\"},\"lockTokens(address,uint256)\":{\"notice\":\"Locks tokens in the bridge contract\"},\"nonce()\":{\"notice\":\"Monotonically increasing identifier for each `Locked` event\"}},\"notice\":\"Locks tokens on the source chain and emits a canonical event for off-chain relayers\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Source_bridge.sol\":\"Source_bridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/Source_bridge.sol\":{\"keccak256\":\"0x7740304ee64adcb99e4eef50fae568b07f6b09847f28ce8e79390176888af5bf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://263b33e3f9849bde47dd514c5ffd78458254e6bbac1b055df7a7263ecbbc1c31\",\"dweb:/ipfs/QmRD4Ni8a5zf9QXjDa1XGrS5DLeQpCxVTgxGxuxyzt17Uu\"]}},\"version\":1}"}}}}}