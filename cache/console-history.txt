main();    
}
    }
        process.exit(1);
        console.error("Failed:",err);
    catch(err){
    }
        console.log("500 token approved to the bridge");
        await approveTxn.wait();
        const approveTxn= await mock.approve(lockBridge,ethers.parseEther("500"));
        console.log("The Address of the lockBridge is", lockBridgeAdd);
        const lockBridgeAdd= await lockBridge.getAddress();
        await lockBridge.waitForDeployment();
        const lockBridge= await LockBridge.deploy();
        const LockBridge= await ethers.getContractFactory("Source_bridge");
        console.log("Mock token deployed at:", MockAdd);
        const MockAdd= await mock.getAddress();
        await mock.waitForDeployment();
        const mock= await Mock.deploy("MockToken","MTK",deployer.address, ethers.parseEther("1000"));
        const Mock= await ethers.ContractFactory("ERC20Mock");
        console.log("The deployer deploying the source_bridge is:", deployer.address);
        const [deployer]= await ethers.getSigners();
    try{
async function main(){
const { ethers } = require("hardhat");
main();
}
    }
        process.exit(1);
        console.error("Failed:",err);
    catch(err){
    }
        console.log("The Address of the lockBridge is", await lockBridge.getAddress());
        await lockBridge.waitForDeployment();
        const lockBridge= await LockBridge.deploy();
        const LockBridge= await ethers.getContractFactory("Source_bridge");
        console.log("The deployer deploying the source_bridge is:", deployers.address);
        const [deployers]= await ethers.getSigners();
    try{
async function main(){
const { ethers } = require("hardhat");